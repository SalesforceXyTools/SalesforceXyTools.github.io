<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://www.ibmer.info/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime ApexCreator]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-ApexCreator.html</url>
      <content type="html"><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h2 id="Auto-Create-VF-Controller-DTO-DAO-Code"><a href="#Auto-Create-VF-Controller-DTO-DAO-Code" class="headerlink" title="Auto Create VF-Controller-DTO-DAO-Code"></a>Auto Create VF-Controller-DTO-DAO-Code</h2><p>Hello,I am Exia.huang.<br>Today I will show you how to create VisualForce/Apex quickly by using SalesforceXyTools.</p>
<h2 id="There-are-5-steps"><a href="#There-are-5-steps" class="headerlink" title="There are 5 steps."></a>There are 5 steps.</h2><ol>
<li><p>Find the menu below.<br>[SFDC-XY]-&gt;[SFDC Code Creator]-&gt;[Create VisualForce/Controller/DTO/DAO Code]</p>

</li>
<li><p>Select your Sobject.<br>I will select Blog__c.</p>

</li>
<li><p>Select Custom Fields Or All Fields.</p>
<ul>
<li><p>I will select custom fields-Include Validate.</p>

</li>
<li><p>The sobject of Blog__c is as below:</p>

</li>
</ul>
</li>
<li><p>It will automatically create code like below</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">+---sfdc-xy</div><div class="line">|   \---code-creator</div><div class="line">|           Blog.page</div><div class="line">|           BlogController.cls</div><div class="line">|           BlogDao.cls</div><div class="line">|           BlogDto.cls</div><div class="line">|           BlogList.page</div><div class="line">|           BlogListController.cls</div><div class="line">|           SfdcXyController.cls</div></pre></td></tr></table></figure>

</li>
</ol>
<ol>
<li><p>Upload these code and enjoy yourself.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">   https://ap2.salesforce.com/apex/BlogList</div><div class="line">   https://ap2.salesforce.com/apex/Blog</div></pre></td></tr></table></figure>
<ul>
<li><p>Edit list of Blog__c.(Source code is BlogList.page.)</p>

</li>
<li><p>View list of Blog__c.(Source code is BlogList.page.)</p>

</li>
<li><p>Search Blog__c Data.(Source code is BlogList.page.)</p>

</li>
<li><p>New a Blog__c Data.(Source code is Blog.page.)</p>

</li>
<li><p>New a Blog__c Data.(Source code is Blog.page.)</p>

</li>
<li><p>Edit a Blog__c Data.(Source code is Blog.page.)</p>

</li>
</ul>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime Export SObject To Excel]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-ExportToExcel.html</url>
      <content type="html"><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>SalesforceXyTools Sublimeを使ってSobjectをエクセルファイルにエクスポート</p>
<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-Export-Soject-To-Excel"><a href="#SalesforceXyTools-Export-Soject-To-Excel" class="headerlink" title="SalesforceXyTools Export Soject To Excel"></a>SalesforceXyTools Export Soject To Excel</h1><p>Hello,I am Exia.huang.<br>Today I will show you how to export soject to excel.</p>
<h2 id="There-are-3-steps"><a href="#There-are-3-steps" class="headerlink" title="There are 3 steps."></a>There are 3 steps.</h2><ol>
<li><p>Find the menu below.<br>[SFDC-XY]-&gt;[SFDC Object]-&gt;[Save SFDC Object List AS Excel]</p>

</li>
<li><p>Input your save path and xlsx file name.</p>


</li>
<li><p>Open the excel file, and enjoy yourself.</p>


</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime Test Code Creator]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-TestCodeCreator.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="http://www.ibmer.info/create-test-class.html">SalesforceXyTools: Create test class </a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h2 id="Auto-Create-VF-Controller-DTO-DAO-Code"><a href="#Auto-Create-VF-Controller-DTO-DAO-Code" class="headerlink" title="Auto Create VF-Controller-DTO-DAO-Code"></a>Auto Create VF-Controller-DTO-DAO-Code</h2><p>Hello,I am Exia.huang.<br>Today I will show you how to create testclass quickly by using SalesforceXyTools.<br>And how to create to create test data quickly.</p>
<p>## </p>
<ol>
<li><p>Open the apex code, and find the menu below.<br>[SFDC-XY]-&gt;[SFDC Code Creator]-&gt;[Create Test Code]</p>


<ul>
<li>The class code which I have selected is like below.<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* <span class="doctag">@author</span> huangxy</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> with sharing <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> <span class="keyword">extends</span> <span class="title">SfdcXyController</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// DTO Bean</span></div><div class="line">        <span class="keyword">public</span> BlogDto blogDto &#123;get;set;&#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BlogController</span><span class="params">()</span> </span>&#123;</div><div class="line">            search();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span>&#123;</div><div class="line">            String id = ApexPages.currentPage().getParameters().get(<span class="string">'id'</span>);</div><div class="line">            <span class="keyword">if</span>(String.isBlank(id))&#123;</div><div class="line">                <span class="keyword">this</span>.blogDto = <span class="keyword">new</span> BlogDto();</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">this</span>.blogDto = <span class="keyword">new</span> BlogDto(BlogDao.getBlogById(id));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * upsert Dto</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> PageReference <span class="title">doSave</span><span class="params">()</span> </span>&#123;</div><div class="line">            Boolean result;</div><div class="line"></div><div class="line">            Savepoint sp = Database.setSavepoint();</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                upsert blogDto.getSobject();</div><div class="line">                result = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">catch</span>(DMLException e) &#123;</div><div class="line">                Database.rollback(sp);</div><div class="line">                System.debug(<span class="string">'saveDto DMLException:'</span> + e.getMessage());</div><div class="line">                result = <span class="keyword">false</span>;</div><div class="line">            &#125; <span class="keyword">catch</span>(Exception e) &#123;</div><div class="line">                Database.rollback(sp);</div><div class="line">                System.debug(<span class="string">'saveDto Exception:'</span> + e.getMessage());</div><div class="line">                result = <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Go Next</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> override PageReference <span class="title">doNext</span><span class="params">()</span> </span>&#123;</div><div class="line">            Boolean result = doCheck();</div><div class="line">            setNextMode(result);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Go Back</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> override PageReference <span class="title">doBack</span><span class="params">()</span> </span>&#123;</div><div class="line">            Boolean result = <span class="keyword">true</span>; </div><div class="line">            setBackMode(result);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * do Check</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> override Boolean <span class="title">doCheck</span><span class="params">()</span> </span>&#123;</div><div class="line">            Boolean result = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">```  </div><div class="line">  </div><div class="line">  * Select [Create Test Code], the test code will be created automatically like below.</div><div class="line">  ```java</div><div class="line"><span class="comment">/**</span></div><div class="line">* <span class="doctag">@author</span> huangxy</div><div class="line">*/</div><div class="line"><span class="meta">@isTest</span></div><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogControllerTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for BlogController</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_BlogController</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for doSave</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_doSave</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line">    PageReference resultDoSave = blogController.doSave();</div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for doNext</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_doNext</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line">    PageReference resultDoNext = blogController.doNext();</div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for doBack</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_doBack</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line">    PageReference resultDoBack = blogController.doBack();</div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for doCheck</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_doCheck</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line">    Boolean resultDoCheck = blogController.doCheck();</div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * This is a test method for all</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">static</span> testMethod <span class="keyword">void</span> <span class="title">test_all</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// PageReference pageRef = Page.Blog;</span></div><div class="line">        <span class="comment">// Test.setCurrentPage(pageRef);</span></div><div class="line">        <span class="comment">// pageRef.getParameters().put('param1', 'param1');</span></div><div class="line"></div><div class="line">        Test.startTest();</div><div class="line"></div><div class="line">    <span class="comment">//  test BlogController</span></div><div class="line">    BlogController blogController = <span class="keyword">new</span> BlogController();</div><div class="line"></div><div class="line">    <span class="comment">//  test doSave</span></div><div class="line">    PageReference resultDoSave = blogController.doSave();</div><div class="line"></div><div class="line">    <span class="comment">//  test doNext</span></div><div class="line">    PageReference resultDoNext = blogController.doNext();</div><div class="line"></div><div class="line">    <span class="comment">//  test doBack</span></div><div class="line">    PageReference resultDoBack = blogController.doBack();</div><div class="line"></div><div class="line">    <span class="comment">//  test doCheck</span></div><div class="line">    Boolean resultDoCheck = blogController.doCheck();</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        Test.stopTest();</div><div class="line"></div><div class="line">        <span class="comment">// Check</span></div><div class="line">        <span class="comment">// System.assert(ApexPages.hasMessages());</span></div><div class="line">        <span class="comment">// for(ApexPages.Message msg : ApexPages.getMessages()) &#123;</span></div><div class="line">        <span class="comment">//     System.assertEquals('Upload file is NULL', msg.getSummary());</span></div><div class="line">        <span class="comment">//     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());</span></div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>Insert Test Data(All Field)<br>I will select Blog__c.</p>



<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  List&lt;Blog__c&gt; blogList = <span class="keyword">new</span> List&lt;Blog__c&gt;();</div><div class="line"><span class="keyword">for</span>(Integer i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</div><div class="line">    Blog__c blog = <span class="keyword">new</span> Blog__c();</div><div class="line">    blog.comment__c = <span class="string">'CoaM5Vy'</span> + string.valueof(i) ;    <span class="comment">//評価</span></div><div class="line">    blog.comment_status__c = <span class="string">'spam'</span>;    <span class="comment">//評価ステータス</span></div><div class="line">    blog.content__c = <span class="string">'biKtXlF'</span> + string.valueof(i) ;    <span class="comment">//内容</span></div><div class="line">    blog.excerpt__c = <span class="string">'QVbhcE8'</span> + string.valueof(i) ;    <span class="comment">//概要</span></div><div class="line">    blog.status__c = <span class="string">'Draft'</span>;    <span class="comment">//ステータス</span></div><div class="line">    blog.title__c = <span class="string">'52lF1IP'</span> + string.valueof(i) ;    <span class="comment">//タイトル</span></div><div class="line">    blogList.add(blog);</div><div class="line">&#125;</div><div class="line">insert blogList;</div></pre></td></tr></table></figure>
</li>
<li><p>Insert Test Data(From SOQL) </p>



<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span>,comment__c,content__c <span class="keyword">from</span> Blog__c <span class="keyword">limit</span> <span class="number">2</span></div></pre></td></tr></table></figure>
<ul>
<li>Select [Insert Test Data(From SOQL) ] Menu, the sql will be change to apex code like below.</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">List&lt;Blog__c&gt; blogList = <span class="keyword">new</span> List&lt;Blog__c&gt;();</div><div class="line">Blog__c blog0 = <span class="keyword">new</span> Blog__c();</div><div class="line"><span class="comment">// blog0.id = 'a096F00001yVNHWQA4';    // カスタムオブジェクト ID</span></div><div class="line">blog0.name = <span class="string">'ID-0004'</span>;   <span class="comment">// ブログNo</span></div><div class="line">blog0.comment__c = <span class="string">'評価'</span>;   <span class="comment">// 評価</span></div><div class="line">blog0.content__c = <span class="string">'評価'</span>;   <span class="comment">// 内容</span></div><div class="line">blogList.add(blog0);</div><div class="line"></div><div class="line">Blog__c blog1 = <span class="keyword">new</span> Blog__c();</div><div class="line"><span class="comment">// blog1.id = 'a096F00001yVNHRQA4';    // カスタムオブジェクト ID</span></div><div class="line">blog1.name = <span class="string">'ID-0003'</span>;   <span class="comment">// ブログNo</span></div><div class="line">blog1.comment__c = <span class="string">'評価1e'</span>;   <span class="comment">// 評価</span></div><div class="line">blog1.content__c = <span class="string">'内容'</span>;   <span class="comment">// 内容</span></div><div class="line">blogList.add(blog1);</div><div class="line"></div><div class="line">upsert blogList;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime Install Help]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-Install.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-Install-Help"><a href="#SalesforceXyTools-Install-Help" class="headerlink" title="SalesforceXyTools Install Help"></a>SalesforceXyTools Install Help</h1><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><ul>
<li>Sublime Text 3 <a href="http://www.sublimetext.com/3" target="_blank" rel="external">http://www.sublimetext.com/3</a></li>
<li>Sublime Text Package Control <a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></li>
</ul>
<h3 id="Plugin-Installation-Use-Package-Control-to-Install"><a href="#Plugin-Installation-Use-Package-Control-to-Install" class="headerlink" title="Plugin Installation(Use Package Control to Install)"></a>Plugin Installation(Use Package Control to Install)</h3><ol>
<li>Open Sublime Text 3</li>
<li><p>Run <code>Package Control: Install Package</code> command</p>
<ul>
<li><a href="http://docs.sublimetext.info/en/latest/extensibility/command_palette.html" target="_blank" rel="external">Running commands from Sublime Text</a>
</li>
</ul>
</li>
<li><p>Search for <code>SalesforceXyTools</code></p>

</li>
<li><p>Hit <code>Enter</code>, That is all.</p>

</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime Mavensmate Setup]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-Mavensmate-Setup.html</url>
      <content type="html"><![CDATA[<h2 id="Use-Mavensmate-Session"><a href="#Use-Mavensmate-Session" class="headerlink" title="Use Mavensmate Session"></a>Use <a href="https://github.com/joeferraro/MavensMate-SublimeText" target="_blank" rel="external">Mavensmate</a> Session</h2><ul>
<li>If you like to use mavensmate’s setting, you can set <code>authentication</code> mavensmate.</li>
<li>mavensmate-destop v0.0.10 or below, please set mm_use_keyring true.</li>
<li>mavensmate-destop v0.0.11-beta.2 to v0.0.11-beta.7, please set mm_use_keyring false.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;authentication&quot;:&quot;mavensmate&quot;,</div></pre></td></tr></table></figure>
<p>mavensmate-destop v0.0.10 or below, please set mm_use_keyring <code>true</code>.<br>please re-auth again, Or Create project again!<br><code>This is the default value of mavensmate-destop!!!</code><br>  </p>
<p>mavensmate-destop v0.0.11-beta.2 to v0.0.11-beta.7, please set mm_use_keyring <code>false</code>.<br>please re-auth again, Or Create project again!<br>  </p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools Sublime Install Help Old Manual]]></title>
      <url>http://www.ibmer.info/SalesforceXyTools-Sublime-Install-Old-Manual.html</url>
      <content type="html"><![CDATA[<h1 id="This-is-an-old-manual-please-use-the-new-one-blow"><a href="#This-is-an-old-manual-please-use-the-new-one-blow" class="headerlink" title="This is an old manual, please use the new one blow."></a>This is an old manual, please use the new one blow.</h1><a href="/SalesforceXyTools-Sublime-Install.html" title="SalesforceXyTools Sublime Install Help">SalesforceXyTools Sublime Install Help</a>
<p>#Github下载链接  SalesforceXyTools.sublime-package<br><a href="https://github.com/exiahuang/SalesforceXyTools/releases" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyTools/releases</a></p>
<p>#Ibmer.Info地址<br><a href="http://www.ibmer.info/salesforcexytools.html">http://www.ibmer.info/salesforcexytools.html</a></p>
<p>#GitHub地址<br><a href="https://github.com/exiahuang/SalesforceXyTools" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyTools</a></p>
<h1 id="install-SalesforceXyTools-sublime-package"><a href="#install-SalesforceXyTools-sublime-package" class="headerlink" title="install SalesforceXyTools.sublime-package"></a>install SalesforceXyTools.sublime-package</h1><ol>
<li>Open sublime Text, Click the Preferences &gt; Browse Packages… menu</li>
<li>Browse up a folder and then into the Installed Packages/ folder</li>
<li>Download Package <a href="https://github.com/exiahuang/SalesforceXyTools/releases" target="_blank" rel="external">SalesforceXyTools.sublime-package</a> and copy it into the Installed Packages/ directory</li>
<li>Restart Sublime Text</li>
</ol>
<p>*Download SalesforceXyTools.sublime-packag<br><img src="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/download.jpg?raw=true" alt="download.jpg"></p>
<p>*Setup SalesforceXyTools.sublime-packag<br><img src="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/setup.jpg?raw=true" alt="setup.jpg"></p>
<p>#about mavensmate version </p>
<ul>
<li>support for <a href="https://github.com/joeferraro/MavensMate-Desktop/releases/tag/v0.0.10" target="_blank" rel="external">mavensmate v0.0.10</a>*</li>
<li>not support for v0.0.11-beta.2 above*<br><img src="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/MavensMate-Version.JPG?raw=true" alt="MavensMate-Version.JPG"></li>
</ul>
<p>#安装配置<br>1.打开Sublime安装路径下的 \Data\Installed Packages 目录，复制SalesforceXyTools.sublime-package到该目录下。<br> {Sublime Text安装路径}\Data\Installed Packages。</p>
<p>2运行Sublime， [SFDC-XY]-&gt;[Settings]-&gt;[Settings Default]复制所有内容，</p>
<p>3.打开 [SFDC-XY]-&gt;[Settings]-&gt;[Settings User]，粘贴2所复制的内容。</p>
<p>4.如果你使用mavensmate开发salesforce，那么请用默认配置即可。</p>
<p>如果你不使用mavensmate开发salesforce，那么设置”use_mavensmate_setting”:false,然后设置你的default_project and projects。</p>
<ul>
<li>请使用mavensmate v0.0.10一下版本，v0.0.11-beta.2到v0.0.11-beta.7版本暂时不支持*</li>
<li><a href="https://github.com/joeferraro/MavensMate-Desktop/releases/tag/v0.0.10" target="_blank" rel="external">mavensmate v0.0.10</a>*</li>
</ul>
<p>#インストール手順書(日本語)</p>
<p>１.SalesforceXyTools.sublime-packageをダウンロードしてください。</p>
<p><a href="https://github.com/exiahuang/SalesforceXyTools/releases" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyTools/releases</a></p>
<p>２.Sublime Text3を起動します。</p>
<p>３．メニューの「Preferences」→「Browse Packages…」を選択します。</p>
<p>「Packages」というフォルダが開かれます。<br>「Packages」の親フォルダの中に「Installed Packages」というフォルダが有ります。</p>
<p><em>パス確認{Sublime Textのインストールパス}\Data\Installed Packages。</em></p>
<p>４．「Installed Packages」フォルダの中に、先ほどダウンロードした「SalesforceXyTools.sublime-package」ファイルを入れます。</p>
<p>５．Sublime Text3を再起動すれば、SalesforceXyToolsが動作しています。</p>
<p>６．設定について、もしmavensmateを使っている場合、<code>use_mavensmate_setting</code>をTrueに設定してください。<br>　　mavensmateを使っていない場合、<code>use_mavensmate_setting</code>をFalseに設定してください。</p>
<ul>
<li><a href="https://github.com/joeferraro/MavensMate-Desktop/releases/tag/v0.0.10" target="_blank" rel="external">mavensmate v0.0.10</a>をサポートしますが、*</li>
<li>v0.0.11-beta.2 から v0.0.11-beta.7までのバージョンばしばらくサポートしません。*</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce apex updateあるいはdeleteしたらDmlExceptionが出た]]></title>
      <url>http://www.ibmer.info/sfdc-ENTITY_IS_DELETED.html</url>
      <content type="html"><![CDATA[<h3 id="Salesforce-apex-updateあるいはdeleteしたらDmlExceptionが出た"><a href="#Salesforce-apex-updateあるいはdeleteしたらDmlExceptionが出た" class="headerlink" title="Salesforce apex updateあるいはdeleteしたらDmlExceptionが出た"></a>Salesforce apex updateあるいはdeleteしたらDmlExceptionが出た</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">First error: Update failed.</div><div class="line">First exception on row 0 with id a08xxxxxxxxxxxxxxx; </div><div class="line">first error: ENTITY_IS_DELETED, entity is deleted: []</div></pre></td></tr></table></figure>
<p>削除したオブジェクトは参照でできないから。</p>
<h4 id="「ENTITY-IS-DELETED」なのどコードの意味は？"><a href="#「ENTITY-IS-DELETED」なのどコードの意味は？" class="headerlink" title="「ENTITY_IS_DELETED」なのどコードの意味は？"></a>「ENTITY_IS_DELETED」なのどコードの意味は？</h4><p><a href="https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_calls_concepts_core_data_objects.htm" target="_blank" rel="external">SFDC Developer Guide</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">You can’t reference an object that has been deleted. </div><div class="line">This status code occurs only in API version 10.0 and later. </div><div class="line">Previous releases of the API use INVALID_ID_FIELD for this error.</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SFDC </tag>
            
            <tag> Apex </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[regex expression]]></title>
      <url>http://www.ibmer.info/regex-expression.html</url>
      <content type="html"><![CDATA[<h3 id="Sublime-正则表达式-Regex-Exrpression"><a href="#Sublime-正则表达式-Regex-Exrpression" class="headerlink" title="Sublime 正则表达式, Regex Exrpression"></a>Sublime 正则表达式, Regex Exrpression</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img([^</span>&gt;</span>])*&gt;</div><div class="line"><span class="tag">&lt;<span class="name">img$1</span> /&gt;</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> IT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[dos comment]]></title>
      <url>http://www.ibmer.info/dos-comment.html</url>
      <content type="html"><![CDATA[<h3 id="Dos-BAT-Comment"><a href="#Dos-BAT-Comment" class="headerlink" title="Dos BAT Comment"></a>Dos BAT Comment</h3><ol>
<li>:: 注释内容（第一个冒号后也可以跟任何一个非字母数字的字符）</li>
<li>rem 注释内容（不能出现重定向符号和管道符号）</li>
<li>echo 注释内容（不能出现重定向符号和管道符号）〉nul</li>
<li>if not exist nul 注释内容（不能出现重定向符号和管道符号）</li>
<li>:注释内容（注释文本不能与已有标签重名）</li>
<li>%注释内容%（可以用作行间注释，不能出现重定向符号和管道符号）</li>
<li>goto 标签 注释内容（可以用作说明goto的条件和执行内容）</li>
<li>:标签 注释内容（可以用作标签下方段的执行内容）</li>
</ol>
<h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> on</div><div class="line">rem this is a comment.</div><div class="line"><span class="built_in">echo</span> this is a comment.</div><div class="line">:: this is a comment too.</div><div class="line"><span class="built_in">echo</span> this is a comment too.</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> IT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[My New Post]]></title>
      <url>http://www.ibmer.info/My-New-Post.html</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Git Help]]></title>
      <url>http://www.ibmer.info/Git-Help.html</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[1分でわかるreturn false; preventDefault(); stopPropagation() の違い]]></title>
      <url>http://www.ibmer.info/return-false-preventdefault-stoppropagation.html</url>
      <content type="html"><![CDATA[<h1 id="クリックイベントのサンプル"><a href="#クリックイベントのサンプル" class="headerlink" title="クリックイベントのサンプル"></a>クリックイベントのサンプル</h1><p>.innerを子、.outerを親にしてそれぞれにクリックイベントのサンプルを作成した。リンクをクリックするとalertの”.inner”, “.outer”が表示されてからiwb.jpに遷移する。</p>
<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>$(“.inner”).click(function(){<br>    alert(“.inner”);<br>});</p>
<p>$(“.outer”).click(function(){<br>    alert(“.outer”);<br>});<br>alertの”.inner”, “.outer”が表示されてからiwb.jpに遷移するサンプル</p>
<p>preventDefault()</p>
<p>preventDefault()を使用するとリンクの遷移などのイベントを無効にできる。</p>
<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>$(“.inner”).click(function(e){<br>    e.preventDefault();<br>    alert(“.inner”);<br>});</p>
<p>$(“.outer”).click(function(){<br>    alert(“.outer”);<br>});<br>preventDefault()のサンプル</p>
<p>stopPropagation()</p>
<p>stopPropagation()を使用するとイベント伝播をキャンセルできる。alertの”.inner”は表示されるが”.outer”は表示されない。リンク遷移は有効。</p>
<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>$(“.inner”).click(function(e){<br>    e.stopPropagation();<br>    alert(“.inner”);<br>});</p>
<p>$(“.outer”).click(function(){<br>    alert(“.outer”);<br>});<br>stopPropagation()のサンプル</p>
<p>preventDefault()+stopPropagation()</p>
<p>preventDefault()とstopPropagation()は併用可能。この場合alertで”.inner”は表示されるが”.outer”は表示されずリンクの遷移も発生しない。</p>
<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>$(“.inner”).click(function(e){<br>    e.preventDefault();<br>    e.stopPropagation();<br>    alert(“.inner”);<br>});</p>
<p>$(“.outer”).click(function(){<br>    alert(“.outer”);<br>});<br>preventDefault()+stopPropagation()のサンプル</p>
<p>return false</p>
<p>return falseはそれが記述された箇所を読み込んだ時点で以降の処理がすべてなくなる。イベント伝播（バブリング）も発生しない。よって.innerをクリックした場合は”.inner”と”.outer”の両方が表示されずリンクの遷移も発生しない。</p>
<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>$(“.inner”).click(function(){<br>    return false;<br>    alert(“.inner”);<br>});</p>
<p>$(“.outer”).click(function(){<br>    alert(“.outer”);<br>});<br>return falseのサンプル</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce Sites Profile ゲストプロファイル]]></title>
      <url>http://www.ibmer.info/salesforce-sites-profile.html</url>
      <content type="html"><![CDATA[<h1 id="Salesforce-Sites-Profile-ゲストプロファイル"><a href="#Salesforce-Sites-Profile-ゲストプロファイル" class="headerlink" title="Salesforce Sites Profile ゲストプロファイル"></a>Salesforce Sites Profile ゲストプロファイル</h1><p>Force.com Sitesを外部から閲覧するユーザにはSites用のゲストプロファイルが適用されて、その権限が細かく設定できるとのこと。[設定]→［開発］→［サイト］→サイト選択→［公開アクセス設定］の中で、今回設定したいのは、標準オブジェクト権限とカスタムオブジェクト権限の部分です。</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mavensmate-Oauth2-Url]]></title>
      <url>http://www.ibmer.info/mavensmate-oauth2-url.html</url>
      <content type="html"><![CDATA[<h1 id="Mavensmate-Oauth2-Url"><a href="#Mavensmate-Oauth2-Url" class="headerlink" title="Mavensmate-Oauth2-Url"></a>Mavensmate-Oauth2-Url</h1><h2 id="oauth2-url-is-like-below"><a href="#oauth2-url-is-like-below" class="headerlink" title="oauth2 url is like below"></a>oauth2 url is like below</h2><pre><code>https://login.salesforce.com//services/oauth2/authorize?client_id=3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7&amp;amp;redirect_uri=https%3A%2F%2Flocalhost%3A56248%2Fsfdc%2Fauth%2Fcallback&amp;amp;response_type=token&amp;amp;display=popup&amp;amp;prompt=login&amp;amp;state=%7B%22callback%22%3A%22%2Fapp%2Fproject%2Fauth%2Ffinish%22%7D
`&lt;/pre&gt;

## oauth2 url is like below

&lt;pre&gt;`https://login.salesforce.com//services/oauth2/authorize?
client_id=3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7&amp;amp;
redirect_uri=https://localhost:56248/sfdc/auth/callback&amp;amp;
response_type=token&amp;amp;
display=popup&amp;amp;
prompt=login&amp;amp;
state={&quot;callback&quot;:&quot;/app/project/auth/finish&quot;}
</code></pre><h2 id="more-help-link"><a href="#more-help-link" class="headerlink" title="more help link"></a>more help link</h2><p><a href="https://developer.salesforce.com/blogs/developer-relations/2014/01/python-and-the-force-com-rest-api-simple-simple-salesforce-example.html" target="_blank" rel="external">python-and-the-force-com-rest-api-simple-simple-salesforce-example</a><br><a href="https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/quickstart_oauth.htm" target="_blank" rel="external">salesforce quickstart_oauth</a></p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ASCII和URL对照表]]></title>
      <url>http://www.ibmer.info/ascii-url-code.html</url>
      <content type="html"><![CDATA[<pre><code>CHAR    CODE
SPACE   %20
!   %21
&quot;   %22
#  %23
$   %24
%   %25
&amp;amp;   %26
&apos;   %27
(   %28
)   %29
*   %2A
+   %2B
,   %2C
/   %2F
:   %3A
;   %3B
&amp;lt;   %3C
=   %3D
&amp;gt;   %3E
?   %3F
@   %40
[   %5B
%5C
]   %5D
^   %5E
`   %60
{   %7B
|   %7C
}   %7D
~   %7E
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[apex datatime format]]></title>
      <url>http://www.ibmer.info/apex-datatime-format.html</url>
      <content type="html"><![CDATA[<p>salesforce apex datatime format</p>
<pre><code>testDateStr = testDatetime__c.format(&apos;yyyy年M月d日&apos;);
testWeekStr = testDatetime__c.format(&apos;E&apos;);
testTimeStr = testDatetime__c.format(&apos;H:mm&apos;);
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Create test class using SalesforceXyTools]]></title>
      <url>http://www.ibmer.info/create-test-class.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h2 id="Auto-Create-VF-Controller-DTO-DAO-Code"><a href="#Auto-Create-VF-Controller-DTO-DAO-Code" class="headerlink" title="Auto Create VF-Controller-DTO-DAO-Code"></a><a href="https://github.com/exiahuang/SalesforceXyTools/wiki/Create-test-class-using-SalesforceXyTools#auto-create-vf-controller-dto-dao-code" target="_blank" rel="external"></a>Auto Create VF-Controller-DTO-DAO-Code</h2><p>Hello,I am Exia.huang. Today I will show you how to create testclass quickly by using SalesforceXyTools. And how to create to create test data quickly.</p>
<p>## </p>
<ol>
<li><p>Open the apex code, and find the menu below. [SFDC-XY]-&gt;[SFDC Code Creator]-&gt;[Create Test Code] <img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20001.jpg?raw=true" alt="SOS"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20002.jpg?raw=true" alt="SOS"></p>
<ul>
<li>The class code which I have selected is like below.<br><div class="highlight highlight-source-java"><br><pre><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"><em> @author huangxy</em></span><br><span class="pl-c"><span class="pl-c">/</span></span><br><span class="pl-k">public</span> with sharing <span class="pl-k">class</span> <span class="pl-en">BlogController</span> <span class="pl-k">extends</span> <span class="pl-e">SfdcXyController</span> {</pre></div></li>
</ul>
<p><span class="pl-c"><span class="pl-c">//</span> DTO Bean</span><br><span class="pl-k">public</span> <span class="pl-smi">BlogDto</span> blogDto {get;set;}</p>
<p><span class="pl-k">public</span> <span class="pl-en">BlogController</span>() {</p>
<pre><code>search();
</code></pre><p>}</p>
<p><span class="pl-k">private</span> <span class="pl-k">void</span> <span class="pl-en">search</span>(){</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; id &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ApexPages&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;currentPage()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getParameters()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;id&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;isBlank(id)){
    &lt;span class=&quot;pl-c1&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;blogDto &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;BlogDto&lt;/span&gt;();
}&lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt;{
    &lt;span class=&quot;pl-c1&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;blogDto &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;BlogDto&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;BlogDao&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getBlogById(id));
}
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c">     <em> upsert Dto</em></span><br><span class="pl-c">     <span class="pl-c">/</span></span><br><span class="pl-k">public</span> <span class="pl-smi">PageReference</span> <span class="pl-en">doSave</span>() {</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Boolean&lt;/span&gt; result;

&lt;span class=&quot;pl-smi&quot;&gt;Savepoint&lt;/span&gt; sp &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;setSavepoint();
&lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
    upsert blogDto&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getSobject();
    result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;
} &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;DMLException&lt;/span&gt; e) {
    &lt;span class=&quot;pl-smi&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;rollback(sp);
    &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;debug(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;saveDto DMLException:&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getMessage());
    result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;;
} &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;Exception&lt;/span&gt; e) {
    &lt;span class=&quot;pl-smi&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;rollback(sp);
    &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;debug(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;saveDto Exception:&lt;span class=&quot;pl-pds&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getMessage());
    result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;;
}
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c">     <em> Go Next</em></span><br><span class="pl-c">     <span class="pl-c">/</span></span><br><span class="pl-k">public</span> override <span class="pl-smi">PageReference</span> <span class="pl-en">doNext</span>() {</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Boolean&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; doCheck();
setNextMode(result);
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c">     <em> Go Back</em></span><br><span class="pl-c">     <span class="pl-c">/</span></span><br><span class="pl-k">public</span> override <span class="pl-smi">PageReference</span> <span class="pl-en">doBack</span>() {</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Boolean&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;; 
setBackMode(result);
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c">     <em> do Check</em></span><br><span class="pl-c">     <span class="pl-c">/</span></span><br><span class="pl-k">public</span> override <span class="pl-smi">Boolean</span> <span class="pl-en">doCheck</span>() {</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Boolean&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;

&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; result;
</code></pre><p>}<br>}<br></p>
<ul>
<li>Select [Create Test Code], the test code will be created automatically like below.<br><div class="highlight highlight-source-java"><br><pre><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"><em> @author huangxy</em></span><br><span class="pl-c"><span class="pl-c">/</span></span><br><span class="pl-k">@isTest</span><br><span class="pl-k">private</span> <span class="pl-k">class</span> <span class="pl-en">BlogControllerTest</span> {</pre></div></li>
</ul>
</li>
</ol>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for BlogController</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_BlogController</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for doSave</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_doSave</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();<br><span class="pl-smi">PageReference</span> resultDoSave <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doSave();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for doNext</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_doNext</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();<br><span class="pl-smi">PageReference</span> resultDoNext <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doNext();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for doBack</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_doBack</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();<br><span class="pl-smi">PageReference</span> resultDoBack <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doBack();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for doCheck</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_doCheck</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();<br><span class="pl-smi">Boolean</span> resultDoCheck <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doCheck();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p><span class="pl-c"><span class="pl-c">/<em></em></span></span><br><span class="pl-c"> <em> This is a test method for all</em></span><br><span class="pl-c"> <span class="pl-c">/</span></span><br><span class="pl-k">static</span> testMethod <span class="pl-k">void</span> <span class="pl-en">test_all</span>() {</p>
<pre><code>&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; PageReference pageRef = Page.Blog;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Test.setCurrentPage(pageRef);&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; pageRef.getParameters().put(&apos;param1&apos;, &apos;param1&apos;);&lt;/span&gt;

&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;startTest();
</code></pre><p><span class="pl-c"><span class="pl-c">//</span>  test BlogController</span><br><span class="pl-smi">BlogController</span> blogController <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">BlogController</span>();</p>
<p><span class="pl-c"><span class="pl-c">//</span>  test doSave</span><br><span class="pl-smi">PageReference</span> resultDoSave <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doSave();</p>
<p><span class="pl-c"><span class="pl-c">//</span>  test doNext</span><br><span class="pl-smi">PageReference</span> resultDoNext <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doNext();</p>
<p><span class="pl-c"><span class="pl-c">//</span>  test doBack</span><br><span class="pl-smi">PageReference</span> resultDoBack <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doBack();</p>
<p><span class="pl-c"><span class="pl-c">//</span>  test doCheck</span><br><span class="pl-smi">Boolean</span> resultDoCheck <span class="pl-k">=</span> blogController<span class="pl-k">.</span>doCheck();</p>
<pre><code>&lt;span class=&quot;pl-smi&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;stopTest();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Check&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; System.assert(ApexPages.hasMessages());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; for(ApexPages.Message msg : ApexPages.getMessages()) {&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(&apos;Upload file is NULL&apos;, msg.getSummary());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;     System.assertEquals(ApexPages.Severity.ERROR, msg.getSeverity());&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; }&lt;/span&gt;
</code></pre><p>}</p>
<p>}<br></p>
<ol>
<li>Insert Test Data(All Field) I will select Blog__c. <img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20003.jpg?raw=true" alt="SOS"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20004.jpg?raw=true" alt="SOS"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20005.jpg?raw=true" alt="SOS"><div class="highlight highlight-source-java"><br><pre><span class="pl-k">List&lt;<span class="pl-smi">Blog<strong>c</strong></span>&gt;</span> blogList <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-k">List&lt;<span class="pl-smi">Blogc</span>&gt;</span>();<br><span class="pl-k">for</span>(<span class="pl-smi">Integer</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;</span><span class="pl-c1">5</span>; i<span class="pl-k">++</span>){<br><span class="pl-smi">Blog<strong>c</strong></span> blog <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">Blogc</span>();<br>blog<span class="pl-k">.</span>comment<strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>CoaM5Vy<span class="pl-pds">‘</span></span> <span class="pl-k">+</span> string<span class="pl-k">.</span>valueof(i) ;    <span class="pl-c"><span class="pl-c">//</span>評価</span><br>blog<span class="pl-k">.</span>comment_status</strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>spam<span class="pl-pds">‘</span></span>;    <span class="pl-c"><span class="pl-c">//</span>評価ステータス</span><br>blog<span class="pl-k">.</span>content<strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>biKtXlF<span class="pl-pds">‘</span></span> <span class="pl-k">+</span> string<span class="pl-k">.</span>valueof(i) ;    <span class="pl-c"><span class="pl-c">//</span>内容</span><br>blog<span class="pl-k">.</span>excerpt</strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>QVbhcE8<span class="pl-pds">‘</span></span> <span class="pl-k">+</span> string<span class="pl-k">.</span>valueof(i) ;    <span class="pl-c"><span class="pl-c">//</span>概要</span><br>blog<span class="pl-k">.</span>status<strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>Draft<span class="pl-pds">‘</span></span>;    <span class="pl-c"><span class="pl-c">//</span>ステータス</span><br>blog<span class="pl-k">.</span>title</strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>52lF1IP<span class="pl-pds">‘</span></span> <span class="pl-k">+</span> string<span class="pl-k">.</span>valueof(i) ;    <span class="pl-c"><span class="pl-c">//</span>タイトル</span><br>blogList<span class="pl-k">.</span>add(blog);<br>}<br>insert blogList;</pre><br></div></li>
<li><p>Insert Test Data(From SOQL)<img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20006.jpg?raw=true" alt="SOS"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20007.jpg?raw=true" alt="SOS"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/testcode/Image%20008.jpg?raw=true" alt="SOS"></p>
<div class="highlight highlight-source-sql"><br><pre><span class="pl-k">select</span> id,name,comment<strong>c,content</strong>c <span class="pl-k">from</span> Blog__c <span class="pl-k">limit</span> <span class="pl-c1">2</span></pre><br></div>

<ul>
<li>Select [Insert Test Data(From SOQL) ] Menu, the sql will be change to apex code like below.<br><div class="highlight highlight-source-java"><br><pre>  <span class="pl-k">List&lt;<span class="pl-smi">Blog<strong>c</strong></span>&gt;</span> blogList <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-k">List&lt;<span class="pl-smi">Blogc</span>&gt;</span>();<br><span class="pl-smi">Blog<strong>c</strong></span> blog0 <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">Blogc</span>();<br><span class="pl-c"><span class="pl-c">//</span> blog0.id = ‘a096F00001yVNHWQA4’;    // カスタムオブジェクト ID</span><br>blog0<span class="pl-k">.</span>name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>ID-0004<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> ブログNo</span><br>blog0<span class="pl-k">.</span>comment<strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>評価<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> 評価</span><br>blog0<span class="pl-k">.</span>content</strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>評価<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> 内容</span><br>blogList<span class="pl-k">.</span>add(blog0);</pre></div></li>
</ul>
<p><span class="pl-smi">Blog<strong>c</strong></span> blog1 <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-smi">Blogc</span>();<br><span class="pl-c"><span class="pl-c">//</span> blog1.id = ‘a096F00001yVNHRQA4’;    // カスタムオブジェクト ID</span><br>blog1<span class="pl-k">.</span>name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>ID-0003<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> ブログNo</span><br>blog1<span class="pl-k">.</span>comment<strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>評価1e<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> 評価</span><br>blog1<span class="pl-k">.</span>content</strong>c <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">‘</span>内容<span class="pl-pds">‘</span></span>;   <span class="pl-c"><span class="pl-c">//</span> 内容</span><br>blogList<span class="pl-k">.</span>add(blog1);</p>
<p>upsert blogList;<br></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Export Sobject To Excel By Using SalesforceXyTools]]></title>
      <url>http://www.ibmer.info/export-sobject-excel.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-Export-Soject-To-Excel"><a href="#SalesforceXyTools-Export-Soject-To-Excel" class="headerlink" title="SalesforceXyTools Export Soject To Excel"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Readme.md#salesforcexytools-export-soject-to-excel" target="_blank" rel="external"></a>SalesforceXyTools Export Soject To Excel</h1><p>Hello,I am Exia.huang. Today I will show you how to export soject to excel.</p>
<h2 id="There-are-3-steps"><a href="#There-are-3-steps" class="headerlink" title="There are 3 steps."></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Readme.md#there-are-3-steps" target="_blank" rel="external"></a>There are 3 steps.</h2><ol>
<li>Find the menu below. [SFDC-XY]-&gt;[SFDC Object]-&gt;[Save SFDC Object List AS Excel] <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20001.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20001.jpg?raw=true" alt="SOS"></a></li>
<li>Input your save path and xlsx file name. <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20002.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20002.jpg?raw=true" alt="SOS"></a></li>
</ol>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20003.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20003.jpg?raw=true" alt="SOS"></a></p>
<ol>
<li>Open the excel file, and enjoy yourself. <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20004.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20004.jpg?raw=true" alt="SOS"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20005.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20005.jpg?raw=true" alt="SOS"></a> <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/ExportToExcel/Image%20006.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/ExportToExcel/Image%20006.jpg?raw=true" alt="SOS"></a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SalesforceXyTools-install]]></title>
      <url>http://www.ibmer.info/salesforcexytools-install.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-Install-Help"><a href="#SalesforceXyTools-Install-Help" class="headerlink" title="SalesforceXyTools Install Help"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Readme.md#salesforcexytools-install-help" target="_blank" rel="external"></a>SalesforceXyTools Install Help</h1><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Readme.md#prerequisites" target="_blank" rel="external"></a>Prerequisites</h3><ul>
<li>Sublime Text 3 <a href="http://www.sublimetext.com/3" target="_blank" rel="external">http://www.sublimetext.com/3</a></li>
<li>Sublime Text Package Control <a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></li>
</ul>
<h3 id="Plugin-Installation-Use-Package-Control-to-Install"><a href="#Plugin-Installation-Use-Package-Control-to-Install" class="headerlink" title="Plugin Installation(Use Package Control to Install)"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Readme.md#plugin-installationuse-package-control-to-install" target="_blank" rel="external"></a>Plugin Installation(Use Package Control to Install)</h3><ol>
<li>Open Sublime Text 3</li>
<li><p>Run <code>Package Control: Install Package</code> command</p>
<ul>
<li><a href="http://docs.sublimetext.info/en/latest/extensibility/command_palette.html" target="_blank" rel="external">Running commands from Sublime Text</a> <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Image%20001.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/InstallHelp/Image%20001.jpg?raw=true" alt="SOS"></a></li>
</ul>
</li>
<li><p>Search for <code>SalesforceXyTools</code> <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Image%20002.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/InstallHelp/Image%20002.jpg?raw=true" alt="SOS"></a></p>
</li>
<li>Hit <code>Enter</code>, That is all. <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/InstallHelp/Image%20003.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/InstallHelp/Image%20003.jpg?raw=true" alt="SOS"></a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Auto Create VF-Controller-DTO-DAO-Code]]></title>
      <url>http://www.ibmer.info/auto-create-sfdc-code.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-1"><a href="#SalesforceXyTools-1" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><h2 id="Auto-Create-VF-Controller-DTO-DAO-Code"><a href="#Auto-Create-VF-Controller-DTO-DAO-Code" class="headerlink" title="Auto Create VF-Controller-DTO-DAO-Code"></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/Readme.md#auto-create-vf-controller-dto-dao-code" target="_blank" rel="external"></a>Auto Create VF-Controller-DTO-DAO-Code</h2><p>Hello,I am Exia.huang. Today I will show you how to create VisualForce/Apex quickly by using SalesforceXyTools.</p>
<h2 id="There-are-5-steps"><a href="#There-are-5-steps" class="headerlink" title="There are 5 steps."></a><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/Readme.md#there-are-5-steps" target="_blank" rel="external"></a>There are 5 steps.</h2><ol>
<li>Find the menu below. [SFDC-XY]-&gt;[SFDC Code Creator]-&gt;[Create VisualForce/Controller/DTO/DAO Code] <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help000.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help000.jpg?raw=true" alt="SOS"></a></li>
<li>Select your Sobject. I will select Blog__c. <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help001.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help001.jpg?raw=true" alt="SOS"></a></li>
<li><p>Select Custom Fields Or All Fields.</p>
<ul>
<li>I will select custom fields-Include Validate. <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help002.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help002.jpg?raw=true" alt="SOS"></a></li>
<li>The sobject of Blog__c is as below: <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help004.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help004.jpg?raw=true" alt="SOS"></a></li>
</ul>
</li>
<li><p>It will automatically create code like below</p>
<p>+—sfdc-xy<br>|   -–code-creator<br>|           Blog.page<br>|           BlogController.cls<br>|           BlogDao.cls<br>|           BlogDto.cls<br>|           BlogList.page<br>|           BlogListController.cls<br>|           SfdcXyController.cls<br>`<br><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help003.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help003.jpg?raw=true" alt="SOS"></a></p>
</li>
<li><p>Upload these code and enjoy yourself.<br><pre>`  <a href="https://ap2.salesforce.com/apex/BlogList" target="_blank" rel="external">https://ap2.salesforce.com/apex/BlogList</a><br>  <a href="https://ap2.salesforce.com/apex/Blog" target="_blank" rel="external">https://ap2.salesforce.com/apex/Blog</a></pre></p>
<ul>
<li>Edit list of Blog__c.(Source code is BlogList.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help005.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help005.jpg?raw=true" alt="SOS"></a></li>
<li>View list of Blog__c.(Source code is BlogList.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help006.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help006.jpg?raw=true" alt="SOS"></a></li>
<li>Search Blog__c Data.(Source code is BlogList.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help007.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help007.jpg?raw=true" alt="SOS"></a></li>
<li>New a Blog__c Data.(Source code is Blog.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help008.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help008.jpg?raw=true" alt="SOS"></a></li>
<li>New a Blog__c Data.(Source code is Blog.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help009.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help009.jpg?raw=true" alt="SOS"></a></li>
<li>Edit a Blog__c Data.(Source code is Blog.page.) <a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help010.jpg?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Auto%20Create%20VF-Controller-DTO-DAO-Code/SaleforceXyTools-Help010.jpg?raw=true" alt="SOS"></a><br>Link:</li>
</ul>
</li>
</ol>
<p><a href="http://www.ibmer.info/auto-create-sfdc-code.html">http://www.ibmer.info/auto-create-sfdc-code.html</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce快速开发工具SalesforceXyTools]]></title>
      <url>http://www.ibmer.info/salesforcexytools.html</url>
      <content type="html"><![CDATA[<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><ul>
<li><a href="http://www.ibmer.info/salesforcexytools.html">SalesforceXyTools Introduce</a></li>
<li><a href="http://www.ibmer.info/salesforcexytools-install.html">SalesforceXyTools Install</a></li>
<li><a href="http://www.ibmer.info/auto-create-sfdc-code.html">SalesforceXyTools Auto Create VF-Controller-DTO-DAO-Code</a></li>
<li><a href="http://www.ibmer.info/export-sobject-excel.html">SalesforceXyTools: Export Sobject To Excel</a></li>
<li><a href="https://packagecontrol.io/packages/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools Sublime Package</a></li>
</ul>
<h1 id="SalesforceXyTools-1"><a href="#SalesforceXyTools-1" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><p>SalesforceXyTools for Sublime Text is Rapid development tools for Salesforce Development.</p>
<ul>
<li>Auto Create Apex Test Class Code, Auto Create Test Data For Apex Test Class.</li>
<li>SFDC Dataviewer, SFDC Online Dataviewer.</li>
<li>SObject Viewer, SObject Description, Export SOjbect Fields to Excel</li>
<li>Atuo Login SFDC.</li>
<li>SOQL Query, Tooling Query, Run Apex Script.</li>
</ul>
<h2 id="Install-SalesforceXyTools-Use-Package-Control-to-Install"><a href="#Install-SalesforceXyTools-Use-Package-Control-to-Install" class="headerlink" title="Install SalesforceXyTools(Use Package Control to Install)"></a>Install SalesforceXyTools(Use Package Control to Install)</h2><p>1. Open Sublime Text 3<br>2. Run Package Control: Install Package<code>command
3\. Search for SalesforceXyTools</code><br>4. Hit <code>Enter</code></p>
<p>## </p>
<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>1.打开Sublime3</p>
<p>2运行Package Control: Install Package 命令</p>
<p>3.查找SalesforceXyTools，并回车安装。</p>
<h2 id="インストール手順書"><a href="#インストール手順書" class="headerlink" title="インストール手順書"></a>インストール手順書</h2><p>1.Sublime3を開く</p>
<p>2「Package Control: Install Package 」コメントを実行</p>
<p>3.　「SalesforceXyTools」を検索して，インストールしてください。</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><h3 id="Important-Settings"><a href="#Important-Settings" class="headerlink" title="Important Settings"></a><a href="https://github.com/exiahuang/SalesforceXyTools#important-settings" target="_blank" rel="external"></a>Important Settings</h3><h4 id="Use-Mavensmate-Session"><a href="#Use-Mavensmate-Session" class="headerlink" title="Use Mavensmate Session"></a><a href="https://github.com/exiahuang/SalesforceXyTools#use-mavensmate-session" target="_blank" rel="external"></a>Use <a href="https://github.com/joeferraro/MavensMate-Desktop/releases" target="_blank" rel="external">Mavensmate</a> Session</h4><p><strong><span style="color: #ff0000;">■Only Support for v0.0.10, or Below!!</span></strong></p>
<p><strong><span style="color: #ff0000;">■Not Support for v0.0.11-beta.2 to v0.0.11-beta.7,  because of MavensMate v0.0.11-beta.2 or above uses OAuth!</span></strong></p>
<p>You may set <code>use_mavensmate_setting</code> to a single path on your local filesystem or an array of paths. If you set <code>use_mavensmate_setting</code> true, you can use all the setting of mavensmate, you need not to set <code>projects</code> or <code>default_project</code> .</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//Only Support for v0.0.10</div><div class="line">//Not Support for v0.0.11-beta.2 to v0.0.11-beta.7</div><div class="line">&quot;use_mavensmate_setting&quot; : true</div></pre></td></tr></table></figure>

`&lt;/pre&gt;

#### [](https://github.com/exiahuang/SalesforceXyTools#use-projects-setting)Use `projects` Setting

If you set `use_mavensmate_setting` false, please set the `default_project` and `projects` as the example.

##### [](https://github.com/exiahuang/SalesforceXyTools#examples-of-projects)Examples of projects

&lt;pre&gt;`&quot;default_project&quot;:&quot;huangxy1&quot;,
 &quot;projects&quot;:
    {
        &quot;huangxy1&quot;:
        {
            &quot;loginUrl&quot;: &quot;https://login.salesforce.com&quot;,
            &quot;password&quot;: &quot;XXXXXXX&quot;,
            &quot;security_token&quot;: &quot;XXXXXXXXXXXXXXX&quot;,
            &quot;username&quot;: &quot;XXXXXXX@ibmer.info&quot;,
            &quot;api_version&quot;: 36.0,
            &quot;is_sandbox&quot;: false,
            &quot;workspace&quot;: &quot;C:/workspace/huangxy1/&quot;
        },
        &quot;huangxy2&quot;:
        {
            &quot;loginUrl&quot;: &quot;https://test.salesforce.com&quot;,
            &quot;password&quot;: &quot;XXXXXXX&quot;,
            &quot;security_token&quot;: &quot;XXXXXXX&quot;,
            &quot;username&quot;: &quot;XXXXXXX@ibmer.info&quot;,
            &quot;api_version&quot;: 36.0,
            &quot;is_sandbox&quot;: true,
            &quot;workspace&quot;: &quot;C:/workspace/huangxy2/&quot;
        }
    }
`&lt;/pre&gt;
Add your `browsers` setting as below
&lt;pre&gt;`    // Add your browser which you like!
    // examle:
    // &quot;firefox&quot;:&quot;Path of firefox!&quot;,
    // &quot;Edge&quot;:&quot;Path of Edge&quot;, or another
    &quot;browsers&quot;:
    {
        &quot;chrome&quot;: &quot;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&quot;,
        &quot;IE&quot;: &quot;C:\\Program Files\\Internet Explorer\\iexplore.exe&quot;
    },
`&lt;/pre&gt;
&lt;pre&gt;` `&lt;/pre&gt;

## Usage

#### [](https://github.com/exiahuang/SalesforceXyTools#run-soqlrun-tooling-api)Run SOQL/Run Tooling api

Select your SOQL, [SFDC-XY] -&amp;gt; [SFDC SOQL] -&amp;gt; [SOQL Query]/[Tooling Query] and run!

[![Run SOQL](https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/sfdc_soql.gif?raw=true)](https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/sfdc_soql.gif?raw=true)

#### [](https://github.com/exiahuang/SalesforceXyTools#sfdc-object-descript-save-as-excel)SFDC Object Descript, Save as Excel

Path: [SFDC-XY] -&amp;gt; [SFDC Object]

[![SFDC Object](https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/sfdc_object.gif?raw=true)](https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/sfdc_object.gif?raw=true)

#### [](https://github.com/exiahuang/SalesforceXyTools#sfdc-dataviewer)SFDC DataViewer

Path: [SFDC-XY] -&amp;gt; [SFDC Dataviewer]

[![SFDC Object](https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/dataviwer.gif?raw=true)](https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/dataviwer.gif?raw=true)

#### [](https://github.com/exiahuang/SalesforceXyTools#create-test-code)Create Test Code

Open your apex code, [SFDC-XY] -&amp;gt; [SFDC Code Creator] -&amp;gt; [Create Test Code] and you can auto creat your apex test class!!

[![Create Test Code](https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/test_class_create.gif?raw=true)](https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/test_class_create.gif?raw=true)

#### [](https://github.com/exiahuang/SalesforceXyTools#apexcontroller--viewer--testclass-quick-jump)ApexController , Viewer , TestClass Quick Jump

Right Click, and find the click!

[![Controller_VF_Jump](https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Controller_VF_Jump.gif?raw=true)](https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Controller_VF_Jump.gif?raw=true)

&amp;nbsp;

* * *

&amp;nbsp;

## 

&amp;nbsp;

## More Link About SalesforceXyTools

[https://github.com/exiahuang/SalesforceXyTools/releases](https://github.com/exiahuang/SalesforceXyTools/releases)

Ibmer.Info地址
[http://www.ibmer.info/salesforcexytools.html](http://www.ibmer.info/salesforcexytools.html)

GitHub地址
[https://github.com/exiahuang/SalesforceXyTools](https://github.com/exiahuang/SalesforceXyTools)

## Help Link

1.Auto Create Salesforce Test Code.

生成测试代码
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/test_class_create.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/test_class_create.gif)

2.Data View .

数据浏览
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/dataviwer.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/dataviwer.gif)

3.Export SFDC Object to Excel.

表结构导出Excel
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_object.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_object.gif)

4.Run SOQL/Apex.

SOQL/Apex执行
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_soql.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_soql.gif)

5.Jump between ApexController , page , TestClass

ApexController , page , TestClass相互跳转
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/Controller_VF_Jump.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/Controller_VF_Jump.gif)

6.Auto Login Project

自动登录选择的项目，可以选择浏览器
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/login_project.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/login_project.gif)

7.Soql Query.

执行Select * 语句
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/select_all.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/select_all.gif)

8.Auto Create Soql

自动创建Soql语句
[https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/auto_soql.gif](https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/auto_soql.gif)
&lt;pre&gt;` 
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceXyTools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SFDC Bluk job Error：Failed to process query: FUNCTIONALITY_NOT_ENABLED: Selecting compound data not supported in Bulk Query]]></title>
      <url>http://www.ibmer.info/sfdc-bluk-job-error.html</url>
      <content type="html"><![CDATA[<p>执行bluk job 出现下面错误。。。</p>
<p>Failed to process query: FUNCTIONALITY_NOT_ENABLED: Selecting compound data not supported in Bulk Query</p>
<p>这里有一个解决方案，是屏蔽掉address类型的字段后执行soql。。很变态的sfdc，无语了。。</p>
<p><a href="https://github.com/jsforce/jsforce/issues/380" target="_blank" rel="external">https://github.com/jsforce/jsforce/issues/380</a></p>
<p>js代码如下</p>
<p>conn.sobject(‘Account’).describe(function(ret) {<br>var fields = ret.fields.filter(function(f) {<br>return f.type !== ‘address’; // filter any fields you don’t want to include in query.<br>}).map(function(f) {<br>return f.name;<br>});<br>var soql = ‘SELECT ‘ + fields.join(‘, ‘) + ‘ FROM Account’;<br>return conn.bulk.query(soql);<br>})</p>
<p>python也是一样这样的错误。。。</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce快速开发工具SalesforceXyTools-Delete]]></title>
      <url>http://www.ibmer.info/salesforcexytools-delete.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经过了1一个多月的努力，Salesforce快速开发工具终于扔到开源社区SalesforceXyTools。</p>
<p>虽然里面还有许多Bug，不过基本好多实用的小工具也是正常能使用。</p>
<p><del>现在还不能直接通过Sublime下载，希望尽快审核通过。</del></p>
<p>&nbsp;</p>
<p>1/16号通过了Sublime的审核，现在可以直接下载了。</p>
<h2 id="通过Sublime-Package-Control安装"><a href="#通过Sublime-Package-Control安装" class="headerlink" title="通过Sublime Package Control安装"></a>通过Sublime Package Control安装</h2><p>1. Open Sublime Text 3<br>2. Run <code>Package Control: Install Package</code> command<br>3. Search for <code>SalesforceXyTools</code><br>4. Hit <code>Enter</code></p>
<p>&nbsp;</p>
<h2 id="Github下载链接"><a href="#Github下载链接" class="headerlink" title="Github下载链接"></a>Github下载链接</h2><p><a href="https://github.com/exiahuang/SalesforceXyTools/releases" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyTools/releases</a></p>
<p>Ibmer.Info地址<br><a href="http://www.ibmer.info/salesforcexytools.html">http://www.ibmer.info/salesforcexytools.html</a></p>
<p>GitHub地址<br><a href="https://github.com/exiahuang/SalesforceXyTools" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyTools</a></p>
<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>1.打开Sublime安装路径下的 \Data\Installed Packages 目录，复制SalesforceXyTools.sublime-package到该目录下。</p>
<p>{Sublime Text安装路径}\Data\Installed Packages。</p>
<p>2运行Sublime， [SFDC-XY]-&gt;[Settings]-&gt;[Settings Default]复制所有内容，</p>
<p>3.打开 [SFDC-XY]-&gt;[Settings]-&gt;[Settings User]，粘贴2所复制的内容。</p>
<p>4.如果你使用mavensmate开发salesforce，那么请用默认配置即可。</p>
<p>如果你不使用mavensmate开发salesforce，那么设置”use_mavensmate_setting”:false,然后设置你的<code>default_project</code> and <code>projects。</code></p>
<p>&nbsp;</p>
<hr>
<p>インストール手順書</p>
<p>１.<a href="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/SalesforceXyTools.sublime-package" target="_blank" rel="external">SalesforceXyTools</a>をダウンロードしてください。</p>
<p><a href="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/SalesforceXyTools.sublime-package" target="_blank" rel="external">https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/SalesforceXyTools.sublime-package</a></p>
<p>２.Sublime Text3を起動します。</p>
<p>３．メニューの「Preferences」→「Browse Packages…」を選択します。</p>
<p>「Packages」というフォルダが開かれます。<br>「Packages」の親フォルダの中に「Installed Packages」というフォルダが有ります。</p>
<p>※パス確認{Sublime Textのインストールパス}\Data\Installed Packages。</p>
<p>４．「Installed Packages」フォルダの中に、先ほどダウンロードした「SalesforceXyTools.sublime-package」ファイルを入れます。</p>
<p>５．Sublime Text3を再起動すれば、SalesforceXyToolsが動作しています。</p>
<p>&nbsp;</p>
<p>６．設定について、もしmavensmateを使っている場合、設定しなくてもよいです！！</p>
<p>mavensmateを使っていない場合、<a href="https://github.com/exiahuang/SalesforceXyToolsを参照ください。" target="_blank" rel="external">https://github.com/exiahuang/SalesforceXyToolsを参照ください。</a></p>
<hr>
<h2 id="Salesforce开源工具（SalesforceXyTools）使用说明"><a href="#Salesforce开源工具（SalesforceXyTools）使用说明" class="headerlink" title="Salesforce开源工具（SalesforceXyTools）使用说明"></a><span style="font-size: 12pt;">Salesforce开源工具（SalesforceXyTools）使用说明</span></h2><p>1.生成测试代码<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/test_class_create.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/test_class_create.gif</a></p>
<p>2.数据浏览<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/dataviwer.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/dataviwer.gif</a></p>
<p>3.表结构导出Excel<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_object.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_object.gif</a></p>
<p>4.SOQL/Apex执行<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_soql.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/sfdc_soql.gif</a></p>
<p>5.ApexController , page , TestClass相互跳转<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/Controller_VF_Jump.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/Controller_VF_Jump.gif</a></p>
<p>6.自动登录选择的项目，可以选择浏览器<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/login_project.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/login_project.gif</a></p>
<p>7.执行Select * 语句<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/select_all.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/select_all.gif</a></p>
<p>8.自动创建Soql语句<br><a href="https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/auto_soql.gif" target="_blank" rel="external">https://raw.githubusercontent.com/exiahuang/XyHelp/master/SalesforceXyTools/auto_soql.gif</a></p>
<p>&nbsp;</p>
<h1 id="SalesforceXyTools"><a href="#SalesforceXyTools" class="headerlink" title="SalesforceXyTools"></a>SalesforceXyTools</h1><p>SalesforceXyTools for Sublime Text is Rapid development tools for Salesforce Development.</p>
<ul>
<li>Auto Create Apex Test Class Code, Auto Create Test Data For Apex Test Class.</li>
<li>SFDC Dataviewer, SFDC Online Dataviewer.</li>
<li>SObject Viewer, SObject Description, Export SOjbect Fields to Excel</li>
<li>Atuo Login SFDC.</li>
<li>SOQL Query, Tooling Query, Run Apex Script.</li>
</ul>
<h2 id="Basic-on-OpenSource"><a href="#Basic-on-OpenSource" class="headerlink" title="Basic on OpenSource"></a><a href="https://github.com/exiahuang/SalesforceXyTools#basic-on-opensource" target="_blank" rel="external"></a>Basic on OpenSource</h2><ol>
<li><a href="https://github.com/jmcnamara/XlsxWriter" target="_blank" rel="external">xlsxwriter (License: BSD)</a></li>
<li><a href="https://pypi.python.org/pypi/simple-salesforce/0.72.2" target="_blank" rel="external">Simple-Salesforce (License: Apache 2.0)</a></li>
<li><a href="https://pypi.python.org/pypi/requests/2.12.3" target="_blank" rel="external">requests (License: Apache 2.0)</a><br>Issues</li>
</ol>
<p>All issues are managed by the <a href="https://github.com/exiahuang/SalesforceXyTools" target="_blank" rel="external">SalesforceXyTools</a></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a><a href="https://github.com/exiahuang/SalesforceXyTools#install" target="_blank" rel="external"></a>Install</h2><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a><a href="https://github.com/exiahuang/SalesforceXyTools#prerequisites" target="_blank" rel="external"></a>Prerequisites</h3><ul>
<li>Sublime Text 3 <a href="http://www.sublimetext.com/3" target="_blank" rel="external">http://www.sublimetext.com/3</a></li>
<li>Sublime Text Package Control <a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></li>
</ul>
<h3 id="Plugin-Installation-Use-Package-Control-to-Install"><a href="#Plugin-Installation-Use-Package-Control-to-Install" class="headerlink" title="Plugin Installation(Use Package Control to Install)"></a><a href="https://github.com/exiahuang/SalesforceXyTools#plugin-installationuse-package-control-to-install" target="_blank" rel="external"></a>Plugin Installation(Use Package Control to Install)</h3><ol>
<li>Open Sublime Text 3</li>
<li><p>Run <code>Package Control: Install Package</code> command</p>
<ul>
<li><a href="http://docs.sublimetext.info/en/latest/extensibility/command_palette.html" target="_blank" rel="external">Running commands from Sublime Text</a></li>
</ul>
</li>
<li><p>Search for <code>SalesforceXyTools</code></p>
</li>
<li>Hit <code>Enter</code></li>
</ol>
<h3 id="Plugin-Installation-Use-Source-package"><a href="#Plugin-Installation-Use-Source-package" class="headerlink" title="Plugin Installation(Use Source package)"></a><a href="https://github.com/exiahuang/SalesforceXyTools#plugin-installationuse-source-package" target="_blank" rel="external"></a>Plugin Installation(Use Source package)</h3><ol>
<li>Download <a href="https://github.com/exiahuang/SalesforceXyTools/archive/master.zip" target="_blank" rel="external">SalesforceXyTools</a></li>
<li>Open Sublime Text 3</li>
<li>Prefences -&gt; Browse Packages</li>
<li><p>Extra zip file which you download</p>
<pre><code>Extra path Example:
{Path Of Sublime Text}\Data\Packages\SalesforceXyTools

Ensure the path is correct!!
</code></pre><p>`</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a><a href="https://github.com/exiahuang/SalesforceXyTools#setup" target="_blank" rel="external"></a>Setup</h2><h3 id="Important-Settings"><a href="#Important-Settings" class="headerlink" title="Important Settings"></a><a href="https://github.com/exiahuang/SalesforceXyTools#important-settings" target="_blank" rel="external"></a>Important Settings</h3><h4 id="Use-Mavensmate-Session"><a href="#Use-Mavensmate-Session" class="headerlink" title="Use Mavensmate Session"></a><a href="https://github.com/exiahuang/SalesforceXyTools#use-mavensmate-session" target="_blank" rel="external"></a>Use <a href="https://github.com/joeferraro/MavensMate-SublimeText" target="_blank" rel="external">Mavensmate</a> Session</h4><p>You may set <code>use_mavensmate_setting</code> to a single path on your local filesystem or an array of paths. If you set <code>use_mavensmate_setting</code> true, you can use all the setting of mavensmate, you need not to set <code>projects</code> or <code>default_project</code> .</p>
<pre>`"use_mavensmate_setting" : true
`</pre>

<h4 id="Use-projects-Setting"><a href="#Use-projects-Setting" class="headerlink" title="Use projects Setting"></a><a href="https://github.com/exiahuang/SalesforceXyTools#use-projects-setting" target="_blank" rel="external"></a>Use <code>projects</code> Setting</h4><p>If you set <code>use_mavensmate_setting</code> false, please set the <code>default_project</code> and <code>projects</code> as the example.</p>
<h5 id="Examples-of-projects"><a href="#Examples-of-projects" class="headerlink" title="Examples of projects"></a><a href="https://github.com/exiahuang/SalesforceXyTools#examples-of-projects" target="_blank" rel="external"></a>Examples of projects</h5><pre>`"default_project":"huangxy1",
 "projects":
    {
        "huangxy1":
        {
            "loginUrl": "https://login.salesforce.com",
            "password": "XXXXXXX",
            "security_token": "XXXXXXXXXXXXXXX",
            "username": "XXXXXXX@ibmer.info",
            "api_version": 36.0,
            "is_sandbox": false,
            "workspace": "C:/workspace/huangxy1/"
        },
        "huangxy2":
        {
            "loginUrl": "https://test.salesforce.com",
            "password": "XXXXXXX",
            "security_token": "XXXXXXX",
            "username": "XXXXXXX@ibmer.info",
            "api_version": 36.0,
            "is_sandbox": true,
            "workspace": "C:/workspace/huangxy2/"
        }
    }
`</pre>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a><a href="https://github.com/exiahuang/SalesforceXyTools#usage" target="_blank" rel="external"></a>Usage</h2><h4 id="Run-SOQL-Run-Tooling-api"><a href="#Run-SOQL-Run-Tooling-api" class="headerlink" title="Run SOQL/Run Tooling api"></a><a href="https://github.com/exiahuang/SalesforceXyTools#run-soqlrun-tooling-api" target="_blank" rel="external"></a>Run SOQL/Run Tooling api</h4><p>Select your SOQL, [SFDC-XY] -&gt; [SFDC SOQL] -&gt; [SOQL Query]/[Tooling Query] and run!</p>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/sfdc_soql.gif?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/sfdc_soql.gif?raw=true" alt="Run SOQL"></a></p>
<h4 id="SFDC-Object-Descript-Save-as-Excel"><a href="#SFDC-Object-Descript-Save-as-Excel" class="headerlink" title="SFDC Object Descript, Save as Excel"></a><a href="https://github.com/exiahuang/SalesforceXyTools#sfdc-object-descript-save-as-excel" target="_blank" rel="external"></a>SFDC Object Descript, Save as Excel</h4><p>Path: [SFDC-XY] -&gt; [SFDC Object]</p>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/sfdc_object.gif?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/sfdc_object.gif?raw=true" alt="SFDC Object"></a></p>
<h4 id="SFDC-DataViewer"><a href="#SFDC-DataViewer" class="headerlink" title="SFDC DataViewer"></a><a href="https://github.com/exiahuang/SalesforceXyTools#sfdc-dataviewer" target="_blank" rel="external"></a>SFDC DataViewer</h4><p>Path: [SFDC-XY] -&gt; [SFDC Dataviewer]</p>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/dataviwer.gif?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/dataviwer.gif?raw=true" alt="SFDC Object"></a></p>
<h4 id="Create-Test-Code"><a href="#Create-Test-Code" class="headerlink" title="Create Test Code"></a><a href="https://github.com/exiahuang/SalesforceXyTools#create-test-code" target="_blank" rel="external"></a>Create Test Code</h4><p>Open your apex code, [SFDC-XY] -&gt; [SFDC Code Creator] -&gt; [Create Test Code] and you can auto creat your apex test class!!</p>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/test_class_create.gif?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/test_class_create.gif?raw=true" alt="Create Test Code"></a></p>
<h4 id="ApexController-Viewer-TestClass-Quick-Jump"><a href="#ApexController-Viewer-TestClass-Quick-Jump" class="headerlink" title="ApexController , Viewer , TestClass Quick Jump"></a><a href="https://github.com/exiahuang/SalesforceXyTools#apexcontroller--viewer--testclass-quick-jump" target="_blank" rel="external"></a>ApexController , Viewer , TestClass Quick Jump</h4><p>Right Click, and find the click!</p>
<p><a href="https://github.com/exiahuang/XyHelp/blob/master/SalesforceXyTools/Controller_VF_Jump.gif?raw=true" target="_blank" rel="external"><img src="https://github.com/exiahuang/XyHelp/raw/master/SalesforceXyTools/Controller_VF_Jump.gif?raw=true" alt="Controller_VF_Jump"></a></p>
<h4 id="Define-your-login-browser"><a href="#Define-your-login-browser" class="headerlink" title="Define your login browser"></a><a href="https://github.com/exiahuang/SalesforceXyTools#define-your-login-browser" target="_blank" rel="external"></a>Define your login browser</h4><p>Add your <code>browsers</code> setting as below<br><pre>`    // Add your browser which you like!</pre></p>
<pre><code>// examle:
// &quot;firefox&quot;:&quot;Path of firefox!&quot;,
// &quot;Edge&quot;:&quot;Path of Edge&quot;, or another
&quot;browsers&quot;:
{
    &quot;chrome&quot;: &quot;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&quot;,
    &quot;IE&quot;: &quot;C:\\Program Files\\Internet Explorer\\iexplore.exe&quot;
},
</code></pre></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[跨域请求Https]]></title>
      <url>http://www.ibmer.info/https.html</url>
      <content type="html"><![CDATA[<p>カスタムドメイン：あなたのコミュニティで既存のHTTPS証明書を使用</p>
<p><a href="https://help.salesforce.com/htviewsolution?id=000232390&amp;language=en_US&amp;siteLang=en_us" target="_blank" rel="external">https://help.salesforce.com/htviewsolution?id=000232390&amp;language=en_US&amp;siteLang=en_us</a></p>
<p>HTTPS 中双向认证SSL 协议的具体过程</p>
<p><a href="http://blog.csdn.net/zyw_anquan/article/details/7829053" target="_blank" rel="external">http://blog.csdn.net/zyw_anquan/article/details/7829053</a></p>
<p>OpenSSL</p>
<p><a href="http://slproweb.com/products/Win32OpenSSL.html" target="_blank" rel="external">http://slproweb.com/products/Win32OpenSSL.html</a></p>
<p><a href="http://blog.csdn.net/boss666666/article/details/10284649" target="_blank" rel="external">http://blog.csdn.net/boss666666/article/details/10284649</a></p>
<p><a href="http://blog.csdn.net/mycoolx/article/details/6730435" target="_blank" rel="external">http://blog.csdn.net/mycoolx/article/details/6730435</a></p>
<p><a href="http://rms-digicert.ne.jp/howto/csr/csr_apache.html" target="_blank" rel="external">http://rms-digicert.ne.jp/howto/csr/csr_apache.html</a></p>
<p><a href="http://blog.csdn.net/kamouswjw/article/details/39050995" target="_blank" rel="external">http://blog.csdn.net/kamouswjw/article/details/39050995</a></p>
<p><a href="http://www.cnblogs.com/vincentfu/p/5475248.html" target="_blank" rel="external">http://www.cnblogs.com/vincentfu/p/5475248.html</a></p>
<p><a href="http://blog.chinaunix.net/uid-174325-id-3563721.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-174325-id-3563721.html</a></p>
<p>自签名需要请求HPPTS的私钥，目前除了花钱认证未找到解决方案。</p>
<p>客户端对下载的文件的处理，除了ActiveXObject还有其他解决方案吗？</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Salesforce】地理位置情報項目を使って周辺検索 GMaps]]></title>
      <url>http://www.ibmer.info/Salesforce-GMaps.html</url>
      <content type="html"><![CDATA[<p>apex</p>
<blockquote>
<p>&lt;apex:page standardController=”Account” extensions=”GoogleMapCtrl”&gt;</p>
<p>&lt;head&gt;</p>
<p>&lt;script type=”text/javascript” src=”//maps.google.com/maps/api/js?sensor=false”&gt;&lt;/script&gt;</p>
<p>&lt;script type=”text/javascript” src=”<a href="https://hpneo.github.io/gmaps/gmaps.js&quot;&gt;&lt;/script&amp;gt" target="_blank" rel="external">https://hpneo.github.io/gmaps/gmaps.js&quot;&gt;&lt;/script&amp;gt</a>;</p>
<p>&lt;script type=”text/javascript” src=”<a href="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&quot;&gt;&lt;/script&amp;gt" target="_blank" rel="external">https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&quot;&gt;&lt;/script&amp;gt</a>;</p>
<p>&lt;script type=”text/javascript”&gt;</p>
<p>var map;</p>
<p>$(document).ready(function(){</p>
<p>createMap();</p>
<p>});</p>
<p>function createMap(){</p>
<p>map = new GMaps({</p>
<p>div: “#map-02”,</p>
<p>lat: “{!Account.BillingLatitude}”,</p>
<p>lng: “{!Account.BillingLongitude}”,</p>
<p>zoom: 11</p>
<p>});</p>
<p>var marks = {!jsonStr};</p>
<p>for (var i in marks) {</p>
<p>addMarker(map,marks[i]);</p>
<p>}</p>
<p>// 対象住所</p>
<p>map.addMarker({</p>
<p>lat: “{!Account.BillingLatitude}”,</p>
<p>lng: “{!Account.BillingLongitude}”,</p>
<p>icon: “{!$Resource.marker_green}”,</p>
<p>title: “{!Account.Name}”,</p>
<p>infoWindow: {</p>
<p>content: “{!Account.BillingState}{!Account.BillingCity}{!Account.BillingStreet}”</p>
<p>}</p>
<p>});</p>
<p>}</p>
<p>function addMarker( map,mark){</p>
<p>map.addMarker({</p>
<p>lat: mark.lat,</p>
<p>lng: mark.lng,</p>
<p>title: mark.title,</p>
<p>infoWindow: {</p>
<p>content: mark.content</p>
<p>}</p>
<p>});</p>
<p>}</p>
<p>&lt;/script&gt;</p>
<p>&lt;/head&gt;</p>
<p>&lt;apex:form id=”frm”&gt;</p>
<p>&lt;apex:pageBlock &gt;</p>
<p>&lt;apex:outputpanel &gt;</p>
<p>&lt;apex:pageBlockSection &gt;</p>
<p>&lt;apex:pageBlockSectionItem &gt;</p>
<p>&lt;div class=”gmaps”&gt;</p>
<p>&lt;div id=”map-02” style=”width: 990px;height: 400px”&gt;&lt;/div&gt;</p>
<p>&lt;/div&gt;</p>
<p>&lt;/apex:pageBlockSectionItem&gt;</p>
<p>&lt;/apex:pageBlockSection&gt;</p>
<p>&lt;apex:pageBlockSection &gt;</p>
<p>&lt;apex:pageBlockSectionItem labelStyle=”text-align:left”&gt;</p>
<p>&lt;apex:outputpanel &gt;</p>
<p>&lt;apex:commandButton action=”{!doZoomPuls}” value=”+” id=”pulsButton” style=”width:40px; font-weight:bold” /&gt;</p>
<p>&lt;apex:commandButton action=”{!doZoomMinus}” value=”-“ id=”minusButton” style=”width:40px;font-weight:bold”/&gt;</p>
<p>&lt;apex:outputText value=”検索範囲： “ /&gt;</p>
<p>&lt;apex:inputText id=”dist” value=”{!findDistance}” style=”width:40px;” /&gt;</p>
<p>&lt;apex:outputText value=” (km)” /&gt;</p>
<p>&lt;apex:commandButton action=”{!getMapsInfos}” value=”検索” id=”searchBtn” style=”width:40px;”/&gt;</p>
<p>&lt;/apex:outputpanel&gt;</p>
<p>&lt;/apex:pageBlockSectionItem&gt;</p>
<p>&lt;/apex:pageBlockSection&gt;</p>
<p>&lt;/apex:outputpanel&gt;</p>
<p>&lt;apex:outputpanel &gt;</p>
<p>&lt;apex:pageBlockSection &gt;</p>
<p>&lt;apex:pageBlockSectionItem &gt;</p>
<p>&lt;apex:pageBlockTable value=”{!mapDtoList}” var=”rec”&gt;</p>
<p>&lt;apex:column Style=”width:700px”&gt;</p>
<p>&lt;apex:facet name=”header”&gt;隣接住所&lt;/apex:facet&gt;</p>
<p>&lt;apex:outputlink value=”/{!rec.id}” target=”_blank”&gt;</p>
<p>&lt;apex:outputLabel value=”{!rec.content}”/&gt;</p>
<p>&lt;/apex:outputlink&gt;</p>
<p>&lt;/apex:column&gt;</p>
<p>&lt;apex:column Style=”width:100px”&gt;</p>
<p>&lt;apex:facet name=”header”&gt;距離(km)&lt;/apex:facet&gt;</p>
<p>&lt;apex:outputText value=”{!rec.calcDist}”/&gt;</p>
<p>&lt;/apex:column&gt;</p>
<p>&lt;/apex:pageBlockTable&gt;</p>
<p>&lt;/apex:pageBlockSectionItem&gt;</p>
<p>&lt;/apex:pageBlockSection&gt;</p>
<p>&lt;/apex:outputpanel&gt;</p>
<p>&lt;/apex:pageBlock&gt;</p>
<p>&lt;/apex:form&gt;</p>
<p>&lt;/apex:page&gt;<br>apex</p>
<div id="LC1" class="line">public class GoogleMapCtrl {</div>

<div id="LC2" class="line"></div>

<div id="LC3" class="line">public Account acc;</div>

<div id="LC4" class="line">// 検索範囲</div>

<div id="LC5" class="line">public decimal findDistance {get;set;}</div>

<div id="LC6" class="line">public decimal zoom {get;set;}</div>

<div id="LC7" class="line">public string jsonStr {get;set;}</div>

<div id="LC8" class="line">public list&lt;mapDto&gt; mapDtoList {get; set;}</div>

<div id="LC9" class="line"></div>

<div id="LC10" class="line">public GoogleMapCtrl(ApexPages.StandardController controller) {</div>

<div id="LC11" class="line">if(findDistance == null){</div>

<div id="LC12" class="line">this.findDistance = 10;</div>

<div id="LC13" class="line">}</div>

<div id="LC14" class="line">if(zoom == null){</div>

<div id="LC15" class="line">zoom = 12;</div>

<div id="LC16" class="line">}</div>

<div id="LC17" class="line">list&lt;string&gt; field = new list&lt;string&gt;();</div>

<div id="LC18" class="line">field.add(‘BillingLatitude’);</div>

<div id="LC19" class="line">field.add(‘BillingLongitude’);</div>

<div id="LC20" class="line">controller.addFields(field);</div>

<div id="LC21" class="line">this.acc = (Account)controller.getRecord();</div>

<div id="LC22" class="line">getMapsInfos();</div>

<div id="LC23" class="line">}</div>

<div id="LC24" class="line"></div>

<div id="LC25" class="line">/*</div>

<div id="LC26" class="line">*マップ情報を取得</div>

<div id="LC27" class="line">*/</div>

<div id="LC28" class="line">public PageReference getMapsInfos(){</div>

<div id="LC29" class="line">system.debug(‘========findDistance===========’+findDistance);</div>

<div id="LC30" class="line">decimal lat = acc.BillingLatitude;</div>

<div id="LC31" class="line">decimal lng = acc.BillingLongitude;</div>

<div id="LC32" class="line">string query = ‘’;</div>

<div id="LC33" class="line">query = ‘SELECT ‘;</div>

<div id="LC34" class="line">query += ‘id’;</div>

<div id="LC35" class="line">query += ‘,Name’;</div>

<div id="LC36" class="line">query += ‘,BillingLatitude’;</div>

<div id="LC37" class="line">query += ‘,BillingLongitude’;</div>

<div id="LC38" class="line">query += ‘,BillingStreet’;</div>

<div id="LC39" class="line">query += ‘,BillingPostalCode’;</div>

<div id="LC40" class="line">query += ‘,BillingCity’;</div>

<div id="LC41" class="line">query += ‘,BillingState’;</div>

<div id="LC42" class="line">query += ‘,BillingCountry’;</div>

<div id="LC43" class="line">query += ‘,BillingAddress’;</div>

<div id="LC44" class="line">query += ‘,DISTANCE( BillingAddress, GEOLOCATION(‘+lat+’,’+lng+’), ‘+ ‘\’’ +’km’ +’\’’ +’) DIC ‘;</div>

<div id="LC45" class="line">query += ‘FROM ‘;</div>

<div id="LC46" class="line">query += ‘Account ‘;</div>

<div id="LC47" class="line">query += ‘WHERE ‘;</div>

<div id="LC48" class="line">query += ‘DISTANCE( BillingAddress, GEOLOCATION(‘+lat+’,’+lng+’), ‘+ ‘\’’ +’km’ + ‘\’’+’) &lt;’ + string.valueof(findDistance);</div>

<div id="LC49" class="line">query += ‘ and BillingLongitude !=null and BillingLatitude != null and BillingState !=null’;</div>

<div id="LC50" class="line">query += ‘ and id !=’ + ‘\’’ + acc.id +’\’’;</div>

<div id="LC51" class="line">query += ‘ Order by ‘;</div>

<div id="LC52" class="line">query += ‘ Distance(BillingAddress, GEOLOCATION(‘+lat +’,’ + lng +’),’ + ‘\’’+’km’+’\’’+’)’;</div>

<div id="LC53" class="line">system.debug(‘======query========’+query);</div>

<div id="LC54" class="line">List&lt;Account&gt; nearAccountList = DataBase.query(query);</div>

<div id="LC55" class="line"></div>

<div id="LC56" class="line">/*</div>

<div id="LC57" class="line">List&lt;Account&gt; nearAccountList = [SELECT</div>

<div id="LC58" class="line">id,</div>

<div id="LC59" class="line">Name,</div>

<div id="LC60" class="line">BillingLatitude,</div>

<div id="LC61" class="line">BillingLongitude,</div>

<div id="LC62" class="line">BillingStreet,</div>

<div id="LC63" class="line">BillingPostalCode,</div>

<div id="LC64" class="line">BillingCity,</div>

<div id="LC65" class="line">BillingState,</div>

<div id="LC66" class="line">BillingCountry ,</div>

<div id="LC67" class="line">BillingAddress,</div>

<div id="LC68" class="line">DISTANCE( BillingAddress, GEOLOCATION(:lat, :lng), ‘km’ ) DIC</div>

<div id="LC69" class="line">FROM</div>

<div id="LC70" class="line">Account</div>

<div id="LC71" class="line">WHERE</div>

<div id="LC72" class="line">Distance(BillingAddress, GEOLOCATION(:lat, :lng), ‘km’) &lt; :findDistance</div>

<div id="LC73" class="line">and BillingLongitude !=null and BillingLatitude != null and BillingState !=null</div>

<div id="LC74" class="line">and id != :acc.id</div>

<div id="LC75" class="line">Order by</div>

<div id="LC76" class="line">Distance(BillingAddress, GEOLOCATION(:lat, :lng), ‘km’)</div>

<div id="LC77" class="line">];</div>

<div id="LC78" class="line">*/</div>

<div id="LC79" class="line"></div>

<div id="LC80" class="line">this.mapDtoList = new list&lt;mapDto&gt;();</div>

<div id="LC81" class="line">for(Account item : nearAccountList){</div>

<div id="LC82" class="line">mapDto dto = new mapDto();</div>

<div id="LC83" class="line">dto.id = item.id;</div>

<div id="LC84" class="line">dto.title = item.Name;</div>

<div id="LC85" class="line">dto.lat = item.BillingLatitude;</div>

<div id="LC86" class="line">dto.lng = item.BillingLongitude;</div>

<div id="LC87" class="line">dto.BillingState = item.BillingState;</div>

<div id="LC88" class="line">dto.BillingCity = item.BillingCity;</div>

<div id="LC89" class="line">dto.BillingStreet = item.BillingStreet;</div>

<div id="LC90" class="line">dto.content = dto.getContent();</div>

<div id="LC91" class="line">dto.calcDist = roundNumber((decimal)item.get(‘DIC’ ),2);</div>

<div id="LC92" class="line">this.mapDtoList.add(dto);</div>

<div id="LC93" class="line">}</div>

<div id="LC94" class="line"></div>

<div id="LC95" class="line">this.jsonStr = JSON.serialize(this.mapDtoList);</div>

<div id="LC96" class="line">system.debug(‘======jsonStr========’+jsonStr);</div>

<div id="LC97" class="line">return null;</div>

<div id="LC98" class="line">}</div>

<div id="LC99" class="line"></div>

<div id="LC100" class="line">public void doZoomPuls(){</div>

<div id="LC101" class="line">this.findDistance +=0.5;</div>

<div id="LC102" class="line">getMapsInfos();</div>

<div id="LC103" class="line">}</div>

<div id="LC104" class="line"></div>

<div id="LC105" class="line">public void doZoomMinus(){</div>

<div id="LC106" class="line">this.findDistance -=0.5;</div>

<div id="LC107" class="line">getMapsInfos();</div>

<div id="LC108" class="line">}</div>

<div id="LC109" class="line"></div>

<div id="LC110" class="line">public class mapDto{</div>

<div id="LC111" class="line">public String title {get;set;}</div>

<div id="LC112" class="line">public String content {get;set;}</div>

<div id="LC113" class="line">public decimal lat {get;set;}</div>

<div id="LC114" class="line">public decimal lng {get;set;}</div>

<div id="LC115" class="line">public decimal calcDist {get;set;}</div>

<div id="LC116" class="line"></div>

<div id="LC117" class="line">public string BillingState {get;set;}</div>

<div id="LC118" class="line">public string BillingCity {get;set;}</div>

<div id="LC119" class="line">public string BillingStreet {get;set;}</div>

<div id="LC120" class="line">public string id {get;set;}</div>

<div id="LC121" class="line"></div>

<div id="LC122" class="line">public mapDto(){</div>

<div id="LC123" class="line">this.id =’’;</div>

<div id="LC124" class="line">this.title = ‘’;</div>

<div id="LC125" class="line">this.content = ‘’;</div>

<div id="LC126" class="line">this.lat = 0;</div>

<div id="LC127" class="line">this.lng = 0;</div>

<div id="LC128" class="line">this.BillingState = ‘’;</div>

<div id="LC129" class="line">this.BillingCity = ‘’;</div>

<div id="LC130" class="line">this.BillingStreet = ‘’;</div>

<div id="LC131" class="line">this.calcDist =0;</div>

<div id="LC132" class="line"></div>

<div id="LC133" class="line">}</div>

<div id="LC134" class="line"></div>

<div id="LC135" class="line">public string getContent(){</div>

<div id="LC136" class="line">return this.content = this.BillingState + this.BillingCity + this.BillingStreet;</div>

<div id="LC137" class="line">}</div>

<div id="LC138" class="line">}</div>

<div id="LC139" class="line"></div>

<div id="LC140" class="line">//四捨五入</div>

<div id="LC141" class="line">public Decimal roundNumber(Decimal roundNumber , Integer decimalPlace)</div>

<div id="LC142" class="line">{</div>

<div id="LC143" class="line">if(roundNumber != null)</div>

<div id="LC144" class="line">{</div>

<div id="LC145" class="line">return roundNumber.setScale(decimalPlace, RoundingMode.HALF_UP);</div>

<div id="LC146" class="line">}</div>

<div id="LC147" class="line">else</div>

<div id="LC148" class="line">{</div>

<div id="LC149" class="line">return 0 ;</div>

<div id="LC150" class="line">}</div>

<div id="LC151" class="line">}</div>

<div id="LC152" class="line"></div>

<p><div id="LC153" class="line">}</div><br><a id="more"></a></p>
</blockquote>
<p>参考</p>
<p><a href="https://upward.jp/weblog/howtousegeolocation/" target="_blank" rel="external">https://upward.jp/weblog/howtousegeolocation/</a></p>
<p><a href="https://developer.salesforce.com/forums/?id=906F0000000AnNsIAK" target="_blank" rel="external">https://developer.salesforce.com/forums/?id=906F0000000AnNsIAK</a></p>
<p><a href="http://tyoshikawa1106.hatenablog.com/entry/2013/06/05/014128" target="_blank" rel="external">http://tyoshikawa1106.hatenablog.com/entry/2013/06/05/014128</a></p>
<p><a href="https://developer.salesforce.com/docs/atlas.ja-jp.202.0.pages.meta/pages/pages_maps.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.ja-jp.202.0.pages.meta/pages/pages_maps.htm</a></p>
<p><a href="http://www.terrasky.co.jp/blog/2015/150212_001401.php" target="_blank" rel="external">http://www.terrasky.co.jp/blog/2015/150212_001401.php</a></p>
<p><a href="https://www.synergy-marketing.co.jp/cloud/synergylead/support/faq-salesforce-google-maps/" target="_blank" rel="external">https://www.synergy-marketing.co.jp/cloud/synergylead/support/faq-salesforce-google-maps/</a></p>
<p><a href="https://developer.salesforce.com/docs/atlas.ja-jp.202.0.apexcode.meta/apexcode/apex_class_system_Address.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.ja-jp.202.0.apexcode.meta/apexcode/apex_class_system_Address.htm</a></p>
<p><a href="http://blogjp.sforce.com/2011/01/google-maps-jav.html" target="_blank" rel="external">http://blogjp.sforce.com/2011/01/google-maps-jav.html</a></p>
<p><a href="https://code-de.co/google-maps-api-multi-markers/" target="_blank" rel="external">https://code-de.co/google-maps-api-multi-markers/</a></p>
<p><a href="http://skyblues.org/arts/2777" target="_blank" rel="external">http://skyblues.org/arts/2777</a></p>
<p>住所やランドマーク名から経度、緯度を検索</p>
<p><a href="http://www.geocoding.jp/" target="_blank" rel="external">http://www.geocoding.jp/</a></p>
<p>google map 中marker图标集合</p>
<p><a href="http://www.verydemo.com/demo_c407_i2585.html" target="_blank" rel="external">http://www.verydemo.com/demo_c407_i2585.html</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce标准Object和Prefixkey]]></title>
      <url>http://www.ibmer.info/sf-obj-prefixkey.html</url>
      <content type="html"><![CDATA[<div><strong>レコード ID プレフィックスデコーダ</strong><br><br></div><br><div><br><table border="0"><br><tbody><br><tr><br><td colspan="1" rowspan="1">エンティティ</td><br><td colspan="1" rowspan="1">プレフィックス</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACCOUNT（取引先）</td><br><td colspan="1" rowspan="1">‘001’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">QUOTE</td><br><td colspan="1" rowspan="1">‘0Q0’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">NOTE</td><br><td colspan="1" rowspan="1">‘002’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CONTACT（取引先責任者）</td><br><td colspan="1" rowspan="1">‘003’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USERS</td><br><td colspan="1" rowspan="1">‘005’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY（商談）</td><br><td colspan="1" rowspan="1">‘006’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTIVITY（活動）</td><br><td colspan="1" rowspan="1">‘007’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_HISTORY</td><br><td colspan="1" rowspan="1">‘008’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FORECAST_ITEM</td><br><td colspan="1" rowspan="1">‘00A’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FILTER</td><br><td colspan="1" rowspan="1">‘00B’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DELETE_EVENT</td><br><td colspan="1" rowspan="1">‘00C’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ORGANIZATION（組織）</td><br><td colspan="1" rowspan="1">‘00D’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_ROLE</td><br><td colspan="1" rowspan="1">‘00E’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">QUEUE</td><br><td colspan="1" rowspan="1">‘00G’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">GROUPS</td><br><td colspan="1" rowspan="1">‘00G’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PARTNER</td><br><td colspan="1" rowspan="1">‘00I’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_COMPETITOR</td><br><td colspan="1" rowspan="1">‘00J’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_CONTACT_ROLE</td><br><td colspan="1" rowspan="1">‘00K’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_FIELD_DEFINITION</td><br><td colspan="1" rowspan="1">‘00N’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT（レポート）</td><br><td colspan="1" rowspan="1">‘00O’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ATTACHMENT</td><br><td colspan="1" rowspan="1">‘00P’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LEAD（リード）</td><br><td colspan="1" rowspan="1">‘00Q’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">IMPORT_QUEUE</td><br><td colspan="1" rowspan="1">‘00S’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TASK（ToDo）</td><br><td colspan="1" rowspan="1">‘00T’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EVENT（行動）</td><br><td colspan="1" rowspan="1">‘00U’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_TEMPLATE</td><br><td colspan="1" rowspan="1">‘00X’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_TEMP</td><br><td colspan="1" rowspan="1">‘00Y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">COMMENTS</td><br><td colspan="1" rowspan="1">‘00a’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_RESOURCE_LINK</td><br><td colspan="1" rowspan="1">‘00b’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TRAINING</td><br><td colspan="1" rowspan="1">‘00c’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE</td><br><td colspan="1" rowspan="1">‘00e’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_BLUESHEET</td><br><td colspan="1" rowspan="1">‘00f’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GOLDSHEET</td><br><td colspan="1" rowspan="1">‘00g’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LAYOUT</td><br><td colspan="1" rowspan="1">‘00h’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRICEBOOK_MAPPING</td><br><td colspan="1" rowspan="1">‘00i’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRICEBOOK_ENTRY_MAPPING</td><br><td colspan="1" rowspan="1">‘00j’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_LINEITEM</td><br><td colspan="1" rowspan="1">‘00k’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FOLDER</td><br><td colspan="1" rowspan="1">‘00l’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_ATTACHMENT_LOOKUP</td><br><td colspan="1" rowspan="1">‘00m’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_ATTACHMENT_ARCHIVE</td><br><td colspan="1" rowspan="1">‘00n’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LINEITEM_SCHEDULE</td><br><td colspan="1" rowspan="1">‘00o’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_TEAM_MEMBER</td><br><td colspan="1" rowspan="1">‘00p’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPP_TEAM_MEMBER</td><br><td colspan="1" rowspan="1">‘00q’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_SHARE</td><br><td colspan="1" rowspan="1">‘00r’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_SHARE_DEFAULT</td><br><td colspan="1" rowspan="1">‘00s’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPP_SHARE</td><br><td colspan="1" rowspan="1">‘00t’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPP_SHARE_DEFAULT</td><br><td colspan="1" rowspan="1">‘00u’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CAMPAIGN_MEMBER</td><br><td colspan="1" rowspan="1">‘00v’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PAYMENT_APPLICATION</td><br><td colspan="1" rowspan="1">‘00w’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BILLED_PRODUCT</td><br><td colspan="1" rowspan="1">‘00x’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PURCHASE_RULE</td><br><td colspan="1" rowspan="1">‘00y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PURCHASE_RULE_ENTRY</td><br><td colspan="1" rowspan="1">‘00z’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASE_SOLUTION</td><br><td colspan="1" rowspan="1">‘010’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">GROUP_MEMBER</td><br><td colspan="1" rowspan="1">‘011’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">RECORD_TYPE</td><br><td colspan="1" rowspan="1">‘012’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">RECORD_TYPE_PICKLIST</td><br><td colspan="1" rowspan="1">‘013’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_RECORD_TYPE</td><br><td colspan="1" rowspan="1">‘014’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DOCUMENT</td><br><td colspan="1" rowspan="1">‘015’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BRAND_TEMPLATE</td><br><td colspan="1" rowspan="1">‘016’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ENTITY_HISTORY</td><br><td colspan="1" rowspan="1">‘017’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_STATUS</td><br><td colspan="1" rowspan="1">‘018’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BUSINESS_PROCESS</td><br><td colspan="1" rowspan="1">‘019’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BUSINESS_PROCESS_PICKLIST</td><br><td colspan="1" rowspan="1">‘01A’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LAYOUT_SECTION</td><br><td colspan="1" rowspan="1">‘01B’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LAYOUT_ITEM</td><br><td colspan="1" rowspan="1">‘01C’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_LAYOUT</td><br><td colspan="1" rowspan="1">‘01G’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MAILMERGE_TEMPLATE</td><br><td colspan="1" rowspan="1">‘01H’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_ENTITY_DEFINITION</td><br><td colspan="1" rowspan="1">‘01I’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PICKLIST_MASTER</td><br><td colspan="1" rowspan="1">‘01J’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CURRENCY_TYPE</td><br><td colspan="1" rowspan="1">‘01L’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_TEAM_MEMBER</td><br><td colspan="1" rowspan="1">‘01M’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTIVE_CONTENT</td><br><td colspan="1" rowspan="1">‘01N’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_UI_CONFIGURATION</td><br><td colspan="1" rowspan="1">‘01O’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_TAB_CONFIGURATION</td><br><td colspan="1" rowspan="1">‘01P’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">WORKFLOW_RULE</td><br><td colspan="1" rowspan="1">‘01Q’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">RULE_FILTER</td><br><td colspan="1" rowspan="1">‘01R’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">RULE_FILTER_ITEM</td><br><td colspan="1" rowspan="1">‘01S’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">RULE_FILTER_ACTION</td><br><td colspan="1" rowspan="1">‘01T’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTION_ASSIGN_ESCALATE</td><br><td colspan="1" rowspan="1">‘01U’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTION_TASK</td><br><td colspan="1" rowspan="1">‘01V’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTION_EMAIL</td><br><td colspan="1" rowspan="1">‘01W’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTION_EMAIL_RECIPIENT</td><br><td colspan="1" rowspan="1">‘01X’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CAMPAIGN_MEMBER_STATUS</td><br><td colspan="1" rowspan="1">‘01Y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DASHBOARD（ダッシュボード）</td><br><td colspan="1" rowspan="1">‘01Z’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DASHBOARD_COMPONENT</td><br><td colspan="1" rowspan="1">‘01a’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FILTER_ITEM</td><br><td colspan="1" rowspan="1">‘01b’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FILTER_COLUMN</td><br><td colspan="1" rowspan="1">‘01c’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FOLDER_GROUPS</td><br><td colspan="1" rowspan="1">‘01d’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PICKLIST_SET</td><br><td colspan="1" rowspan="1">‘01e’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">WEBEX_MEETING</td><br><td colspan="1" rowspan="1">‘01f’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">API_QUERY</td><br><td colspan="1" rowspan="1">‘01g’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TRANSLATION</td><br><td colspan="1" rowspan="1">‘01h’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TRANSLATION_USER</td><br><td colspan="1" rowspan="1">‘01i’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TRANSLATION_VALUE</td><br><td colspan="1" rowspan="1">‘01j’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_FLS_ITEM</td><br><td colspan="1" rowspan="1">‘01k’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACTION_RESPONSE</td><br><td colspan="1" rowspan="1">‘01l’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BUSINESS_HOURS</td><br><td colspan="1" rowspan="1">‘01m’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASE_SHARE</td><br><td colspan="1" rowspan="1">‘01n’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LEAD_SHARE</td><br><td colspan="1" rowspan="1">‘01o’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_TAB_DEFINITION</td><br><td colspan="1" rowspan="1">‘01r’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRICEBOOK2</td><br><td colspan="1" rowspan="1">‘01s’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRODUCT2</td><br><td colspan="1" rowspan="1">‘01t’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRICEBOOK_ENTRY</td><br><td colspan="1" rowspan="1">‘01u’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRICEBOOK_SHARE</td><br><td colspan="1" rowspan="1">‘01v’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPP_UPDATE_REMINDER</td><br><td colspan="1" rowspan="1">‘01w’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPP_UPDATE_REMINDER_STATS</td><br><td colspan="1" rowspan="1">‘01x’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASE_SHARE_DEFAULT</td><br><td colspan="1" rowspan="1">‘01y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASE_ESCALATION</td><br><td colspan="1" rowspan="1">‘01z’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EVENT_ATTENDEE</td><br><td colspan="1" rowspan="1">‘020’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">QUANTITY_FORECAST</td><br><td colspan="1" rowspan="1">‘021’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FISCAL_YEAR_SETTINGS</td><br><td colspan="1" rowspan="1">‘022’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">APP_CALENDAR</td><br><td colspan="1" rowspan="1">‘023’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">APP_CALENDAR_SHARING</td><br><td colspan="1" rowspan="1">‘024’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LIST_LAYOUT_ITEM</td><br><td colspan="1" rowspan="1">‘025’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PERIOD</td><br><td colspan="1" rowspan="1">‘026’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REVENUE_FORECAST</td><br><td colspan="1" rowspan="1">‘027’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_OVERRIDE</td><br><td colspan="1" rowspan="1">‘028’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LINEITEM_OVERRIDE</td><br><td colspan="1" rowspan="1">‘029’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LEAD_SHARE_DEFAULT</td><br><td colspan="1" rowspan="1">‘02A’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LABEL_DEFINITION</td><br><td colspan="1" rowspan="1">‘02B’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LABEL_DATA</td><br><td colspan="1" rowspan="1">‘02C’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASES_HISTORY2</td><br><td colspan="1" rowspan="1">‘02D’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">HELP_SETTING</td><br><td colspan="1" rowspan="1">‘02E’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_FIELD_MAP</td><br><td colspan="1" rowspan="1">‘02F’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GOLD_PROGRAM</td><br><td colspan="1" rowspan="1">‘02H’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GOLD_INFORMATION</td><br><td colspan="1" rowspan="1">‘02I’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GOLD_CONTACT</td><br><td colspan="1" rowspan="1">‘02J’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GOLD_ACTION</td><br><td colspan="1" rowspan="1">‘02K’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_CUSTOMER_CRITERION</td><br><td colspan="1" rowspan="1">‘02L’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GREENSHEET</td><br><td colspan="1" rowspan="1">‘02M’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GREEN_GIVE_INFO</td><br><td colspan="1" rowspan="1">‘02N’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_GREEN_GET_INFO</td><br><td colspan="1" rowspan="1">‘02O’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_CONTACT_ROLE</td><br><td colspan="1" rowspan="1">‘02P’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">MH_INFORMATION</td><br><td colspan="1" rowspan="1">‘02Q’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_PREFERENCE</td><br><td colspan="1" rowspan="1">‘02R’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">HTML_COMPONENT</td><br><td colspan="1" rowspan="1">‘02S’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_PAGE</td><br><td colspan="1" rowspan="1">‘02T’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_PAGE_ITEM</td><br><td colspan="1" rowspan="1">‘02U’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PAGE_COMPONENT</td><br><td colspan="1" rowspan="1">‘02V’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_PAGE_PROFILE</td><br><td colspan="1" rowspan="1">‘02X’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_COMPONENT_DATA</td><br><td colspan="1" rowspan="1">‘02Y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACCOUNT_CONTACT_ROLE</td><br><td colspan="1" rowspan="1">‘02Z’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CONTRACT_CONTACT_ROLE</td><br><td colspan="1" rowspan="1">‘02a’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">COMPONENT_RESOURCE_LINK</td><br><td colspan="1" rowspan="1">‘02b’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DIVISION</td><br><td colspan="1" rowspan="1">‘02d’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DIVISION_WORKFLOW_RULE</td><br><td colspan="1" rowspan="1">‘02e’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DELEGATE_GROUP</td><br><td colspan="1" rowspan="1">‘02f’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DELEGATE_GROUP_MEMBER</td><br><td colspan="1" rowspan="1">‘02g’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DELEGATE_GROUP_GRANT</td><br><td colspan="1" rowspan="1">‘02h’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ASSET</td><br><td colspan="1" rowspan="1">‘02i’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_ENTITY_PERMISSIONS</td><br><td colspan="1" rowspan="1">‘02j’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LIST_LAYOUT</td><br><td colspan="1" rowspan="1">‘02k’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OUTBOUND_QUEUE</td><br><td colspan="1" rowspan="1">‘02l’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_INDEX</td><br><td colspan="1" rowspan="1">‘02m’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CATEGORY_NODE</td><br><td colspan="1" rowspan="1">‘02n’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CATEGORY_DATA</td><br><td colspan="1" rowspan="1">‘02o’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DIV_TRANSFER_EVENT</td><br><td colspan="1" rowspan="1">‘02p’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LAYOUT_ITEM_COLUMN</td><br><td colspan="1" rowspan="1">‘02q’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OPPORTUNITY_ALERT</td><br><td colspan="1" rowspan="1">‘02r’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_MESSAGE</td><br><td colspan="1" rowspan="1">‘02s’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">EMAIL_ROUTING_ADDRESS</td><br><td colspan="1" rowspan="1">‘02t’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TAB_SET</td><br><td colspan="1" rowspan="1">‘02u’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TAB_SET_MEMBER</td><br><td colspan="1" rowspan="1">‘02v’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LOGIN_IP_RANGE</td><br><td colspan="1" rowspan="1">‘02w’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LOGIN_HOURS</td><br><td colspan="1" rowspan="1">‘02x’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_AGGREGATE</td><br><td colspan="1" rowspan="1">‘02y’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_COLOR_RANGE</td><br><td colspan="1" rowspan="1">‘02z’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROFILE_TAB_SET</td><br><td colspan="1" rowspan="1">‘030’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_TAB_SET_MEMBER</td><br><td colspan="1" rowspan="1">‘031’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_TERRITORY_RULE</td><br><td colspan="1" rowspan="1">‘032’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROJECT</td><br><td colspan="1" rowspan="1">‘033’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PROJECT_MEMBER</td><br><td colspan="1" rowspan="1">‘034’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">SELF_SERVICE_USER</td><br><td colspan="1" rowspan="1">‘035’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">JOB_QUEUE</td><br><td colspan="1" rowspan="1">‘036’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_COLUMN</td><br><td colspan="1" rowspan="1">‘037’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_FILTER_ITEM</td><br><td colspan="1" rowspan="1">‘038’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_BREAK</td><br><td colspan="1" rowspan="1">‘039’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DEPENDENT_PICKLIST</td><br><td colspan="1" rowspan="1">‘03a’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PACKAGE_EXPORT</td><br><td colspan="1" rowspan="1">‘03b’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">LAYOUT_RIGHT_PANEL</td><br><td colspan="1" rowspan="1">‘03c’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_SETUP_DEFINITION</td><br><td colspan="1" rowspan="1">‘03e’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_SETUP</td><br><td colspan="1" rowspan="1">‘03f’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REPORT_PARAM</td><br><td colspan="1" rowspan="1">‘040’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_TERRITORY_ASSIGN</td><br><td colspan="1" rowspan="1">‘041’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ACC_TERR_ASSIGN_RULE_ITEM</td><br><td colspan="1" rowspan="1">‘042’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">OUTBOUND_FIELD</td><br><td colspan="1" rowspan="1">‘043’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">USER_TERRITORY</td><br><td colspan="1" rowspan="1">‘04S’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">TERRITORY</td><br><td colspan="1" rowspan="1">‘04T’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DNB_ACCOUNT_MAPPING</td><br><td colspan="1" rowspan="1">‘04U’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">DNB_FIELD</td><br><td colspan="1" rowspan="1">‘04V’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">REVENUE_FORECAST_HISTORY</td><br><td colspan="1" rowspan="1">‘04W’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">QUANTITY_FORECAST_HISTORY</td><br><td colspan="1" rowspan="1">‘04X’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CONTENTVERSION</td><br><td colspan="1" rowspan="1">‘068’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CONTENTDOCUMENT</td><br><td colspan="1" rowspan="1">‘069’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ENTITY_PERMISSION</td><br><td colspan="1" rowspan="1">‘110’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">SFDC_PARTNER</td><br><td colspan="1" rowspan="1">‘204’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">SFDC_DIVISION</td><br><td colspan="1" rowspan="1">‘208’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CASES</td><br><td colspan="1" rowspan="1">‘500’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">SOLUTION</td><br><td colspan="1" rowspan="1">‘501’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BILLING_DIVISION</td><br><td colspan="1" rowspan="1">‘600’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BILLING_ORDER</td><br><td colspan="1" rowspan="1">‘601’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CURRENCY</td><br><td colspan="1" rowspan="1">‘602’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PLAN</td><br><td colspan="1" rowspan="1">‘604’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PRODUCT</td><br><td colspan="1" rowspan="1">‘605’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">BILLING_ORDER_ITEM</td><br><td colspan="1" rowspan="1">‘606’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PLAN_PRODUCT</td><br><td colspan="1" rowspan="1">‘607’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CAMPAIGN（キャンペーン）</td><br><td colspan="1" rowspan="1">‘701’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">FIELD_HISTORY</td><br><td colspan="1" rowspan="1">‘737’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">UI_STYLE_DEFINITION</td><br><td colspan="1" rowspan="1">‘766’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">UI_STYLE</td><br><td colspan="1" rowspan="1">‘777’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CONTRACT（契約）</td><br><td colspan="1" rowspan="1">‘800’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ORDERS（注文）</td><br><td colspan="1" rowspan="1">‘801’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">ORDER_ITEM</td><br><td colspan="1" rowspan="1">‘802’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">INVOICE</td><br><td colspan="1" rowspan="1">‘803’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">INVOICE_ITEM</td><br><td colspan="1" rowspan="1">‘804’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PAYMENT</td><br><td colspan="1" rowspan="1">‘805’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">APPROVAL</td><br><td colspan="1" rowspan="1">‘806’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">URI_BLOCK_RULE</td><br><td colspan="1" rowspan="1">‘807’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">CUSTOM_ENTITY_DATA</td><br><td colspan="1" rowspan="1">‘a00’</td><br></tr><br><tr><br><td colspan="1" rowspan="1">PERMISSIONSET</td><br><td colspan="1" rowspan="1">‘0PS’</td><br></tr><br></tbody><br></table><br></div>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce通过Apex获取API名]]></title>
      <url>http://www.ibmer.info/salesforce-apex-api-get.html</url>
      <content type="html"><![CDATA[<pre>//Apex
public class Apiget{

 //表示用リストクラス
 public List&lt;apiname&gt; apinameList{get;set;}

 //データ格納用クラス
 class apiname{
 public String objectLabel{get;set;}
 public String objectName{get;set;}
 public String objectkeyPrefix{get;set;}
 }

 //コンストラクタ
 public Apiget(){

 //全オブジェクト情報取得
 MAP&lt;string,Schema.SObjectType&gt; sobMap =schema.getGlobalDescribe();
 apinameList = new List&lt;apiname&gt;();
 for(String sobStr : sobMap.keySet()){
 apiname apnameclass = new apiname();
 Schema.SObjectType sobType = sobMap.get(sobStr);
 Schema.DescribeSObjectResult sobRes = sobType.getDescribe();
 apnameclass.objectLabel = sobRes.label;
 apnameclass.objectName = sobRes.name;
 apnameclass.objectkeyPrefix = sobRes.keyPrefix;

 //カスタムオブジェクトは除く
 if(!sobRes.custom)apinameList.add(apnameclass);
 }
 }
}</pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SFDC get Exception from Trigger]]></title>
      <url>http://www.ibmer.info/sfdc-get-exception-from-trigger.html</url>
      <content type="html"><![CDATA[<p>Salesforce中如何破获Trigger的Exception呢？？</p>
<p><pre>Database.Update返回的的结果，判断是否更新成功，然后处理异常信息。<br>通过AddError就可以处理系统异常，替换成需要的信息。</pre></p>
<p><pre> if(updateList.size() &gt; 0) {<br> Database.SaveResult[] lsr = Database.Update(updateList, false);<br> for(Database.SaveResult sr : lsr){<br> if (!sr.isSuccess()) {<br> System.debug(LoggingLevel.ERROR, ‘<em>*</em> sr: ‘ + sr);<br> Payment<strong>c payment = new Payment</strong>c(id=sr.getId());<br> for(Database.Error err : sr.getErrors()) {<br> payment.addError(err.getMessage());<br> }<br> }<br> }<br> }</pre><br>&nbsp;</p>
<hr>
<p>Tip From web</p>
<p>SFDC：Apexトリガーのエラー判定について</p>
<p>Apexトリガーのafter triggerのタイミングでDML処理を実行した際に入力規則によるエラーが発生すると次のようなエラーメッセージが表示されてしまいます。</p>
<p>ちょっとした入力漏れなどで入力規則に引っかかってしまった時に、このようなエラーメッセージが表示されてしまうとちょっと残念な感じになってしまいます。</p>
<p>&nbsp;</p>
<p>この問題を回避するにはただUpdateを行うのではなく、Database.UpdateのようにDatabase ClassをつかったDML処理を実行することで回避ができます。</p>
<p>&nbsp;</p>
<p>Database ClassによるDML処理はExceptionエラーが発生したときでも処理を中断せずにDatabase.Saveresultというデータ型に値を保持してくれています。</p>
<p>&nbsp;</p>
<p>Database.Saveresultでは「isSuccess()」でエラーの有無を確認することができ、Database.Errorでエラーの情報を取得することが可能になります。</p>
<p>&nbsp;</p>
<p>次のような感じでDatabase.Saveresultのリストをループしながらエラーレコードをチェックしていき、エラーレコードに対してはaddErrorでエラーメッセ―ジを表示させるようにします。</p>
<p>&nbsp;</p>
<p>Database.ErrorのgetMessage()をつかうことで入力規則のエラーメッセージのみを画面に表示させることができます。</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce PDF]]></title>
      <url>http://www.ibmer.info/salesforce-pdf.html</url>
      <content type="html"><![CDATA[<pre>&lt;apex:page renderAs="pdf" sidebar="false" showHeader="false" controller="IBMerInfoController" applyHtmlTag="false" applyBodyTag="false" id="pdfPage"&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;style&gt;

 body {
 font-family: Arial Unicode MS; 
 font-size:3mm;
 letter-spacing:0;
 margin: 0mm;

}

 @page {
 size: 11.69in 8.27in; /* A4 縦サイズ */
 margin-top: 5mm;
 margin-bottom: 0mm;
 margin-left: 2mm;
 margin-right: 2mm;
 }

 .breakline {
 page-break-after: always;
 }

 &lt;/style&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;!-- ここに表示内容 --&gt;
 &lt;table width="100%" &gt;
 &lt;apex:variable var="width" value="69.3mm" /&gt;
 &lt;apex:variable var="height" value="38mm" /&gt;

&lt;apex:repeat value="{!tableElement}" var="row"&gt;
 &lt;tr&gt;
 &lt;apex:repeat value="{!row.cellLst}" var="td"&gt;
 &lt;td &gt;
 &lt;table style="table-layout:fixed;" width="{!width}" height="{!height}" border="1px;" &gt;
 &lt;tr&gt;
 &lt;td style="width: {!width}; height:{!height}" &gt;
 &lt;apex:outputPanel rendered="{!td.rendered}"&gt;
&lt;div align="center"&gt;{!td.contact.Name} 様&lt;/div&gt;
 &lt;/apex:outputPanel&gt;
 &lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;/td&gt;
 &lt;/apex:repeat&gt;
 &lt;/tr&gt;
 &lt;apex:outputPanel layout="none" rendered="{!(MOD(row.rowCount, 5) == 0 &amp;&amp; tableElement.size != row.rowCount)}" &gt;
 &lt;div id="breakline" class="breakline" &gt;&lt;/div&gt;
 &lt;/apex:outputPanel&gt;
 &lt;/apex:repeat&gt;
 &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;

&lt;/apex:page&gt;

</pre>
关于PDF，

如果设置applyHtmlTag="false"， 就不支持HTML标签，需要用\n换行，

换行逻辑
<pre>/**
 * &lt;br/&gt;タグをエスケープ。
 */
 private static final String BR_TG_ESCAPE = '%%br%%';
 /**
 * タグを表す正規表現。
 */
 private static final String REGEX_TAG = '&lt;.+?&gt;';
 /**
 * &lt;br&gt;タグ。
 */
 public static final String BR_TG = '&lt;br&gt;';
 /**
 * &lt;br/&gt;タグ。
 */
 public static final String BR_SLASH_TG = '\n';
 /**
 * 空白を定義。
 */
 public static final String STRING_NONE = '';
 /**
 * \n（改行）を定義。
 */
 public static final String NEW_LINE_CHARACTER = '\n';
 /**
 * 【$】を定義。
 */
 public static final String DOLLAR_CHARACTER = '$';

 public static final Integer MAX_BYTE = 60;

/**
 * 閾値を超えたら&lt;br/&gt;を挿入する。
 *
 * 1,&lt;br&gt;タグを「%%br%%」に置換する
 * 2,タグを除去する
 * 3,改行（\n）を&lt;br/&gt;を着換える
 * 4,置換した「%%br%%」を&lt;br/&gt;に置換する
 * 5,文字列の長さをバイト数で計算し閾値を超えたら&lt;br/&gt;を追加する
 *
 * @param targetString &lt;br/&gt;タグを入れる文字列
 * @param maxByte &lt;br/&gt;を入れるバイト数
 * @return String 加工した文字列
 */
 public static String convertString(final String targetString) {
 Integer maxByte = MAX_BYTE;

//加工した文字列保持
 String convertStr = STRING_NONE;

if (targetString != null) {

//&lt;br&gt;がある場合は置き換える
 String targetStr = targetString.replaceAll(BR_TG, BR_TG_ESCAPE);
 targetStr = targetStr.replaceAll(BR_SLASH_TG, BR_TG_ESCAPE);
 //タグ除去
 targetStr = targetStr.replaceAll(REGEX_TAG, STRING_NONE);
 //改行を&lt;br/&gt;に変換
 targetStr = targetStr.replaceAll(
 NEW_LINE_CHARACTER,
 BR_SLASH_TG
 );

//置き換えた改行を&lt;br/&gt;に変換
 targetStr = targetStr.replaceAll(BR_TG_ESCAPE, BR_SLASH_TG);
 //&lt;br/&gt;でsplit
 String[] strList = targetStr.split(BR_SLASH_TG);

//一行の文字数
 Integer lineLen = 0;

//&lt;br/&gt;単位　一ライン
 for (String line : strList) {

//一行のバイト数の合計値
 Integer sum = 0;
 //インデックス
 Integer index = 0;
 //一行の文字数取得する
 lineLen = line.length();

//一文字ずつバイト数をチェックする
 for (Integer i = 0; i &lt; lineLen; i++) {

//一文字取得
 String one = line.substring(i, (i + 1));
 //一文字バイト数計算
 Integer oneSize = getBytes(one);
 //合計
 sum += oneSize;

//MAXを超えた場合
 if (sum &gt; maxByte) {
 //クリア
 sum = 0;
 //改行を追加
 convertStr += line.substring(index, (i + 1))
 + BR_SLASH_TG;
 index = i + 1;
 }
 }
 //改行を追加
 convertStr += line.substring(index, (line.length()))
 + BR_SLASH_TG;
 }
 }

//最後尾のbrを外す
 convertStr =
 convertStr.replaceAll(
 BR_SLASH_TG + DOLLAR_CHARACTER,
 STRING_NONE
 );

return convertStr;
 }

/**
 * 文字のバイト数を取得。
 *
 * @param strings 文字
 * @return Integer バイト数
 */
 private static Integer getBytes(final String strings) {
 return Blob.valueOf(strings).size();
 }

</pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Dataloadercliq]]></title>
      <url>http://www.ibmer.info/dataloadercliq.html</url>
      <content type="html"><![CDATA[<div>ダウンロード</div><br><strong><a href="https://code.google.com/p/dataloadercliq/" target="_blank" rel="external">dataloadercliq</a></strong><br><br><a href="https://code.google.com/archive/p/dataloadercliq/downloads" target="_blank" rel="external">https://code.google.com/archive/p/dataloadercliq/downloads</a><br><br>&nbsp;<br><br>・CLIqをダウンロードして解凍してもすぐに使えないゼイ。<br><div>⇒データローダのディレクトリに解答したcliqを移動するゼイ。</div><br><div>例）</div><br><div>C:\Program Files\salesforce.com\Data Loader</div><br>&nbsp;<br><div>上記の場所にcliqを配置するゼイ。</div><br>「<strong>Using _jvm to run CLIq…</strong><br><div><strong>指定されたパスが見つかりません。</strong></div><br><div><strong>続行するには何かキーを押してください . . .</strong>」</div><br>&nbsp;<br><div>上記のメッセージが表示されたら、<strong>CLIq</strong>の配置場所がおかしいゼイ。</div><br>&nbsp;<br><div>・「<strong>Directory already exists.  Please delete first.</strong>」とメッセージが表示される。</div><br><div>⇒すでにフォルダが作成されているから削除するか、名前を変更する。</div><br>&nbsp;<br><div>・「<strong>指定されたパスが見つかりません。</strong>」と表示される。</div><br><div>⇒cliqと同じ階層に「cliq_process」フォルダがない。</div><br><div>または、対象のフォルダに作成参照権限がない。</div><br><div></div><br><div></div><br><div>※※※※</div><br><div>JVM路径配置会影响CLIq的运行，建议复制一份JVM到</div><br><div>C:\Program Files\salesforce.com\Data Loader\Java 下面，</div><br><div>不然会引起各种不必要的麻烦</div>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Unable to abort Recursive batch job]]></title>
      <url>http://www.ibmer.info/stop-sf-job.html</url>
      <content type="html"><![CDATA[<p><div class="feedcommenttext">Salesforce中有时不能停止job，</div></p>
<p><div class="feedcommenttext">会出现Unable to abort Recursive batch job的错误信息。</div></p>
<p><div class="feedcommenttext">可以通过下面方法强行停止job/</div></p>
<p><div class="feedcommenttext"></div></p>
<p><div class="feedcommenttext"></div></p>
<p><div id="ext-gen18" class="feedcommenttext">Get Batch job ID from Setup-&gt;Monitoring -&gt; Apex Jobs to get batch job ID.</div></p>
<p><div id="ext-gen18" class="feedcommenttext"></div></p>
<pre>System.abortJob(JobID);</pre>
一个强行停止job的方法。
<pre>List&lt;AsyncApexJob&gt; jobs = [SELECT Id, Status FROM AsyncApexJob WHERE Status NOT IN ('Completed', 'Failed')];

for (AsyncApexJob job : jobs)
{
System.abortJob(job.Id);
}

</pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce権限設定]]></title>
      <url>http://www.ibmer.info/salesforce-auth.html</url>
      <content type="html"><![CDATA[<p>データアクセス権の設定方法<br>① プロファイル<br>② ロール<br>③ 共有設定<br>④ タブ毎の共有ルール<br>⑤ 個別データの共有ルール<br>⑥ チームセリング<br>⑦ 所有者の変更</p>
<p><a href="http://successjp.salesforce.com/rollout_guide/pdf/data_access_control.pdf" target="_blank" rel="external">参考資料：</a></p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce Apex Error：System.FinalException]]></title>
      <url>http://www.ibmer.info/apex-system-finalexception.html</url>
      <content type="html"><![CDATA[<p>System.FinalException: SObject row does not allow errors</p>
<p>別のリストに、入れ替えたら、addErrorは使ってはいけない。</p>
<p>エラーになります。</p>
<p><div><em>List&lt;Opportunity&gt; opps = Trigger.new;</em></div></p>
<p><div><em>for(Opportunity opp: opps.new ) {</em></div></p>
<p><div><em>    opp.addError(‘エラーメッセージ’);</em></div></p>
<p><div><em>}</em></div><br>これでＯＫ</p>
<p><div><em>for(Opportunity opp: Trigger.new ) {</em></div></p>
<p><div><em>    opp.addError(‘エラーメッセージ’);</em></div></p>
<p><div><em>}</em></div><br>ちなみに、これもＮＧね。(old)<br><em>for(Opportunity opp: Trigger.old ) {</em></p>
<p><div><em>    opp.addError(‘エラーメッセージ’);</em></div></p>
<p><div><em>}</em></div></p>
<p><div></div></p>
<div>

<hr>
<p><span style="color: #ff0000;"><strong>Usage</strong></span></p>
<p><span style="color: #ff0000;"><strong>When used on Trigger.new in before insert and before update triggers, and on Trigger.old in before delete triggers, the error message is displayed in the application interface.</strong></span></p>
<p></p></div><br>Example<p></p>
<p><pre><br>validateUpdate(Trigger.oldMap, Trigger.new)</pre></p>
<p>public static void validateUpdate(Map&lt;Id, Contract<strong>c&gt; oldContractMap, List&lt;Contract</strong>c&gt; contractList) {</p>
<p> for(Contract<strong>c contract : contractList) {<br> Contract</strong>c oldContract = oldContractMap.get(contract.id);<br> if (oldContract.IsClosed<strong>c) {<br> if(!setting.ContractEditFlg</strong>c){<br> contract.addError(‘ERROR MESSAGE!!’);<br> }<br> }<br> }</p>
<p>}<br>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SF中正则表达式：全角カタカナ以外を禁止する]]></title>
      <url>http://www.ibmer.info/sf-regex-katagana.html</url>
      <content type="html"><![CDATA[<p>入力規則を作成し、「REGEX」関数を用いて入力許可する文字列を指定することで可能となります。</p>
<p>演算子と関数 - REGEX<br><a href="https://help.salesforce.com/HTViewHelpDoc?id=customize_functions_i_z.htm&amp;language=ja#REGEX" target="_blank" rel="external">https://help.salesforce.com/HTViewHelpDoc?id=customize_functions_i_z.htm&amp;language=ja#REGEX</a></p>
<p>REGEX 関数は、正規表現を指定する関数になります。<br>NOT () で括ることで、正規表現に合致しなかった場合に入力規則でエラーを表示することが可能となります。</p>
<p>下記は「全角カタカナ以外を禁止する」構文の例です。</p>
<p>NOT( REGEX( Field__c , “^[ァ-ー]+$”) )</p>
<p>正規表現 “^[ァ-ー]+$” の内訳ですが、</p>
<p>＊　^：テキスト項目の先頭文字から<br>＊　[ァ-ー]：全角カタカナが（コード表を見ればカタカナが連続しているのが分かる）<br>＊　+：1文字以上<br>＊　$：最後まで連続している</p>
<p>となります。つまり、全角カタカナ文字列を表現しています。</p>
<p>正規表現構文は、JAVA Platform SE 6 構文に基づいています。<br><a href="http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html" target="_blank" rel="external">http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html</a></p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce面向对象语言]]></title>
      <url>http://www.ibmer.info/salesforce-oo.html</url>
      <content type="html"><![CDATA[<h3 id="★关于APEX，如果想要继承父类，父类必须virtual或者abstract，否则会出现In-Salesforce-Non-virtual-and-non-abstract-type-cannot-be-extended-的错误。"><a href="#★关于APEX，如果想要继承父类，父类必须virtual或者abstract，否则会出现In-Salesforce-Non-virtual-and-non-abstract-type-cannot-be-extended-的错误。" class="headerlink" title="★关于APEX，如果想要继承父类，父类必须virtual或者abstract，否则会出现In Salesforce Non-virtual and non-abstract type cannot be extended.的错误。"></a>★关于APEX，如果想要继承父类，父类必须virtual或者abstract，否则会出现In Salesforce Non-virtual and non-abstract type cannot be extended<strong>.</strong>的错误。</h3><h3 id="★"><a href="#★" class="headerlink" title="★"></a>★</h3><h3 id="★-1"><a href="#★-1" class="headerlink" title="★"></a>★</h3><h3 id="★-2"><a href="#★-2" class="headerlink" title="★"></a>★</h3><p>&nbsp;</p>
<h3 id="Object-Oriented-Programming-in-Apex"><a href="#Object-Oriented-Programming-in-Apex" class="headerlink" title="Object-Oriented Programming in Apex"></a>Object-Oriented Programming in Apex</h3><ol>
<li>Classes</li>
<li>Properties</li>
<li>Encapsulation</li>
<li>Polymorphism and Inheritance</li>
<li>Virtual Class</li>
<li>Abstract class</li>
<li>Interfaces</li>
</ol>
<h2 id="Classes"><a href="#Classes" class="headerlink" title="Classes"></a>Classes</h2><ul>
<li>A class is a template or blueprint from which objects are created.</li>
<li>They consist of methods and attributes</li>
<li>Are stored with the version of API that is used to compile it</li>
<li>May contain other classes, known as inner classes (but these can only be one level deep)</li>
<li>Even though Apex code is not case sensitive, it is recommended that you follow the Java naming convention</li>
<li>Static methods and attributes can only be declared in a top-level class definition</li>
<li>To create new exception classes, the Exception class must be extended</li>
<li><p>Classes can be enabled or disabled for profiles.<br><strong>Ways to Create Classes</strong></p>
</li>
<li><p>Through the UI:</p>
<ul>
<li>Go to Setup -&gt; Develop and Apex Classes.</li>
<li>Click “New” or “Generate from WSDL”</li>
<li>Enter code or upload a WSDL</li>
</ul>
</li>
<li><p>Through a Force.com IDE project:</p>
<ul>
<li>Right-click the src folder and click New -&gt; Apex Class (this is the recommended way)<br><strong>Class Syntax:</strong></li>
</ul>
</li>
</ul>
<p>private | public | global</p>
<p>[virtual  | abstract | with sharing | without sharing | (none)]<br>Class <em>ClassName</em> [<em>implements InterfaceNameList</em> | (<em>none)] [extends ClassOrInterfaceName</em> | (none}] {<br>// The body of the class<br>}</p>
<p><strong>Example</strong></p>
<p>public class myOuterClass {</p>
<p>// Additional myOuterClass code here</p>
<p>class myInnerClass {</p>
<p>// myInnerClass code here</p>
<p>}</p>
<p>}</p>
<ul>
<li>If global, the class is accessible everywhere. This must be used with the webService keyword. All methods, attributes and inner classes that are global must be within a global class</li>
<li>If public, the class is visible across the application, org or namespace that comprises the class.</li>
<li>If private is used for an inner class, the inner class is only accessible to the outer class. The default for inner classes is private.</li>
<li>Top level or outer classes must have either a global or public keyword.</li>
<li>A class can implement multiple interfaces, but it can only extend once class</li>
<li>A class can cast as a superclass and verify an objects class using the instanceof keyword</li>
<li><p>You can implement and extend classes using the keywords, virtual, abstract and extends</p>
<ul>
<li>Virtual declares that the class allows extensions and overrides, Classes that are virtual cannot be global.</li>
<li>Abstract declares that the class contains abstract methods and can be extended. These classes just have a method signature and do not have code. You cannot instantiate an object of an abstract class until some other class extends it.</li>
<li>The Extends keyword declares that the class is a subclass. The “super” keyword can be used to invoke constructors and methods from the parent class.</li>
</ul>
</li>
<li><p>All Apex code executes in the system mode and ignores all CRUD, field-level security and record sharing level privileges. You use with and without sharing keywords to implement sharing. By default a class will run in the without sharing mode.</p>
<ul>
<li>With sharing – This means that when performing DML operations, the user can only update records to which he or she has edit level access</li>
<li>Without Sharing – This ensures that sharing model access is ignored and is referred to a running in system mode.</li>
</ul>
</li>
<li><p>Interfaces are classes that only include the method signature. The methods are not implemented in the interfaces. Apex supports both top-level and inner interfaces</p>
</li>
<li>Avoid using standard object names for class names. Doing so causes unexpected results</li>
</ul>
<h2 id="Properties-Attributes-Syntax"><a href="#Properties-Attributes-Syntax" class="headerlink" title="Properties/ Attributes Syntax"></a>Properties/ Attributes Syntax</h2><p>Properties are the shortened form of a method that has access to static and instance variable.</p>
<p>modifiers dataType attributeName initialization;</p>
<p>For example:<br>public static final Integer MAX_AMOUNT = 200;</p>
<p>private Integer cost;</p>
<p>public Integer getcost() { return cost; }</p>
<p>public void setcost(Integer cost) { this.cost=cost; }</p>
<p>// Variable as Property</p>
<p>public Integer cost { get { return cost; }  set { this.cost= cost;}}</p>
<p>//Variable as Automatic Property</p>
<p>public Integer cost { get; set; }</p>
<p>//read-only and write - only Property</p>
<p>public Integer readOnly { get; private set;}</p>
<p>public Integer wrtieOnly { private get; set;}</p>
<h3 id="Methods-Syntax"><a href="#Methods-Syntax" class="headerlink" title=" **Methods Syntax**:"></a><strong> **</strong>Methods Syntax<strong>**:</strong></h3><p>Modifiers returnDataType methodName (inputParameterList) {<br>// method code<br>}</p>
<p>For example:</p>
<p>Public Integer getInt() {<br>Return myInt;<br>}</p>
<p><strong>Method and Attribute Access Modifiers</strong></p>
<ul>
<li>Private – Default access modifier, but is not available for top-level classes. It implies that the attribute or method is only available in the class where it is defined.</li>
<li>Protected – Available only to inner classes</li>
<li>Public – Can be used by an apex code in the application, org or namespace</li>
<li><p>Global – Accessible by all Apex everywhere. Note that Apex code cannot be shared between orgs, with the exception of Web Services, which are accessible to everyone.<br><strong>Static Methods and Attributes</strong></p>
</li>
<li><p>Static methods are accessed through the class itself and do not depend on an instance of a class</p>
</li>
<li><p>Static attributes are used to store data that is used within the class. They can be used to prevent recursive logic by setting flags.<br><strong>Constants</strong></p>
</li>
<li><p>Assign a value to a constant only once either at declaration or initialization</p>
</li>
<li><p>Define a constant using both the static and final keywords.<br><strong>Instantiating Objects</strong></p>
</li>
<li><p>Allows you to work with methods and attributes that are not defined as static</p>
</li>
<li><p>After instantiating, you can refer to methods and attributes using the dot notation. For example:<br>TestObject myObject1 = new TextObject();<br>myObject1.myMethod();</p>
</li>
<li><p>A constructor is a special method used to create an object of a class. It has the same name as the class and is the first method invoked in the class. It does not have an explicit return type and is available by default in each class as invisible and without parameters. It can be overloaded by defining multiple constructors with different parameters.<br><strong>The “this” Keyword</strong></p>
</li>
<li><p>With dot Notation – Used to represent the current instance of the class and can call methods or set attributes that are public or are available.</p>
</li>
<li><p>With Constructors – Developers can do constructor chaining by using the this keyword, but the this keyword must be the first statement in the constructor.<br><strong>Apex System-Delivered Classes</strong></p>
</li>
<li><p>System Class – Is a static class that contains only static methods. Includes the following:</p>
<ul>
<li>Debug()</li>
<li>Now()</li>
<li>Today()</li>
<li>Assert()</li>
<li>AssertEquals()</li>
<li>AssertNotEquals()</li>
</ul>
</li>
<li><p>UserInfo Class – Mostly getter methods used to get details. For example:</p>
<ul>
<li>getUserId()</li>
<li>getUserName()</li>
<li>getUserRoleId()</li>
<li>getFirstName()</li>
<li>getLocale()</li>
<li>getLanguage()<br><strong>Apex Workflow and Approval Processing</strong></li>
</ul>
</li>
<li><p>Apex process classes are used to submit workflow requests and process the results of those requests. The three classes provided are:</p>
<ul>
<li>ProcessRequest – Used to process the results from a workflow process</li>
<li>ProcessSubmitRequest – Used to submit a workflow item for approval</li>
<li>ProcessWorkItemRequest – Used to process an item after it is submitted</li>
</ul>
</li>
</ul>
<h2 id="Encapsulation"><a href="#Encapsulation" class="headerlink" title="Encapsulation"></a>Encapsulation</h2><p>When a class is defined it becomes a new data type in Apex</p>
<p>public class MyClass()</p>
<p>{</p>
<p>MyClass c  = new MyClass();</p>
<p>List&lt;MyClasss&gt; myList = new List&lt;MyClass&gt;();</p>
<p>myList.add(c);</p>
<p>}</p>
<h2 id="Polymorphism-and-Inheritance"><a href="#Polymorphism-and-Inheritance" class="headerlink" title="Polymorphism and Inheritance"></a>Polymorphism and Inheritance</h2><p>Apex supports single inheritance, it allows to extend one other class and implement many interfaces. Interface can also extend multiple interfaces</p>
<p>Over-riding methods is two step process</p>
<ul>
<li>Parent class must provide virtual and abstract keyword on the methods to be over-ridden</li>
<li>In subclass, the override keyword is used on virtual and abstract methods to replace parent.<br>In Salesforce Non-virtual and non-abstract type cannot be extended<strong>.</strong></li>
</ul>
<h2 id="Virtual-Class"><a href="#Virtual-Class" class="headerlink" title="Virtual Class"></a>Virtual Class</h2><p>Virtual classes do not require any methods to be overriden and can be constructed as is without the need of extending.</p>
<p>// SubClass with Method Override</p>
<p>public virtual class myParentClass {</p>
<p>public virtual void dosomething(){</p>
<p>System.Debug(‘Something’);</p>
<p>}</p>
<p>}</p>
<p>public class myclass extends myParentClass{</p>
<p>public override void dosomething(){</p>
<p>super.dosomething();</p>
<p>System.Debug(‘something else’);</p>
<p>}</p>
<p>new myclass().dosomething();</p>
<p>}</p>
<h2 id="Abstract-class"><a href="#Abstract-class" class="headerlink" title="Abstract class"></a>Abstract class</h2><p>Abstract classes can contain methods that don’t require an override and methods that do require an override, since it can contain methods that do require and override it must be extended to be constructed.  Useful if you want to share code among several closely related classes that implement a common interface</p>
<p>public abstract class TestRow {</p>
<p>public Double value;</p>
<p>public virtual Double getValue() {</p>
<p>return value==null ? 0 : value;</p>
<p>}</p>
<p>public void setValue(Double value) {</p>
<p>this.value = value;</p>
<p>}</p>
<p>}</p>
<p>public class SummaryTestRow extends TestRow {</p>
<p>private list&lt;TestRow&gt; childRows;</p>
<p>public override Double getValue() {</p>
<p>Double totalValue = 0;</p>
<p>for(TestRow childRow : childRows){</p>
<p>totalValue += childRow.value;</p>
<p>}</p>
<p>return totalValue;</p>
<p>}</p>
<h2 id=""><a href="#" class="headerlink" title="}"></a>}</h2><p>## </p>
<h2 id="Interfaces"><a href="#Interfaces" class="headerlink" title="Interfaces"></a>Interfaces</h2><p>Interface as skeletal class definitions containing list of methods with no implementations</p>
<p>//Declaring and using Interface</p>
<p>public interface myInterface {</p>
<p>void doSomething (String thing);</p>
<p>}</p>
<p>public class MyClass implements MyInterface {</p>
<p>public void doSomething(String x);</p>
<p>}</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce中Orderby排序]]></title>
      <url>http://www.ibmer.info/salesforce-orderby.html</url>
      <content type="html"><![CDATA[<p>一个Salesforce中Orderby排序问题，</p>
<p>如果排序对象是一个textテキスト类型的，却存储了数字，</p>
<p>例如1，2，3，4，5，6，7，8，9，10，11，12</p>
<p>进行order by后结果为1，10，11，12，2，3，4，5，6，7，8，9，10</p>
<p>如何得到从数值的结果呢？</p>
<p>一个比较笨的方法就是获取到list中进行重新排序。</p>
<p>有没有其他好方法？？答案肯定的，使用书式，把text转换成数值，就可以了。</p>
<p>书式IF(ISNUMBER(Name),VALUE(Name),99999)</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce ISCHANGED]]></title>
      <url>http://www.ibmer.info/salesforce-ischanged.html</url>
      <content type="html"><![CDATA[<h2 id="salesforce中如何判断一个字段变化了，"><a href="#salesforce中如何判断一个字段变化了，" class="headerlink" title="salesforce中如何判断一个字段变化了，"></a>salesforce中如何判断一个字段变化了，</h2><p>其实内部已经提供了函数，很方便就能判断。</p>
<h2 id="ISCHANGED"><a href="#ISCHANGED" class="headerlink" title="ISCHANGED"></a><span id="ISCHANGED" class="ph">ISCHANGED</span></h2><div class="data colSort"><br><table class="featureTable sort_table" summary="" cellspacing="0" cellpadding="4"><br><tbody class="tbody"><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>Description:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISCHANGEDDef" class="ph"><a name="ISCHANGEDDef"></a>Compares the value of a field to the previous value and returns TRUE if the values are different. If the values are the same, this function returns FALSE.</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>Use:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISCHANGEDUse" class="ph"><a name="ISCHANGEDUse"></a><samp class="codeph nolang">ISCHANGED(<var class="keyword varname">field</var>)</samp> and replace <var class="keyword varname">field</var> with the name of the field you want to compare.</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>Validation Rule Example:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%">The following validation rule prevents users from changing an object name after it has been created:<samp class="codeph nolang">NOT(ISCHANGED(Name))</samp>.<br><br><samp class="codeph nolang">NOT(AND(ISCHANGED(Priority), ISPICKVAL(Priority, “Low”)))</samp> is a validation rule that ensures if a user changes the <span class="keyword parmname">Priority</span> of a case, the new priority cannot be “Low.”<br><br><div class="p"><samp class="codeph nolang">NOT(AND(ISCHANGED(CloseDate), OR(MONTH(CloseDate) &lt;&gt; MONTH(TODAY()), YEAR(CloseDate) &lt;&gt; YEAR(TODAY())),$Profile.Name &lt;&gt; “Sales Manager”))</samp> is a validation rule that prevents a user from changing the <span class="keyword parmname">Close Date</span> of an opportunity to a date outside of the current month and year unless that user has the “Sales Manager” profile.<br><div class="note"><br><div class="noteTitle">Note</div><br><div class="noteBody"><img src="https://help.salesforce.com/img/help/helpNote_icon.gif" alt="">$Profile merge fields are only available in Enterprise, Unlimited, Performance, and Developer Editions.</div><br></div><br></div></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>Tips:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><br><br><em>   <a name="AvailableWFR"></a>This function is available only in:

    </em>   Assignment rules<br>    <em>   Validation rules
    </em>   Field updates<br>    <em>   Workflow rules if the evaluation criteria is set to <span class="keyword parmname">Evaluate the rule when a record is: created, and every time it’s edited </span>.
    </em>   Formula criteria for executing actions in the Process Builder.<br><br><em>   Use the NOT function to reverse the return values of TRUE and FALSE.
</em>   This function returns FALSE when evaluating any field on a newly created record.<br><em>   If a text field was previously blank, this function returns TRUE when it contains any value.
</em>   For number, percent, or currency fields, this function returns TRUE when:<br><br>    <em>   The field was blank and now contains any value
    </em>   The field was zero and now is blank<br>    *   The field was zero and now contains any other value<br></td><br></tr><br></tbody><br></table><br></div>

<h2 id="ISCHANGED-1"><a href="#ISCHANGED-1" class="headerlink" title="ISCHANGED"></a><span id="ISCHANGED" class="ph">ISCHANGED</span></h2><div class="data colSort"><br><table class="featureTable sort_table" summary="" cellspacing="0" cellpadding="4"><br><tbody class="tbody"><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>説明:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISCHANGEDDef" class="ph">項目の値を前との値と比較し、2 つが異なれば TRUE を返します。値が同じ場合は FALSE を返します。</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>使用方法:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISCHANGEDUse" class="ph"><samp class="codeph nolang">ISCHANGED(<var class="keyword varname">field</var>)</samp>。<var class="keyword varname">field</var> に、比較する項目名を指定します。</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>入力規則の例:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><samp class="codeph nolang">NOT(ISCHANGED(Name))</samp> を入力規則として指定すると、ユーザが作成済みのオブジェクト名を変更するのを防ぐことができます。<br><br><samp class="codeph nolang">NOT(AND(ISCHANGED(Priority), ISPICKVAL(Priority, “Low”)))</samp> は、ユーザがケースの<span class="keyword parmname">[優先度]</span> を変更した場合に、新規の優先度が「低」にならないようにする入力規則です。<br><br><div class="p"><samp class="codeph nolang">NOT(AND(ISCHANGED(CloseDate), OR(MONTH(CloseDate) &lt;&gt; MONTH(TODAY()), YEAR(CloseDate) &lt;&gt; YEAR(TODAY())),$Profile.Name &lt;&gt; “Sales Manager”))</samp> は、ユーザが商談の <span class="keyword parmname">[完了予定日]</span> を現在の月と年の範囲外の日付に変更できないようにする入力規則です。ただし、そのユーザが「営業マネージャ」プロファイルを持っている場合は変更できます。<br><div class="note"><br><div class="noteTitle">メモ</div><br><div class="noteBody"><img src="https://help.salesforce.com/img/help/helpNote_icon.gif" alt="">$Profile 差し込み項目は、Enterprise Edition、Unlimited Edition、Performance Edition、および Developer Edition でのみ使用可能です。</div><br></div><br></div></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>ヒント:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><br><br><em>   この関数は、次の場所でのみ使用できます。

    </em>   割り当てルール<br>    <em>   入力規則
    </em>   項目自動更新<br>    <em>   評価条件が <span class="keyword parmname">[レコードが次の場合にルールを評価: 作成されたとき、および編集されるたび]</span> に設定されている場合はワークフロールール
    </em>   プロセスビルダーでアクションを実行する数式条件<br><br><em>   TRUE および FALSE の戻り値を逆にする場合は、NOT 関数を使用します。
</em>   この関数は、新規作成レコードの項目を評価すると FALSE を返します。<br><em>   テキスト項目の以前の値が空白だった場合は、この項目が値を含んでいると TRUE を返します。
</em>   数値、パーセント、または通貨項目に対し、次の場合に TRUE を返します。<br><br>    <em>   項目の以前の値が空白で、現在は何らかの値を含んでいる
    </em>   項目の以前の値が 0 で、現在は空白である<br>    *   項目の以前の値が 0 で、現在は別の値を含んでいる<br></td><br></tr><br></tbody><br></table><br></div>

<h2 id="ISNEW"><a href="#ISNEW" class="headerlink" title="ISNEW"></a><span id="ISNEW" class="ph">ISNEW</span></h2><div class="data colSort"><br><table class="featureTable sort_table" summary="" cellspacing="0" cellpadding="4"><br><tbody class="tbody"><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>説明:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISNEWDef" class="ph">新規レコードの作成中に数式が実行されているかどうかを確認し、実行中の場合は TRUE を返します。既存のレコードが更新中の場合は、FALSE を返します。</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>使用方法:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISNEWUse" class="ph"><samp class="codeph nolang">ISNEW()</samp></span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>入力規則の例:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%">ユーザが過去の完了予定日を使用してレコードを作成するのを防止するには、次の入力規則を使用します。<samp class="codeph nolang">AND (ISNEW(), CloseDate &lt; TODAY())</samp> は、ユーザが新規商談を作成中かどうかをチェックし、作成中の場合は本日以降の <span class="keyword parmname">[完了予定日]</span> のみを許可します。<br><br>ユーザが作成済みの商談に対して少なくとも 1 つの商品を追加するようにするには、次の入力規則を使用します。<br><br><div class="codeSection nolang"><br><pre id="HasProducts" class="codeblock nolang">NOT(OR(ISNEW(),HasOpportunityLineItem))</pre><br></div>

<p><span id="HasProductsDef" class="ph">この例では、既存の商談に商品が指定されていない場合、入力規則の数式によって「保存する前に、この商談に商品を追加してください。」というエラーメッセージが表示されます。レコードを一度保存するまでは商品を追加できないため、最初の商談の保存時にはエラーが表示されません。この入力規則は、製品を含まない商談を再保存したり閉じたりすることを防ぐためのものです。</span></p>
<p></p></td><br></tr><p></p>
<p><tr class="row"></tr></p>
<p><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>ヒント:</strong></td></p>
<td class="entry" colspan="1" rowspan="1" width="74.5%">

<ul>
<li>この関数は、入力規則、項目自動更新、ワークフロールール、割り当てルール、およびプロセスビルダーの数式条件でのみ使用できます。</li>
<li>TRUE および FALSE の戻り値を逆にする場合は、NOT 関数を使用します。</li>
<li>ワークフロールールで時間ベースのトリガと併用された場合、この関数は必ず FALSE を返します。</li>
<li>項目自動更新で承認アクションに対して使用された場合、この関数は必ず FALSE を返します。<br></li></ul></td><br><br></tbody><br></table><br></div>

<h2 id="ISPICKVAL"><a href="#ISPICKVAL" class="headerlink" title="ISPICKVAL"></a><span id="ISPICKVAL" class="ph">ISPICKVAL</span></h2><div class="data colSort"><br><table class="featureTable sort_table" summary="" cellspacing="0" cellpadding="4"><br><tbody class="tbody"><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>説明:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISPICKVALDef" class="ph"><a name="ISPICKVALDef"></a>選択リスト項目の値が指定したテキストリテラルと等しいかどうかを判断します。</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>使用方法:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><span id="ISPICKVALUse" class="ph"><a name="ISPICKVALUse"></a><samp class="codeph nolang">ISPICKVAL(<var class="keyword varname">picklist_field</var>, <var class="keyword varname">text_literal</var>)</samp>。<var class="keyword varname">picklist_field</var> には選択リストの差し込み項目名を指定し、<var class="keyword varname">text_literal</var> には引用符で囲んだ選択リストの値を指定します。<var class="keyword varname">text_literal</var> を差し込み項目、または関数の結果にすることはできません。</span></td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>例:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><strong>契約の有効化</strong><br><br><samp class="codeph nolang">IF(ISPICKVAL(Status, “Activated”), NOW()-ActivatedDate, null)</samp> で、契約が有効にされてからの日数が計算されます。契約状況が「有効」でない場合、この項目は空白になります。<br><br><strong>手数料</strong><br><br><div class="codeSection nolang"><br><pre id="Commish" class="codeblock nolang"><a name="Commish"></a>IF(ISPICKVAL(StageName, “Closed Won”),<br>  ROUND(Amount *0.02, 2), 0)</pre><br></div>

<p><span id="CommishDef" class="ph"><a name="CommishDef"></a>この例は、「商談成立」フェーズの商談すべての手数料を計算します。この項目の値は、完了/成立した商談に 0.02 を掛け合わせた金額です。進行中または不成立の商談の場合は、手数料の値が 0 になります。</span></p>
<p><strong>競合によりトリガされるワークフロー</strong></p>
<div class="codeSection nolang"><br><pre class="codeblock nolang">ISPICKVAL(Stage, “Closed Lost”) &amp;&amp; INCLUDES(Competitor__c, “Acme”)</pre><br></div><br>ワークフロールールまたはプロセスビルダーで、この数式は、契約不成立の業務の <span class="keyword parmname">[競合]</span> 複数選択リスト項目が Acme である場合に、関連付けられているアクションをトリガするように Salesforce を設定します。</td><br></tr><br><tr class="row"><br><td class="entry" colspan="1" rowspan="1" width="25.5%"><strong>ヒント:</strong></td><br><td class="entry" colspan="1" rowspan="1" width="74.5%"><br><br><em>   <var class="keyword varname">picklist_field</var> に、選択リストの標準またはカスタム項目を指定します。
</em>   <var class="keyword varname">text_literal</var> の式は、テキスト型にして引用符で囲む必要があります。差し込み項目または関数の結果にすることはできません。<br><em>   <a name="ispickval_use_case"></a>選択リストの値が特定の値と等しいかどうかを判断するには、<a href="https://help.salesforce.com/apex/HTViewHelpDoc?id=customize_functions_a_h.htm&amp;language=ja#CASE" target="_blank" rel="external">CASE</a> 関数を使用します。
</em>   <a name="ISPICKVALPRIOR"></a>選択リスト項目の前の値を返すために ISPICKVAL 関数を使用する場合は、次の例に示すように ISPICKVAL 関数内に PRIORVALUE 関数を含めてください。<br><div class="codeSection nolang"><br><pre class="codeblock nolang">ISPICKVAL(PRIORVALUE<br>(<var class="keyword varname">picklist_field</var>),<br><var class="keyword varname">text_literal</var>)</pre><br>&nbsp;<br><br></div><br></td><br></tr><br></tbody><br></table><br>&nbsp;<br><br></div>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SOQL 日付関数]]></title>
      <url>http://www.ibmer.info/soql-date.html</url>
      <content type="html"><![CDATA[<p>salesforceで用意されている日付関数にはとても便利なものが多い。<br>知らないとクエリー結果に対してApexでゴリゴリと処理をおこなう必要があったり、逆に知っていればコードの可読性は向上し、ガバナ制約の回避につなげることもできる。<br>現時点（Spring’14）で使用可能な日付関数をメモしておく。</p>
<p>[SOQL：日付関数]<br><strong>CALENDAR_MONTH()</strong> ：date 項目のカレンダー月を表す数値を返します。<br><strong>CALENDAR_QUARTER() </strong>：date 項目の四半期を表す数値を返します。<br><strong>CALENDAR_YEAR()</strong> ： date 項目のカレンダー年を表す数値を返します。<br><strong>DAY_IN_MONTH() </strong>：日付項目の月の何日目かを表す数値を返します。<br><strong>DAY_IN_WEEK() </strong>：date 項目の曜日を表す数値を返します。<br><strong>DAY_IN_YEAR() </strong>：date 項目の年の何日目かを表す数値を返します。<br><strong>DAY_ONLY()</strong> ：dateTime 項目の日付部分を表す日付を返します。<br><strong>FISCAL_MONTH()</strong> ：date 項目の会計年度の月を表す数値を返します。<br><strong>FISCAL_QUARTER()</strong> ：date 項目の会計年度の四半期を表す数値を返します。<br><strong>FISCAL_YEAR()</strong> ：date 項目の会計年度を表す数値を返します。<br><strong>HOUR_IN_DAY()</strong> ： dateTime 項目の時間を表す数値を返します。<br><strong>WEEK_IN_MONTH() </strong>：date 項目の月の何週目かを表す数値を返します。<br><strong>WEEK_IN_YEAR() </strong>：date 項目の年の何週目かを表す数値を返します。</p>
<p>• クエリに GROUP BY 句が含まれていない場合でも、WHERE 句で日付関数を使用して結果を絞り込むことができます。次のクエリは 2009 年のデータを返します。</p>
<p><pre>SELECT CreatedDate, Amount<br>FROM Opportunity<br>WHERE CALENDAR_YEAR(CreatedDate) = 2009</pre><br>• 日付関数の結果を WHERE 句の 日付リテラルと比較することはできません。次のクエリは機能しません。</p>
<p><pre>SELECT CreatedDate, Amount<br>FROM Opportunity<br>WHERE CALENDAR_YEAR(CreatedDate) = THIS_YEAR</pre><br>• GROUP BY 句にも含めない限り、SELECT 句で日付関数を使用することはできません。日付関数で使用される項目が date 項目の場合は例外があります。GROUP BY句では日付関数の代わりに、date 項目を使用できます。<br>これは、dateTime 項目に対しては機能しません。次のクエリは、CALENDAR_YEAR(CreatedDate) が GROUP BY句に含まれていないため機能しません。</p>
<p><pre>SELECT CALENDAR_YEAR(CreatedDate), Amount<br>FROM Opportunity</pre><br>次のクエリは、CloseDate という date 項目が GROUP BY 句に含まれているため機能します。これが、CreatedDate などの dateTime 項目の場合には機能しません。</p>
<p><pre>SELECT CALENDAR_YEAR(CloseDate)<br>FROM Opportunity<br>GROUP BY CALENDAR_YEAR(CloseDate)</pre><br>以上</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce日期比较]]></title>
      <url>http://www.ibmer.info/salesforce-date-compare.html</url>
      <content type="html"><![CDATA[<p>２つの日付の期間を日数で取得するには、<br>DateクラスのdaysBetweenメソッドを使用します。</p>
<p>daysBetweenメソッドの引数には比較するDateクラスを渡します。</p>
<p>例）<br>2010/12/1～2010/12/31の期間の日数を求める。</p>
<p>Date startDate = Date.newInstance(2010,12,1);<br>Date endDate = Date.newInstance(2010,12,31);<br>System.debug(startDate.daysBetween(endDate));</p>
<p>結果は、30が返されます。</p>
<p>日付の比較を逆にするとマイナスが返されます。<br>System.debug(endDate.daysBetween(startDate));</p>
<p>結果は、-30が返されます。</p>
<p>同日を比較すると、<br>Date startDate = Date.newInstance(2010,12,1);<br>Date endDate = Date.newInstance(2010,12,1);<br>System.debug(startDate.daysBetween(endDate));</p>
<p>結果は、0が返されます。<br>返された値は、比較の基点となった開始日付の<br>DateクラスのaddDaysメソッド（日付の加算を行なうメソッド）に渡すと<br>終了日付が返されます。</p>
<p>例）<br>開始日付が、2010/12/1<br>終了日付が、2010/12/31<br>Date startDate = Date.newInstance(2010,12,1);<br>Date endDate = Date.newInstance(2010,12,31);<br>System.debug(startDate.addDays(startDate.daysBetween(endDate)));</p>
<p>結果は、2010/12/31が返されます。</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[When to use with sharing or without sharing]]></title>
      <url>http://www.ibmer.info/when-to-use-with-sharing-or-without-sharing.html</url>
      <content type="html"><![CDATA[<p>①Use <strong>With Sharing</strong> when the User has access to the records being updated via Role, Sharing Rules, Sales Teams - any sort of sharing really.</p>
<p>Apexクラスに<strong>with sharingキーワード</strong>を付与します。<br>これによって、<strong>ユーザに適用されているレコードレベルの共有ルールを強制実行することができます</strong>（<strong>ユーザモード</strong>での動作）。</p>
<p>&nbsp;</p>
<p><strong>②Without Sharing</strong> is reserved for cases where the User does not have access to the records, but there is a need to update them based on user input.</p>
<p>with sharingキーワードを付与しても、<strong>オブジェクトのCRUD権限、項目のアクセス権限は、システムモードのまま</strong>ということです。</p>
<p>&nbsp;</p>
<p>③with sharingキーワードもwithout sharingキーワードも付与しない場合は、<strong>呼び出し元のApexクラスの設定が有効</strong>となります。<br>例えば、with sharingキーワードが付与されたApexクラスから、キーワードなしのApexクラスを呼び出した場合、ユーザに適用されている共有ルールが強制実行されます。呼び出し位置が最上位レベルの場合（最初に呼ばれるApexクラスの場合）は、システムモードでの動作となります。</p>
<hr>
<p>動作モードを表にまとめるとこうなります。</p>
<p><table class="default"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><th rowspan="2">呼び出し位置</th></p>
<p><th colspan="3" align="center">キーワード</th><br></p>
<p><tr></tr></p>
<p><th>なし</th></p>
<p><th>without sharing</th></p>
<p><th>with sharing</th><br></p>
<p><tr></tr></p>
<p><td>最上位レベル</td></p>
<p><td>システムモード</td></p>
<p><td>システムモード</td></p>
<p><td>ユーザモード</td><br></p>
<p><tr></tr></p>
<p><td>最上位レベル以外</td></p>
<p><td>呼び出し元のモードと同じ</td></p>
<p><td>システムモード</td></p>
<p><td>ユーザモード</td><br><br><br><br>&nbsp;</p>
<hr>
<p>官方文档：<a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_keywords_sharing.htm" target="_blank" rel="external">Using the with sharing or without sharing Keywords</a></p>
<p>Use the with sharing or without sharing keywords on a class to specify whether or not to enforce sharing rules.<br>The with sharing keyword allows you to specify that the sharing rules for the current user be taken into account for a class. You have to explicitly set this keyword for the class because Apex code runs in system context. In system context, Apex code has access to all objects and fields— object permissions, field-level security, sharing rules aren’t applied for the current user. This is to ensure that code won’t fail to run because of hidden fields or objects for a user. The only exceptions to this rule are Apex code that is executed with the executeAnonymous call and Chatter in Apex. executeAnonymous always executes using the full permissions of the current user. For more information on executeAnonymous, see Anonymous Blocks.</p>
<p>Use the with sharing keywords when declaring a class to enforce the sharing rules that apply to the current user.<br>Use the without sharing keywords when declaring a class to ensure that the sharing rules for the current user are not enforced. For example, you may want to explicitly turn off sharing rule enforcement when a class acquires sharing rules when it is called from another class that is declared using with sharing.</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MBR分区表、GPT分区表、ESP分区、MSR分区的简介]]></title>
      <url>http://www.ibmer.info/win-partition.html</url>
      <content type="html"><![CDATA[<p>1. MBR分区表：<br>Master Boot Record，即硬盘主引导记录分区表，只支持容量在 2.1TB 以下的硬盘，超过2.1TB的硬盘只能管理2.1TB，最多只支持4个主分区或三个主分区和一个扩展分区，扩展分区下可以有多个逻辑分区。</p>
<p>2. GPT分区表：<br>GPT，全局唯一标识分区表(GUID Partition Table)，与MBR最大4个分区表项的限制相比，GPT对分区数量没有限制，但Windows最大仅支持128个GPT分区，GPT可管理硬盘大小达到了18EB。只有基于UEFI平台的主板才支持GPT分区引导启动。</p>
<p>3. ESP分区：<br>EFI system partition，该分区用于采用了EFI BIOS的电脑系统，用来启动操作系统。分区内存放引导管理程序、驱动程序、系统维护工具等。如果电脑采用了EFI系统，或当前磁盘用于在EFI平台上启动操作系统，则应建议ESP分区。</p>
<p>4. MSR分区：<br>即微软保留分区，是GPT磁盘上用于保留空间以备用的分区，例如在将磁盘转换为动态磁盘时需要使用这些分区空间。</p>
<p>MSR分区即 Microsoft 保留 (MSR) 分区。是每个 GUID 分区表 (GPI) 磁盘都要求的分区。 　　系统组件可以将 MSR 分区的部分分配到新的分区以供它们使用。例如，将基本 GPT 磁盘转换为动态磁盘后，系统分配的 MSR 分区将被用作“逻辑磁盘管理器”(LDM) 元数据分区。 　　MSR 分区的大小会因 GPT 磁盘的大小不同而发生变化。对于小于 16 GB 的磁盘，MSR 分区为 32 MB。对于大于 16 GB 的磁盘，MSR 分区为 128 MB。MSR 分区在“磁盘管理”中不可见，用户也无法在 MSR 分区上存储或删除数据。</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime快捷键]]></title>
      <url>http://www.ibmer.info/sublime-shortkey.html</url>
      <content type="html"><![CDATA[<p>Sublime text 3是我最喜欢的代码编辑器，每天和代码打交道，必先利其器，掌握基本的代码编辑器的快捷键，能让你打码更有效率。刚开始可能有些生疏，只要花一两个星期坚持使用并熟悉这些常用的快捷键，今后就能解放鼠标了，省心省力又省时，何乐而不为呢。</p>
<p>以下是个人总结不完全的快捷键总汇，祝愿各位顺利解放自己的鼠标。</p>
<p>选择类</p>
<p>Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。</p>
<p>Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。</p>
<p>Ctrl+L 选中整行，继续操作则继续选择下一行，效果和Shift+↓ 效果一样。</p>
<p>Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</p>
<p>Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</p>
<p>Ctrl+M 光标移动至括号内结束或开始的位置。</p>
<p>Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</p>
<p>Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</p>
<p>Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。</p>
<p>Ctrl+Shift+] 选中代码，按下快捷键，展开代码。</p>
<p>Ctrl+K+0 展开所有折叠代码。</p>
<p>Ctrl+← 向左单位性地移动光标，快速移动光标。</p>
<p>Ctrl+→ 向右单位性地移动光标，快速移动光标。</p>
<p>shift+↑ 向上选中多行。</p>
<p>shift+↓ 向下选中多行。</p>
<p>Shift+← 向左选中文本。</p>
<p>Shift+→ 向右选中文本。</p>
<p>Ctrl+Shift+← 向左单位性地选中文本。</p>
<p>Ctrl+Shift+→ 向右单位性地选中文本。</p>
<p>Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</p>
<p>Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</p>
<p>Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。</p>
<p>Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。</p>
<p>编辑类</p>
<p>Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</p>
<p>Ctrl+Shift+D 复制光标所在整行，插入到下一行。</p>
<p>Tab 向右缩进。</p>
<p>Shift+Tab 向左缩进。</p>
<p>Ctrl+K+K 从光标处开始删除代码至行尾。</p>
<p>Ctrl+Shift+K 删除整行。</p>
<p>Ctrl+/ 注释单行。</p>
<p>Ctrl+Shift+/ 注释多行。</p>
<p>Ctrl+K+U 转换大写。</p>
<p>Ctrl+K+L 转换小写。</p>
<p>Ctrl+Z 撤销。</p>
<p>Ctrl+Y 恢复撤销。</p>
<p>Ctrl+U 软撤销，感觉和Gtrl+Z一样。</p>
<p>Ctrl+F2 设置书签</p>
<p>Ctrl+T 左右字母互换。</p>
<p>F6 单词检测拼写</p>
<p>搜索类</p>
<p>Ctrl+F 打开底部搜索框，查找关键字。</p>
<p>Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</p>
<p>Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。</p>
<p>Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</p>
<p>Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</p>
<p>Ctrl+：打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</p>
<p>Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</p>
<p>Esc 退出光标多行选择，退出搜索框，命令框等。</p>
<p>显示类</p>
<p>Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。</p>
<p>Ctrl+PageDown 向左切换当前窗口的标签页。</p>
<p>Ctrl+PageUp 向右切换当前窗口的标签页。</p>
<p>Alt+Shift+1窗口分屏，恢复默认1屏（非小键盘的数字）</p>
<p>Alt+Shift+2 左右分屏-2列</p>
<p>Alt+Shift+3 左右分屏-3列</p>
<p>Alt+Shift+4 左右分屏-4列</p>
<p>Alt+Shift+5 等分4屏</p>
<p>Alt+Shift+8 垂直分屏-2屏</p>
<p>Alt+Shift+9 垂直分屏-3屏</p>
<p>Ctrl+K+B 开启/关闭侧边栏。</p>
<p>F11 全屏模式</p>
<p>Shift+F11 免打扰模式</p>
<p>其实sulime text菜单栏各个选项中都会提示相关的快捷键，各位可以自己去看看，本文主要是整理一些隐藏或不被发掘的快捷键，个人整理难免会有实用的快捷键遗漏，如果你还发现有实用的sublime text的快捷键和使用栗子，欢迎补充~最后说一句，死记硬背是记不住的，请结合自己的需求，有选择的使用、练习、熟悉相关快捷键，一两个星期后定能提高效率！</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> tools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce によるTLS 1.0 無効化対応]]></title>
      <url>http://www.ibmer.info/Salesforce-TLS.html</url>
      <content type="html"><![CDATA[<p><em>問題：</em></p>
<p>サーバからコードを更新する場合、下記のようなエラー</p>
<p><strong>「この組織ではTLS1.0が無効になりました。HTTPSを使用してSalesforceに接続するには、TLS1.1以降を使用してください」</strong>が発生しました。</p>
<p><em>解決案：</em></p>
<p>eclipseパスの「eclipse.ini」ファイルに下記の内容を追加する。</p>
<p>-Dhttps.protocols=TLSv1.1,TLSv1.2</p>
<p>参考</p>
<p><a href="https://developer.salesforce.com/page/Force.com_IDE_Installation" target="_blank" rel="external">https://developer.salesforce.com/page/Force.com_IDE_Installation</a></p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Force.com サイトの設定]]></title>
      <url>http://www.ibmer.info/force-com-e3-82-b5-e3-82-a4-e3-83-88-e3-81-ae-e8-a8-ad-e5-ae-9a.html</url>
      <content type="html"><![CDATA[<div class="data colSort"><br><br><a href="http://haiyang-developer-edition.ap2.force.com/" target="_blank" rel="external">マイページ</a><br><table class="permTable sort_table" border="0" summary="Permissions needed for the documented functionality" width="100%" cellspacing="0" cellpadding="0"><br><tbody class="tbody"><br><tr class="row"><br><td class="permRowLeft" colspan="1" rowspan="1">Force.com サイトの作成と編集を行う</td><br><td class="permRowRight" colspan="1" rowspan="1">「アプリケーションのカスタマイズ」</td><br></tr><br><tr class="row"><br><td class="permRowLeft" colspan="1" rowspan="1">Force.com サイトの公開アクセス設定を編集する</td><br><td class="permRowRight" colspan="1" rowspan="1">「ユーザの管理」</td><br></tr><br></tbody><br></table><br></div>

<p>Force.com サイトでは、公開 Web サイトとアプリケーションを作成できます。それらは Salesforce 組織と直接統合されるため、ユーザがログインする場合にユーザ名やパスワードは必要ありません。</p>
<div class="p"><br><br>Force.com サイトを設定する手順は、次のとおりです。<br><br>1.  [設定] から、<span class="keyword parmname">[クイック検索]</span> ボックスに<kbd class="ph userinput">「サイト」</kbd>と入力し、<strong>[サイト]</strong> を選択します。<br>2.  組織のカスタム <a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_creating_subdomain.htm&amp;language=ja" target="_blank" rel="external">Force.com ドメインを登録</a>します。<br>3.  サイトを<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_creating_and_editing_sites.htm&amp;language=ja" target="_blank" rel="external">作成</a>および<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_configuring_sites.htm&amp;language=ja" target="_blank" rel="external">設定</a>します。<br>4.  サイトの <a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_site_pages.htm&amp;language=ja" target="_blank" rel="external">Visualforce ページ</a>を開発して使用し、<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_standard_pages.htm&amp;language=ja" target="_blank" rel="external">標準ページ</a>を使用するか非表示にし、追加設定なしの<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_error_pages.htm&amp;language=ja" target="_blank" rel="external">エラーページ</a>をカスタマイズするか置き換えます。これらのページをサイトと関連付けます。<br>5.  電子サイトテンプレートを選択します。参照項目を使用して、開発したテンプレートの検索と選択を行うか、用意されているすぐに使用できるテンプレートを使用します。サイトテンプレートには、サイトのページレイアウトおよびスタイルシートが用意され、関連付けられたポータルから継承される書式は上書きされます。<br>6.  ログインまたはセルフ登録する<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_customer_portal_setup.htm&amp;language=ja" target="_blank" rel="external">ポータルを有効化</a>し、サイトと関連付けます。<br>7.  必要に応じて、<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_public_access_settings.htm&amp;language=ja" target="_blank" rel="external">公開アクセス設定</a>を変更します。<br>8.  サイトを公開する準備が整ったら、[サイトの詳細] ページの <strong>[有効化]</strong> をクリックします。サイトの有効化は、[サイトの編集] ページや [サイト] ページからも行えます。<br></div><br><div class="p"><br><br>サイトを設定すると、次のことが実行できます。<br><br><em>   サイトに対しレポートおよびダッシュボードを実行する。
</em>   サイトに関連する基準を満たす場合にメールアラートを開始する<a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_workflow.htm&amp;language=ja" target="_blank" rel="external">ワークフロールールを作成</a>する。<br><a href="https://help.salesforce.com/HTViewHelpDoc?id=sites_setup_overview.htm&amp;language=ja" target="_blank" rel="external">参照</a><br><br>&nbsp;<br><br></div>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用的Windows键]]></title>
      <url>http://www.ibmer.info/win-shortkey.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>常用的 Windows 键，估计很多人还不懂的，这里再提提，让大家学习学习</p>
</blockquote>
<ol>
<li><span class="text-base">Windows 键 + 空格键</span></li>
</ol>
<p>功能：透明化所有窗口，快速查看桌面。使用此快捷键可以立即将目前所有打开的窗口透明化，以便查看桌面。</p>
<ol>
<li><span class="text-base">Windows 键 + 字母键“D”</span></li>
</ol>
<p>功能：最小化所有窗口，并快速查看桌面。这组快捷键能帮助使用者立即将当前桌面上所有窗口最小化，以便查看桌面；再次按下此快捷键时，刚刚最小化的窗口又会全部出现了。</p>
<ol>
<li><span class="text-base">Windows 键 + 数字键</span></li>
</ol>
<p>功能：按顺序打开相应程序。与快速启动栏中的程序相对应，如果您能记住快速启动栏中程序的排列顺序，直接按下此组快捷键就能马上调用了。</p>
<ol>
<li><span class="text-base">Windows 键 + 字母键“T”</span></li>
</ol>
<p>功能：依次查看已经打开程序的预览图。使用这组快捷键，用户可以从左至右轻松预览已打开程序的缩略图；同时，若使用 Windows键+Shift 键+“T”则可以从右至左反方向查看。</p>
<ol>
<li><span class="text-base">Windows 键 + 字母键“G”</span></li>
</ol>
<p>功能：依次显示桌面小工具。如果您的桌面上有太多的小工具，查看起来就不太方便了；使用此组键能迅速让小工具依次显示在面前，想找哪一个都十分方便。</p>
<ol>
<li><span class="text-base">Windows 键 + 字母键“P”</span></li>
</ol>
<p>功能：打开“外接显示”的设置面板，当然这个功能只有接入了一些外接设备后才能派上用场。</p>
<ol>
<li><span class="text-base">Windows 键 + 字母键“X”</span></li>
</ol>
<p>功能：打开“Windows移动中心”设置面板（这个功能主要面向笔记本电脑用户）。Windows 7 中的移动中心提供了显示器亮度控制、音量控制、笔记本电池状态监控、Mobile 手机同步设置、外接显示器管理…等多种功能。</p>
<ol>
<li><span class="text-base">Windows 键 + 符号键“+” / Windows键+ 符号键“-”</span></li>
</ol>
<p>功能：打开放大镜。Windows 7 中新增加了放大镜功能，对于视力不好的使用者来说，这是很好用的一项功能。按下这组键，Windows 7 将自动打开放大/缩小功能。</p>
<ol>
<li><span class="text-base">Windows 键 + 方向键“↑”</span></li>
</ol>
<p>功能：使当前使用的窗口最大化。</p>
<ol>
<li><span class="text-base">Windows 键 + 方向鍵“↓”</span></li>
</ol>
<p>功能：使当前使用中的最大化窗口恢复正常显示；或者如果当前窗口不是最大化状态，则会将其最小化。</p>
<ol>
<li><span class="text-base">Windows 键 + 方向键“←” / Windows 键 + 方向键“→” (Aero Snap)</span></li>
</ol>
<p>功能：使正在使用中的窗口贴向屏幕左侧/右侧，而只占用50% 的显示器面积，熟练使用此功能对同时编辑两个文档并进行校对会很方便。</p>
<ol>
<li><span class="text-base">Windows 键 + Home 键 (Aero Shake)</span></li>
</ol>
<p>功能：只显示当前窗口，并且最小化其他窗口，以突出显示当前使用中的窗口。</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里云ECS安装Memcached]]></title>
      <url>http://www.ibmer.info/ecs-install-memcached.html</url>
      <content type="html"><![CDATA[<h1 id="■阿里云ECS安装Memcached"><a href="#■阿里云ECS安装Memcached" class="headerlink" title="■阿里云ECS安装Memcached"></a>■阿里云ECS安装Memcached</h1><p>问题相当于How to Install Memcached on Ubuntu/CentOS.</p>
<h2 id="Install-Memcached"><a href="#Install-Memcached" class="headerlink" title="Install Memcached"></a><del><strong>Install Memcached</strong></del></h2><pre><del>sudo apt-get install memcached</del></pre>
<del>Installing php-pear (this is where we will get memcache module)</del>
<pre><del>sudo apt-get install php-pear</del></pre>

<h2 id="Install-memcache-php-extension-using-PECL"><a href="#Install-memcache-php-extension-using-PECL" class="headerlink" title="Install memcache php extension using PECL"></a><del><strong>Install memcache php extension using PECL</strong></del></h2><pre><del>sudo pecl install memcache</del></pre>
<del>If the PECL installation asks this question:</del>
<pre><del>"Enable memcache session handler support? [yes]"</del></pre>
<del>Just type enter in order to continue without issues.</del>

<del>Last step: add your new memcache.so module to PHP memcache.ini file:</del>
<pre><del>touch /etc/php5/conf.d/memcache.ini
echo "extension=memcache.so" &gt;&gt; /etc/php5/conf.d/memcache.ini
</del></pre>
<del>Start memcached</del>
<pre><del>sudo service memcached start
</del></pre>
<del>Reload your PHP server to load the memcached extension</del>

<del>If you use php-fpm:</del>
<pre><del>sudo service php5-fpm reload
</del></pre>
<del>If you use Apache:</del>
<pre><del>sudo service apache2 reload
</del></pre>
<del>**Test memcached**</del>
<pre><del>ps aux | grep memcache
</del></pre>
<del>You should see something like this:</del>
<pre><del>memcache 14289 0.0 0.0 38358 1172 ? Sl 06:15 0:00 /usr/bin/memcached -m 64 -p 11211 -u memcache -l 127.0.0.1
</del></pre>
<del>Remember to configure memcached at system level from:</del>
<pre><del>/etc/memcached.conf</del></pre>
&nbsp;

# <del>■状态查询</del>

<pre><del>service memcached status</del></pre>

<h1 id="■配置php-ini"><a href="#■配置php-ini" class="headerlink" title="■配置php.ini"></a><del>■配置php.ini</del></h1><p>………….出错。。。。。</p>
<p>据说是php版本和memcache版本不一致</p>
<hr>
<p><span style="text-decoration: underline;"><span style="color: #ff0000; text-decoration: underline;">华丽的分割线后，重新开始</span></span></p>
<h1 id="■通过apt-get或者yum导致版本不一致，php-fpm不能启动，使用二进制编译重新安装。"><a href="#■通过apt-get或者yum导致版本不一致，php-fpm不能启动，使用二进制编译重新安装。" class="headerlink" title="■通过apt-get或者yum导致版本不一致，php-fpm不能启动，使用二进制编译重新安装。"></a><span style="text-decoration: underline;"><span style="color: #ff0000; text-decoration: underline;">■通过apt-get或者yum导致版本不一致，php-fpm不能启动，使用二进制编译重新安装。</span></span></h1><h2 id="1-安装Memcached"><a href="#1-安装Memcached" class="headerlink" title="1.安装Memcached"></a>1.安装Memcached</h2><p>可以去<a href="http://memcached.org/" target="_blank" rel="external">这里</a>查看最新版本</p>
<pre>wget https://sourceforge.net/projects/levent/files/libevent/libevent-2.0/libevent-2.0.22-stable.tar.gz

tar xzfv libevent-2.0.22-stable.tar.gz
cd libevent-2.0.22-stable 
sudo ./configure
sudo make
sudo make install</pre>
PS:默认安装到/usr/local/lib/目录
<div></div>
<div></div>

## 2.安装Libmemcached

可以去[这里](https://launchpad.net/libmemcached)查看最新版本
<pre>wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz
tar xzfv libmemcached-1.0.18.tar.gz 
cd libmemcached-1.0.18 

编译的时候需要传入安装目录和Memcached安装目录（默认会识别Memcached的默认安装目录，但我这样写更能让大家理解且具通用性）
sudo ./configure --prefix=/usr/local/libmemcached --with-memcached=/usr/local/memcached/bin/memcached</pre>
<div></div>
<div></div>
<div>

## 3.安装**Memcached**拓展，不是Memcache

</div>
可以去[这里](http://pecl.php.net/package/memcached)查看最新版本
<pre>wget http://pecl.php.net/get/memcached-2.2.0.tgz
tar xzfv memcached-2.2.0.tgz 
cd memcached-2.2.0

#可以用whereis phpize确定路径
/a/apps/php-5.4.24/bin/phpize

#后面是PHP目录,libmemcached目录
sudo ./configure --enable-memcached --with-php-config=/a/apps/php/bin/php-config --with-libmemcached-dir=/usr/local/libmemcached

sudo make
sudo make install</pre>
<pre>php.ini添加拓展
[memcached]
extension_dir="/a/apps/php-5.4.24/lib/php/extensions/no-debug-non-zts-20100525/"
extension=memcached.so</pre>
PS:快捷重启fpm：
bash/etc/init.d/php-fpm restart

# ■状态查询

<pre>service memcached status

其他常用命令
service memcached restart
service php5-fpm reload/restart
service php-fpm restart
service nginx reload
service nginx restart</pre>

<h1 id="■通过phpinfo查询"><a href="#■通过phpinfo查询" class="headerlink" title="■通过phpinfo查询"></a>■通过phpinfo查询</h1><p>会出现memcache的信息！ok搞定。</p>
<h1 id="■安装WP插件；MemcacheD-Is-Your-Friend"><a href="#■安装WP插件；MemcacheD-Is-Your-Friend" class="headerlink" title="■安装WP插件；MemcacheD Is Your Friend"></a>■安装WP插件；<strong>MemcacheD Is Your Friend</strong></h1><p>1. 需要你的服务器支持，就是你的 PHP 需要安装上 Memcached 相关的扩展，注意 PHP 有两个扩展：<strong>PHP Memcache 扩展</strong> 和 <strong>PHP Memcached 扩展</strong>，<span style="color: #ff0000;"><strong>两者仅仅相差一个字母 D</strong></span>，你可以通过<code>phpinfo()</code> 这个 PHP 函数来检测，你安装的是哪个扩展。</p>
<p>2. 根据不同的 PHP 扩展下载不同的 WordPress Memcached 插件（这个很重要）：<br><strong>PHP Memcache 扩展</strong>：<a href="http://wordpress.org/extend/plugins/memcached/" target="_blank" rel="external">http://wordpress.org/extend/plugins/memcached/</a><br><strong>PHP Memcached 扩展</strong>：<a href="https://wordpress.org/plugins/memcached-is-your-friend/" target="_blank" rel="external">https://wordpress.org/plugins/memcached-is-your-friend/</a></p>
<p>3. 把下载的：<code>object-cache.php</code> 复制到 <code>wp-content</code>，注意不是 <code>wp-content/plugins/</code>。</p>
<p>4. WordPress 会自动检查在 <code>wp-content</code> 目录下是否有 <code>object-cache.php</code> 文件，如果有，直接调用它作为 WordPress 对象缓存机制。</p>
<p># </p>
<h1 id="■WordPress-内存缓存终极加速插件：Batcache"><a href="#■WordPress-内存缓存终极加速插件：Batcache" class="headerlink" title="■WordPress 内存缓存终极加速插件：Batcache"></a>■WordPress 内存缓存终极加速插件：Batcache</h1><h2 id="Batcache-工作原理"><a href="#Batcache-工作原理" class="headerlink" title="Batcache 工作原理"></a>Batcache 工作原理</h2><p>WordPress 启用 Memcached 这样的内存缓存之后，每次访问 WordPress 页面，都要从内存中获取多个缓存对象。</p>
<p>而 Batcache 主要就是解决这个问题，它是基于 Memcached 的 WordPress 缓存插件，它的工作原理是：把当前整个页面作为一个对象缓存到内存中，这样再次访问 WordPress 页面的时候，直接获从内存中获取这个对象即可，速度极快。</p>
<p>并且这个插件也是 WordPress.com 官方使用的加速插件之一。</p>
<h2 id="Batcache-安装和使用"><a href="#Batcache-安装和使用" class="headerlink" title="Batcache 安装和使用"></a>Batcache 安装和使用</h2><p>安装这个插件有点麻烦，不过只要按照以下步骤进行就可以：</p>
<ol>
<li>安装好 Memcached（上文所述）</li>
<li>上传 <code>advanced-cache.php</code> 到 <code>/wp-content/</code> 目录。</li>
<li>在 <code>wp-config.php</code> 添加以下代码激活 Batcache:<br><code>define(&#39;WP_CACHE&#39;, true);</code></li>
<li>然后尝试多次载入页面查看源代码，应该在 之前可以看到一些 Batcache 状态代码。（未登录状态）</li>
<li>可以修改 <code>advanced-cache.php</code> 开始的一些代码来调整选项。</li>
<li>可选的上传 <code>batcache.php</code> 到你的 <code>/wp-content/plugins/</code> 目录。<br><strong>下载 Batcache</strong>：<a href="http://wordpress.org/extend/plugins/batcache/" target="_blank" rel="external">http://wordpress.org/extend/plugins/batcache/</a></li>
</ol>
<p>运行后有类似代码</p>
<pre>&lt;!--
 generated 5 seconds ago
 generated in 0.445 seconds
 served from batcache in 0.003 seconds
 expires in 295 seconds
--&gt;</pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wordpress-google-code-prettify]]></title>
      <url>http://www.ibmer.info/wordpress-google-code-prettify.html</url>
      <content type="html"><![CDATA[<h1 id="■Problem"><a href="#■Problem" class="headerlink" title="■Problem"></a>■Problem</h1><p>How can I format the code by using css/js ??</p>
<p>I suggest You can use google-code-prettify.</p>
<p>最近为小站烦恼，如何修改小站的代码样式呢？？虽然是老掉牙的问题，不过继续写一篇小文章记录下。方式很简单，只要加载js和css就可以了。</p>
<p>各种插件虽然方便，不过导致系统崩溃是经常的。。。还是Keep Simple比较好。</p>
<h1 id="■GIT链接"><a href="#■GIT链接" class="headerlink" title="■GIT链接"></a>■<a href="https://github.com/google/code-prettify" target="_blank" rel="external">GIT链接</a></h1><p><a href="https://github.com/google/code-prettify" target="_blank" rel="external">https://github.com/google/code-prettify</a></p>
<h1 id="■WP代码"><a href="#■WP代码" class="headerlink" title="■WP代码"></a>■WP代码</h1><pre>&lt;?php
///////////
//防止代码转义 //
///////////
function g_prettify_esc_html($content)
{
 $regex = '/(&lt;pre\s+[^&gt;]*?class\s*?=\s*?[",\'].*?prettyprint.*?[",\'].*?&gt;)(.*?)(&lt;\/pre&gt;)/sim';
 return preg_replace_callback($regex, g_prettify_esc_callback, $content);
}
function g_prettify_esc_callback($matches)
{
 $tag_open = $matches[1];
 $content = $matches[2];
 $tag_close = $matches[3];
 $content = esc_html($content);
 return $tag_open . $content . $tag_close;
}
add_filter('the_content', 'g_prettify_esc_html', 2);
add_filter('comment_text', 'g_prettify_esc_html', 2);

//////////////
//强制兼容&lt;pre&gt;
//把pre强制添加css样式 //
//////////////
function g_prettify_replace($text){
 $replace = array( '&lt;pre&gt;' =&gt; '&lt;pre class="prettyprint linenums" &gt;' );
 $text = str_replace(array_keys($replace), $replace, $text);
 return $text;
}
add_filter('the_content', 'g_prettify_replace');
/////////////////////
//页脚加载javascript文件 //
/////////////////////
function prettify(){

//wp_enqueue_style( 'ibmer-info-prettify-css', IBMER_PLUGIN_URL_ASSETS . '/prettify.css' );
 //加载各种自定义样式
 wp_enqueue_style( 'ibmer-info-prettify-css', IBMER_PLUGIN_URL_ASSETS . '/sons-of-obsidian.css' );
 wp_enqueue_script( 'ibmer-info-prettify-js', IBMER_PLUGIN_URL_ASSETS . '/prettify.js' );
}
add_action( 'wp_enqueue_scripts', 'prettify' );

//////////////
//加载css //
//////////////
add_action( 'wp_footer', 'ibmer_prettify_on_load_script' );
function ibmer_prettify_on_load_script()
{
 ?&gt;
 &lt;script type="text/javascript"&gt;
 window.onload = function(){prettyPrint();};
 &lt;/script&gt;
 &lt;?php 
};

//////////////
//后台编辑器添加按钮 //
//////////////
function prettify_bottom($mce_settings) {
?&gt;
&lt;script type="text/javascript"&gt;
QTags.addButton( 'kkpre', 'Ibmer-prettify', '&lt;pre class="prettyprint linenums" &gt;\n\n&lt;/pre&gt;', "" );//添加高亮代码
QTags.addButton( 'i&lt;/&gt;', '&lt;/&gt;', "&amp;lt;", "&amp;gt;" );
function prettify_bottom() {
}
&lt;/script&gt;
&lt;?php
}
add_action('after_wp_tiny_mce', 'prettify_bottom');
?&gt;</pre>

<h1 id="■后记"><a href="#■后记" class="headerlink" title="■后记"></a>■后记</h1><p>其实还可以添加界面筛选样式做的更加好，不过时间仓促，希望以后完善。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce-TestClass]]></title>
      <url>http://www.ibmer.info/salesforce-testclass.html</url>
      <content type="html"><![CDATA[<h1 id="■Testing-Custom-Controllers-and-Controller-Extensions"><a href="#■Testing-Custom-Controllers-and-Controller-Extensions" class="headerlink" title="■Testing Custom Controllers and Controller Extensions"></a><span id="topic-title" class="ph">■<a href="https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_error_handling.htm" target="_blank" rel="external">Testing Custom Controllers and Controller Extensions</a></span></h1><pre>PageReference pageRef = Page.success;
 Test.setCurrentPage(pageRef);

// Add parameters to page URL
 ApexPages.currentPage().getParameters().put('qp', 'yyyy');</pre>
&nbsp;

&nbsp;

# <span id="topic-title" class="ph">■</span>如何在TestClass中获取profile？

<pre>static User createStandardUser(String userNamePrefix) {
Profile p = [SELECT Id FROM Profile WHERE Name='Standard User'];
User user = new User(
Alias = 'StUser',
Email= userNamePrefix +'newuser@testorg.com',
EmailEncodingKey='UTF-8', LastName='Testing',
LanguageLocaleKey='en_US', LocaleSidKey='en_US',
ProfileId = p.Id, TimeZoneSidKey='America/Los_Angeles',
UserName=userNamePrefix + 'newuser@testorg.com');
return user;
}
static User createSystemAdminUser(String userNamePrefix) {
Profile p = [SELECT Id FROM Profile WHERE Name='System Administrator'];
User user = new User(
Alias = 'SysAdm',
Email= userNamePrefix + 'newuser@testorg.com',
EmailEncodingKey='UTF-8', LastName='Testing',
LanguageLocaleKey='en_US', LocaleSidKey='en_US',
ProfileId = p.Id, TimeZoneSidKey='America/Los_Angeles',
UserName=userNamePrefix + 'newuser@testorg.com');
return user;
}</pre>

<h1 id="■StandardController如何获取？"><a href="#■StandardController如何获取？" class="headerlink" title="■StandardController如何获取？"></a><span id="topic-title" class="ph">■<span class="typ">StandardController</span></span>如何获取？</h1><p><pre>ApexPages.StandardController sc = new ApexPages.StandardController(new Purchase__c());</pre><br>&nbsp;</p>
<h1 id="■关于Test-Class的CustomSetting设置"><a href="#■关于Test-Class的CustomSetting设置" class="headerlink" title="■关于Test Class的CustomSetting设置"></a><span id="topic-title" class="ph">■</span>关于Test Class的CustomSetting设置</h1><p><strong>Preferred solution</strong></p>
<p>You can perfectly, insert a new Custom Setting record, in your test context like you would normally do with an SObject</p>
<p><pre>Whatever_custom_setting<strong>c setting = new Whatever_custom_setting</strong>c();<br>setting.Name = ‘Test Setting’;<br>setting.Value__c = ‘Whatever’;<br>insert setting;</pre><br>and then your function should return the newly created test setting.</p>
<p><strong>Alternative solution</strong></p>
<p>declare your method with the @isTest(SeeAllData=true) that way your testmethod has visility over the data in your database, outside of the test context. However, these testmethods might fail in cases where there is no data in the custom setting.</p>
<p>&nbsp;</p>
<h1 id="■Adding-a-Test-for-the-Batch-Apex-Class"><a href="#■Adding-a-Test-for-the-Batch-Apex-Class" class="headerlink" title="■Adding a Test for the Batch Apex Class"></a><span id="topic-title" class="ph">■</span><a href="https://developer.salesforce.com/docs/atlas.en-us.apex_workbook.meta/apex_workbook/apex_batch_2.htm" target="_blank" rel="external">Adding a Test for the Batch Apex Class</a></h1><p><a href="https://developer.salesforce.com/docs/atlas.en-us.apex_workbook.meta/apex_workbook/apex_batch_2.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.en-us.apex_workbook.meta/apex_workbook/apex_batch_2.htm</a></p>
<p>isTest &amp; pulic</p>
<p><a href="https://developer.salesforce.com/docs/atlas.en-us.apex_workbook.meta/apex_workbook/apex_testing_1.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.en-us.apex_workbook.meta/apex_workbook/apex_testing_1.htm</a></p>
<p>&nbsp;</p>
<h1 id="■Testing-Best-Practices"><a href="#■Testing-Best-Practices" class="headerlink" title="■Testing Best Practices"></a><span id="topic-title" class="ph">■</span><a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing_best_practices.htm" target="_blank" rel="external">Testing Best Practices</a></h1><p><a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing_best_practices.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing_best_practices.htm</a></p>
<p># </p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> SalesforceTest </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[日本东京府中换驾照]]></title>
      <url>http://www.ibmer.info/change-jp-license-2.html</url>
      <content type="html"><![CDATA[<h1 id="■关键点"><a href="#■关键点" class="headerlink" title="■关键点"></a>■关键点</h1><p><u><span style="font-size: large;">1.左右转 </span></u><br>转之前打灯 左转 看三个<span style="color: #ff0000;">1.ルームミラー２．左边ミラー３・车的后排座位左边（因为那里是死角） </span><span style="color: #000000;">之后转过去</span><br>右转 一样看三个<span style="color: #ff0000;">1.ルームミラー２．右边ミラー３・车的后排座位右边（因为那里是死角）</span><span style="color: #000000;"> 之后转过去</span></p>
<p><u><span style="font-size: large;">2.过障碍</span></u><br>提前打灯 确认三个 右转变道   注意过障碍的时候记得 车身要距离<span style="color: #ff0000;">障碍50cm以上</span><br>然后 打灯 确认三个 左转变道</p>
<p><u><span style="font-size: large;">3.过十字路口</span></u><br>左转  到十字路口前要<span style="color: #ff0000;">贴边</span> （为啥呢？就是为了防后面的小摩托通过） 然后停止<br>确认绿灯后   左转前  确认三个 转过去</p>
<p>直线通过的时候<br><u>如果你是第一辆车，要确认完左右以后才能开过去 而且要慢慢过去<br></u><br>右转 有些不同 因为毕竟对面方向会有来车<br>所以转的时候  首先打灯变道贴边 之后<span style="color: #ff0000;">确认前方有没来车</span> 最后就<span style="color: #ff0000;">死盯</span>着车要开去的方向过去就好了</p>
<p>补充下有种十字路口 <span style="color: #ff0000;">1.红灯在闪 2.黄灯在闪</span>红灯的时候就当做 止まれ　来对待<br>黄灯的时候就　减速加上左右确认慢慢地过去就好了</p>
<p><u><span style="font-size: large;">4.S弯和直角转弯</span></u><br>这个在国内驾校有好好学过的都没问题，我就不多说了<br>唯一就是进去的时候<span style="color: #ff0000;">空间要留好</span>，剩下就看感觉了</p>
<p><u><span style="font-size: large;">5.日语</span></u><br>考官是用日语发号施令<br>所以基本的意思至少要懂吧<br>还有就是要表现出胸有成竹的样子</p>
<p><u><span style="font-size: large;">6.府中的考场（直角的地方）</span></u><br>有个地方大家容易忽略 这个做不好很容易掉的<br><u>很多人就是看到障碍物 右转出去逆道行驶 然后你就差不多可以预约下次了 </u><br>所以说就是在直角出去的时候 <span style="color: #ff0000;">一定要慢速</span><br>肯定是右转 <u>然后出去以后会马上碰到障碍物</u>（转出去到左边道以后会在障碍物前面）<br><span style="color: #ff0000;">这时候就是先慢速转到左边的路上</span><br><span style="color: #ff0000;">然后在打右灯确认三个 变到右边路上 然后过了障碍 变到左边路上就行  </span><br><span style="color: #ff0000;"><u>这个和过障碍一样 就是要一定要慢行</u></span></p>
<p><u><span style="font-size: large;">7.关于速度</span></u><br>直线上就加点速度<span style="color: #ff0000;">不要超过50</span>，然后<span style="color: #ff0000;">转弯要减速 20左右</span>过弯应该可以<br>考试的时候 大概是 <span style="color: #ff0000;">前边可以速度快些</span> 然后<span style="color: #ff0000;">到直角S弯的路段尽量要慢速 </span><br>由于<span style="color: #ff0000;">中间路段动作比较多</span> 一个开快就回不来了</p>
<p><u><span style="font-size: large;">8.止まれ</span></u><br>还有就是这个，<span style="color: #ff0000;">很多人没停稳就过去了，然后直接不合格</span><br>这个考官不会提醒你，眼睛放亮就好<br>所以动作就是 踩死停稳 然后确认左右边慢慢过去</p>
<p><u><span style="font-size: large;">9.上车和下车</span></u><br>上车 做个样子检查下<span style="color: #ff0000;">车前</span>（毕竟是个死角）<br>调座位 调镜子 安全带 发动 踩煞车 挂挡 拉手闸<br>接下来的动作要注意   我那天考蛮多人没做的<br><span style="color: #ff0000;">打右灯 确认三个 没车 才开出去  </span><br><span style="color: #ff0000;">而不是直接就开出去了</span></p>
<p>下车 不是直接开门出去<br><span style="color: #ff0000;">而是小开门一下 头从门缝看出去确认 然后才开门出去</span><br><span style="color: #ff0000;">这个考官一定会看 没做的人都被说了</span></p>
<p><span style="font-size: large;"><u>10.找个地方学</u></span><br>最后的建议就是找个地方学<br>不然看了我说的也是纸上谈兵</p>
<p>&nbsp;</p>
<h1 id="■过程说明"><a href="#■过程说明" class="headerlink" title="■过程说明"></a>■过程说明</h1><p>1.安全确认.很多人挂在这了.确认包括,<br>〔上车前确认,关门前确认,关门后确认.开信号灯前确认,打方向盘前确认.止まれ线停止,发动前的左右确认〕<br>2.交通标志啥的要看懂.车是往右开的,有看到 止まれ 要一时停止,等〕<br>3.直角弯.〔俺第一次就挂这了.等等要重点说下〕<br>3.S弯道.〔在中国有认真考过驾照的,不算难〕<br>4.开车的速度,〔有的地方要加速的,要开个30-40这样,很多人也挂这了〕<br>5.开车的一些不良习惯,〔比如坐姿,反向盘把握程度,,等等〕</p>
<p>府中的路考地图!<br><img src="/images/wp-uploads/2016/06/1.png" alt="1"></p>
<p>这就是府中考场的地形图,<br>现在我来讲解下.考试的路线及考试该注意的安全确认和路标</p>
<p>考试分有两种路线,一种就是以上,大家看到红色线的路线!<br>还有一种，</p>
<p><img src="/images/wp-uploads/2016/06/2.png" alt="2"></p>
<p>还有红色，我画了圈圈标了123456789…这些是注意点，我会慢慢讲解.<br>蓝色的路线,其实跟红色路线一样.都会在4的那个口进来.<br>就是蓝色的多了个过障碍物!</p>
<p><span style="color: blue;">对照俺画的图,<br></span>              <span style="color: blue;">咱们先从蓝色线路开始,!〔补充.考试时.按顺序排,第一个人考的时候,第2个人可以坐车后面,以此内推〕<br></span><br>首先在起点.上车时,要做以下确认:〔补充下,上车的时候,先把登陆证拿出来〕<br>1.走到车后面,蹲下来看看有没其它东西〔比如 猫啊,狗啊..等〕<br>2.从里面再走到车前,蹲下来,同1一样确认..〔别往外面走到车前,.有车什么危险〕<br>3.确认完毕后.准备往车门走之前,之前.先停一下,确认有没车开过来<br>4.确认没车开过来后,走到车门.再确认一遍有没车开来.然后打开车门.!<br>5.人进了车,门别一下子就关上了…门关到.大概只剩15厘米左右时,眼睛从门缝里向外看下.再确认！</p>
<p>以上步骤是,上车前确认,要记住,!</p>
<p>到了车里.〔补充:先把登陆证给副驾驶座的考官,他会跟你核对姓名啥〕<br>1.门手那边有个锁门的按一下,<br>2.调座位.绑安全带<br>3.调调中间的后视镜,做个样子就好.再看看两边的后视镜,一般不用调!<br>4.考官会问你准备好了没.好的话.钥匙转一下,发动起来.<br>5.然后别忘了,要踩住刹车,然后再挂到D档,<br>6.松手刹,.一定要确认清楚手刹是不是拉下去了.<br>〔有的人手刹没松到位,开动起来.就尴尬了..〕<br>7.中间后视镜确认,.打右方向灯,右边后视镜确认,在扭头后面确认…然后启动了..<br>〔关于确认后面会细说〕</p>
<p><span style="color: black;">然</span><span style="color: black;">后大家看看俺画的地图及数字标注</span></p>
<p>从起点开始.到1的那个位置.要停下来.<br>为啥?有止まれ线呗,,这个教官也会跟你说.<br>关键停下来要做啥?<br>左右的确认,.确认完毕,听教官指挥,.</p>
<p>教官会说,下个路口,.〔俺红圈标的2位置〕停下来.<br>那里也有个止まれ,停下来.左右确认,有没车.<br>确认完毕听教官指挥,OK.就可以开了.</p>
<p>注意事项,因为蓝色路线是往左边路线开的,所以车往左边靠.停到止まれ上<br>方向灯,确认啥的.别忘了..</p>
<p>接着转个弯就可以看到障碍物了.〔那个单一的转弯不需要打方向灯〕</p>
<p><span style="color: red;">过障碍物,30米前,要进行以下确认:</span><br><span style="color: red;">1.先中</span><span style="color: red;">间后视镜确认.后方有没车</span><br><span style="color: red;">2.打右方向灯.</span><br>3.右边后视镜确认,<br>4.扭头往右边看后面,因为有些死角是镜子看不到的,<br>以上这些步骤按顺序做完后.可以右转,过障碍物了,<br>过完障碍物,再1.中间后视镜确认,2.打左方向灯,3.左后视镜确认,.4.左回头确认,然后左转,回到左道上.</p>
<p>以上这4点我是按顺序排的,为啥?<br>因为再要改变方向,打出方向灯时要,要给后方车辆3秒左右的反应时间.<br>1先后视镜确认,是先看后方有没车.然后打出方向灯,再进行,3.4的确认.<br>3.4确认完毕后,时间也差不多3秒了,你就可以转弯了..变方向了..</p>
<p>〔 <span style="color: black;">这图不是教你怎么超车,,,是把黄色那车イメージ成障碍物〕</span></p>
<p>所有安全确认中,需要打方向键,都要以上的确认步骤,,<br>单一的路线,只转方向盘就只要,1.3的步骤,,,就不需要回头看了….</p>
<p>做这些步骤,一定要发自内心的去做,让它成为一种习惯,,这样对以后驾车很有帮助的,.!</p>
<p><span style="color: blue;">然后就是打方向灯,确认,进入那个弯道<br>在车开到我画的那个红圈4的时候.教官会跟你说哪个口进入.〔要做直角弯了〕<br>这时差不多要变更方向了.30米前.确认.方向灯,向右靠.<br>看那图,红圈4-5之间的红色路线.是不是斜着过来,靠直角弯方向靠了?<br>然后准备弯进去的时候,放慢速度,在做下,打方向盘前的确认.!</span></p>
<p>接着进入直角弯,<br>俺第一次就挂在这了..原因是后轮离那角太近了,..<br>以下图来表示:</p>
<p>画不好别见笑,<br>进入直角弯靠右边开,.靠左的话,后轮就会碰到那个角,<br>〔虽然说碰到那角,在轮胎还没落地前,可以倒车,不过能不碰还是别碰最好〕<br>靠中间开的,就会犯跟我一样的错误,后轮离角太近了.也算不合格!<br>所以靠右,,然后那车里小人的视线.跟那角 快要 平行的时候.大胆转过来呗.<br>剩下的就自己大脑里イメージ下!</p>
<p>直角出来的时候,也别忘了停一下左右确认打方向灯啥,,,\<br>出来后,.会看到红圈6有个,黑色的小障碍物..<br>没什么,别碰到就好..方向灯该打的打,,该补方向灯的要补!!</p>
<p>后面就是S弯道了,,能开始跑S弯道,说明你离拿驾照不远了..<br>因为很多不合格直角开完,就直接回来了..</p>
<p>S弯道,其实没什么好说的,,对车感好的人其实很简单,而且路也很宽!<br>有一个小窍门.就是,车开进去后,.当弯道的边沿差不多割到车的两点之间时,就可以转弯了…<br>沿着那边慢慢滑过去..然后摆正,往前开,,再切到中间点.才顺着边沿滑过去…<br>这个俺就不画图了..<br>脑海里,イメージ一下呗,中国考驾照时,也有教的!!</p>
<p><span style="color: black;">S弯出来后,.问题就不大了..唯一要注意的地方就是红圈11号那的止まれ线.<br></span>                线不是重点,重点是头上的信号灯,,很多人没注意到上面的信号灯..<br>信号灯红色的时候,你就老实停着吧,,当变黄的时候.左右确认下就可以开了…</p>
<p>然后红圈13.别忘了向右变更!<br>接着开到终点了.也是起始点.<br>差不多就这样了.!!</p>
<p><span style="color: black;">现在俺总结几个要点:<br></span><br><span style="color: black;">1.确认确认,再确认,..千万别怕麻烦,确认别都只做个样子!!<br></span>                    <span style="color: black;">俺第二次考就是因为,确认时,有车开过来.虽然俺按步骤确认了一遍,不过没当一回事,就发车了.<br>结果被教官踩了急刹车,..被说了几次,〔考场上也有其它的车,注意确认.避让.〕<br>2.再要转弯时,为啥要提前在30米前变更,向转弯的一边靠了??<br>因为怕有摩托车啥的,挤进来,.这样很危险,所以提前要把路缩小,让摩托车啥的开不进来.!<br></span></p>
<p><span style="color: black;"><br>30米变更大概就是这图的感觉,,<br>3.很多直线,要记的加速,速度提到30.40左右.快进入转弯时候在慢慢减速<br>〔很多人也挂在加速上面了〕</span></p>
<p>剩下也没什么好说的,该说的上面都说了..每个都是重点..</p>
<p>一般这两个路线会挑一个考,我第一次考蓝色的路线,第2次考红的,<br>第3次还是考红的,每次都不一样呗!</p>
<p>到时候考试,每个路口都会有个号码.〔这红圈是我乱标的,只是提醒注意的地方〕<br>教练到时候会这么发口令.例えば:８番右,14番左等<br>听不懂,,就没救了/…</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> 日本 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日本 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国驾照更换日本驾照（外免切替）]]></title>
      <url>http://www.ibmer.info/change-jp-license.html</url>
      <content type="html"><![CDATA[<h3 id="■说明"><a href="#■说明" class="headerlink" title="■说明"></a>■说明</h3><p>中国驾照更换日本驾照，日语叫做外免切替（外国免許からの切替）</p>
<h3 id="■材料准备"><a href="#■材料准备" class="headerlink" title="■材料准备"></a>■材料准备</h3><p>a。国内驾照<br>（要最新版的，好像是08年以后的驾照都可以，绿色地儿的，副本带条形码，驾照背面准驾车型里面带C5的。如果不是最新版的朋友最好把身份证，照片和驾照邮寄回国，让国内的朋友换一下。不排除老版驾照也可通过审核的可能，各地也许不一样，茨城肯定不行。我后来陪一个朋友去审核的时候，那个人明确说了，你这个驾照是真的，但是和我们给的样本不一样，要换成新版的才可以）<br>b。驾照翻译件<br>（可以通过大使馆或是JAF办理。JAF可以通过窗口办理。我是通过JAF办的。大使馆相关网页： JAF相关的主页：<a href="http://www.jaf.or.jp/inter/translation/index.htm）" target="_blank" rel="external">http://www.jaf.or.jp/inter/translation/index.htm）</a><br>c。驾驶员管理信息表和成绩证明<br>d。护照<br>e。一张张照片<br>f。登陆证</p>
<h3 id="■材料审核通过后上机考试（是人都能过）"><a href="#■材料审核通过后上机考试（是人都能过）" class="headerlink" title="■材料审核通过后上机考试（是人都能过）"></a>■材料审核通过后上机考试（是人都能过）</h3><p>十道题，有图，很简单，有中文</p>
<h3 id="■官方说明"><a href="#■官方说明" class="headerlink" title="■官方说明"></a>■<a href="http://www.keishicho.metro.tokyo.jp/menkyo/menkyo/kokugai/kokugai05.html" target="_blank" rel="external">官方说明</a></h3><p><a href="http://www.keishicho.metro.tokyo.jp/menkyo/menkyo/kokugai/kokugai05.html" target="_blank" rel="external">http://www.keishicho.metro.tokyo.jp/menkyo/menkyo/kokugai/kokugai05.html</a></p>
<p><div class="h2bg"></div></p>
<div>

<h3 id="■手数料"><a href="#■手数料" class="headerlink" title="■手数料"></a>■手数料</h3><p></p></div><br><br>申請料<p></p>
<ul>
<li>普通2,200円</li>
<li>原付1,500円</li>
<li>大型・中型4,400円</li>
<li>その他2,950円</li>
<li>交付手数料2,050円</li>
<li>併記手数料200円</li>
</ul>
<h3 id="■必要なもの"><a href="#■必要なもの" class="headerlink" title="■必要なもの"></a>■必要なもの</h3><ul>
<li>有効な外国等の運転免許証</li>
<li><p>上記免許証の日本語による翻訳文（当該国の駐日大使館又は日本自動車連盟（JAF）が作成したもの）（提出となります）<br>（注記）外国等の運転免許証に初回免許取得日が記載されていない場合は、初回免許取得日を証明する書類(ドライバーズレコード等）が必要となります。また、2種類（例～普通免許と普通二輪免許）以上の免許を取得している方はそれぞれの取得日を証明する書類が必要となる場合があります。また、国や取得状況によっては用意していただく書類がありますので、事前に各運転免許試験場にお問合せください。</p>
</li>
<li><p>日本の運転免許証(現在及び過去に受けたことのある方)</p>
</li>
<li>本籍（国籍）記載の住民票（個人番号（マイナンバー）が記載されていない住民票を提出となります。コピーは不可）（注記）個人番号（マイナンバー）が記載された住民票を持参された場合、サインペン等で個人番号（マイナンバー）記載部分をマスキングしていただきます。住民基本台帳法の適用を受けない方は旅券等(掲示のみ)に加え、免許申請上の住所に関し、居住地に滞在していることを証明する書類（寄宿先の世帯主、ホテルの支配人の証明書等（提出となります））（注記）旅券等とは、旅券、外務省の発行する身分証明書又は権限のある機関が発行する身分を証明する書類です。</li>
<li>免許を取得した国などに通算して3か月以上滞在したことが確認できるもの（パスポート等（古いパスポートがあれば全て））</li>
<li>写真(縦3センチメートル、横2.4センチメートル)（注記）写真は、無帽、正面、上三分身、無背景で申請前6か月以内に撮影したもの。<br>&nbsp;</li>
</ul>
<h3 id="■路考说明"><a href="#■路考说明" class="headerlink" title="■路考说明"></a>■路考说明</h3><p>a。上车<br>上车之前要围着车四周走一圈，看看车底下有没有异物，比如猫狗之类的。然后来到门前，前后看看，然后开门坐下，关门的时候不要一下子关上，留一个小缝儿，再确认一下，然后关上门。<br>b。上车后发动前<br>上车后要和考官打招呼，有礼貌一些。坐下之后先调坐位，然后系上安全带，调室内后视镜，左右后视镜假装看看，大多数情况下不用调，踩踩刹车感觉一下软硬。<br>c。发动后出发<br>调节好了之后就可以发动了。一定要踩住刹车。挂D档，松手刹，打右转向，确认有后方车辆，然后出发。出发之后要进主路，一定要停死，右后视镜确认，扭头确认，之后进入主路。<br>d。确认<br>这个是重中之重啊。在并道，转弯中都要多次确认。注意，确认一定要三部（下面说的确认都要包括这三部），车内后视镜，车外后视镜（向左转就是左外后视镜，向右转就是右外后视镜），扭头确认。在拐弯或是并道的时候需要打转向灯，这个也很重要，考官很看重这个。在拐之前30左右的地方，先确认，再打转向，再确认，然后拐弯，一定要这样！在一时停止的地方进主路的时候也要确认，这个是确认主路上面的车，确认要把身体前倾，右-左-右的确认。<br>e。左转弯<br>左转弯和右转弯很多，这个也很重要。在路口30左右的地方，确认，打转向灯，再确认，然后减速把车向路的左边靠一下，这个很重要！一定要有个向路边靠的动作。在实际转弯之前再确认一遍。转弯要慢进快出。贴着路边转，不能左转之前习惯性的向右边打一下轮，切记。<br>f。右转弯<br>右转弯之前要换道，记住，如果不是右转弯或是过障碍物的话，不要在中央车道行驶。通常右转弯的地方在交叉口的中央有个十字，不能压倒十字，要贴着十字走，转之前再次确认后面的车辆和转入目标车道的车辆。<br>g。L路<br>这个对于车感好的人来说可能不是什么问题，这里有个小窍门，三点一线的原则。下面的画不知道能看清不。画得不好见笑了啊。。就是当车的最前端和前面的马路牙子重合的时候，打死方向盘，转过来之后回轮即可。记住，尽量把车向远离弯道的一侧靠（如下图所示），这样可以防止后轮掉。用这个方法过L路，走一百次过一百次。</p>
]]></content>
      
        <categories>
            
            <category> 日本 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日本 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Wordpress主题模板优先级顺序]]></title>
      <url>http://www.ibmer.info/wordpress-template-hierarchy.html</url>
      <content type="html"><![CDATA[<p>简洁来说：打开WP站点后，WP会根据显示页面的类型，决定选择哪个模板文件来呈现的层次顺序。由此我们就可以较为方便的创建自定义的模板，包括首页，页面，分类页，标签页等等。</p>
<p>具体举例来说：</p>
<p><strong>一、首页</strong>（home.php/index.php）</p>
<p>如果主题模板存在home.php，则首页是以home.php来呈现的；当home.php不存在时，才选择index.php。</p>
<p><strong>二、页面</strong>（自定义页面/page-slug.php/page-id.php/page.php/index.php）</p>
<p>假如有这样一个页面，它的缩略名为 links，ID为6。想在这个页面中显示链接，那我们该怎么操作呢？</p>
<p>1.自定义页面模板是第一选择</p>
<p>就是创建一个新的页面模板并加上头部标识，就可以在后台页面编辑右侧边栏选择到这个新的自定义的页面模板，这种方式大家用得最多，用来创建留言板、链接页等都是比较方便的。</p>
<p>2.其实我们还可以这样操作，直接创建一个模板文件命名为：page-links.php或者page-6.php</p>
<p>WP会自动选择此模板来呈现这个页面，所有的PHP函数代码操作直接在这个模板文件里进行即可，无需在到页面编辑里选择。也许对于页面来说，1、2两种方法都行，没2也无所谓，那我们继续看……</p>
<p><strong>三、分类</strong>（category-slug.php/category-id.php/category.php/archive.php/index.php）</p>
<p>假如有这样一个页面，它的缩略名为 photos，ID为8。想让这个分类的列表页区别于其它分类列表页显示，该怎么操作呢？（分类可是没有了什么自定义模板让你在后台选择了～）</p>
<p>1.PHP判断</p>
<p>创建category.php模板，借助is_category()函数判断当分类ID为8时，调用某个特定PHP模板文件。</p>
<p>2.其实？创建模板文件直接命名为：category-photos.php或者category-8.php</p>
<p>当打开这个分类列表页时，WP自动会选择此模板来呈现啦！</p>
<p><strong>四、标签</strong>（tag-slug.php/tag-id.php/tag.php/archive.php/index.php）</p>
<p>同上</p>
<p><strong>五、作者</strong>（author-nicename.php/author-id.php/author.php/archive.php/index.php）</p>
<p>假如是多用户站点，某个用户昵称为 linmumu，ID为3。想让这个用户的文章列表页区别于其他用户，又该如何呢？</p>
<p>创建author.php里加PHP判断当然可以，既然各位童鞋看到这了，当然明白我推荐各位使用哪个法子啦～</p>
<p>创建模板文件命名为：author-linmumu.php/author-3.php</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce.com 認定 Platform デベロッパー]]></title>
      <url>http://www.ibmer.info/salesforce-exam-platform-developer.html</url>
      <content type="html"><![CDATA[<div>Salesforce.com 認定 Platform デベロッパー</div><br><div>Study Guide</div><br><div>Spring’ 16</div><br><div></div><br><div></div><br><div><br><br># 目次<br><br><div>Section 1. Study Guide の目的 ………………………………………………………………………………….1</div><br><div>Section 2.Salesforce.com 認定 Platform デベロッパー資格について…………………………………..1</div><br><div>Section 3.対象者について:Salesforce.com 認定 Platform デベロッパー ………………………………1</div><br><div>Section 4.試験について……………………………………………………………………………………………..2</div><br><div>Section 5.推奨トレーニングと参考資料…………………………………………………………………………..2</div><br><div>Section 6.試験範囲 ………………………………………………………………………………………………….3</div><br><div>Section 7.サンプル問題……………………………………………………………………………………………..4</div><br><div>Section 8.サンプル問題の回答…………………………………………………………………………………….6</div><br><div>Section 9.認定資格の更新 …………………………………………………………………………………………6</div><br></div><br><div></div><br><div></div><br><div><br><br># <strong>Section 4.試験について</strong><br><br><div>Salesforce.com 認定 Platform デベロッパー 試験の詳細は次のとおりです。</div><br><div><strong><span style="color: #ff0000;"> 内容: 多肢選択 / 複数選択方式の 60 問</span></strong></div><br><div><strong> 試験の所要時間:105 分</strong></div><br><div><strong> 合格点:68%</strong></div><br><div><strong> 受験料:20,000 円（税抜）</strong></div><br><div> 受験方法:試験会場で実施される監督付き試験</div><br><div> 参考資料: 試験中は、印刷物やオンライン資料は参照できません</div><br><div> 前提条件はありません。トレーニングへのご参加を強くお勧めします</div><br><div> 結果:解答提出後すぐに画面上に表示、およびメールで提供されます</div><br></div><br><div></div><br><div></div><br><div></div><br><div><br><br># <strong>Section 5.推奨トレーニングと参考資料</strong><br><br><div>この試験の準備として、Salesforce.com のトレーニング/認定制度では、宣言的および Apex コードと</div><br><div>Visualforce ページのプログラミング的機能を使用して Force.com プラットフォームのカスタムアプリ</div><br><div>ケーションを構築する実践経験、トレーニングコースの受講、この Study Guide の試験範囲セクションに</div><br><div>列記している内容の自己学習を組み合わせることをお勧めします。</div><br><div>Salesforce.com のトレーニング/認定制度では、以下の集合研修、オンラインコース、その他の参考資</div><br><div>料を利用して、学習することを推奨します。</div><br><div> 集合研修コース:Force.com 開発者［前編］- Apex によるビジネスロジックの拡張</div><br><div>Force.com 開発者［後編］- Visualforce によるユーザインターフェースの拡張</div><br><div> オンラインコース:Apex</div><br><div> オンラインコース:Visualforce コントローラ</div><br><div> オンラインコース:Lightning コンポーネントの作成</div><br></div><br><div><br><div>ワークブック:Force.com ワークブック</div><br><div> ワークブック:Apex ワークブック</div><br><div> ワークブック:Visualforce ワークブック</div><br><div> ドキュメント: 開発ライフサイクルガイド</div><br><div> ドキュメント:Force.com Apex コード開発者ガイド</div><br><div> ドキュメント:Visualforce 開発者ガイド</div><br><div> ドキュメント:Force.com 移行ツールガイド</div><br><div> developer.salesforce.com にサインアップして Developer Edition アカウントを作成する</div><br><div> Developer Trail - Beginner の Trailhead モジュール</div><br></div><br><div></div><br><div><br><br># Section 6.試験範囲<br><br><div>Salesforce.com 認定 Platform デベロッパー試験では、以下に示す目的に関する受験者の知識とスキ</div><br><div>ルを測定します。受験者は Force.com プラットフォームでのカスタムアプリケーション開発の実践経験</div><br><div>があり、以下の各機能を実際に応用した経験が必要です。</div><br></div><br><div></div><br><div><br><br># Section 7.サンプル問題<br><br><div>以下の問題は、Salesforce.com 認定 Platform デベロッパー試験のサンプル問題です。これらの問題</div><br><div>はあくまで出題形式に慣れていただくためのものであり、認定試験に合格するかどうかを判断するため</div><br><div>の問題ではありません。実際の問題の難易度は、以下の問題とは異なる場合があります。</div><br><div></div><br><div>1. Partial Copy Sandbox または Full Sandbox を必要とするユースケースはどれですか？</div><br><div>答えを 3 つ選んでください。</div><br><div>A. 拡張性テスト</div><br><div>B. 開発テスト</div><br><div>C. 品質保証テスト</div><br><div>D. バッチデータテスト</div><br><div>E. 連携テスト</div><br></div><br><div></div><br><div></div><br><div><br><div>2. Lightning コンポーネントフレームワークで、何にクライアント側コントローラロジックが含まれます</div><br><div>か？</div><br><div>答えを 1 つ選んでください。</div><br><div>A. Apex</div><br><div>B. Visualforce</div><br><div>C. HTML</div><br><div>D. JavaScript</div><br></div><br><div></div><br><div></div><br><div><br><div>3. 開発者は Apex クラスのメソッドを作成して、エラーを適切に処理する必要があります。何を使用す</div><br><div>ればよいですか？</div><br><div>答えを 3 つ選んでください。</div><br><div>A. ApexPages.addErrorMessage()</div><br><div>B. カスタム例外</div><br><div>C. .addError()</div><br><div>D. Database.handleException()</div><br><div>E. try/catch ブロック</div><br></div><br><div></div><br><div></div><br><div><br><div>4. SOQL クエリの where 句の中で有効なものはどれですか？</div><br><div>答えを 2 つ選んでください。</div><br><div>A. 位置情報項目</div><br><div>B. 暗号化項目</div><br><div>C. 集計関数</div><br><div>D. 別名表記</div><br></div><br><div></div><br><div></div><br><div><br><div>5. Salesforce プラットフォームに MVC (モデル-ビュー-コントローラ) アーキテクチャを実装する方法を</div><br><div>正しく説明しているのはどれですか？</div><br><div>答えを 1 つ選んでください。</div><br><div>A. モデル:標準オブジェクトとカスタムオブジェクト、ビュー:Visualforce ページ、コントローラ: S コント</div><br><div>ロール</div><br><div>B. モデル:スキーマビルダ、ビュー:リストビュー、コントローラ:設定コンソール</div><br><div>C. モデル:標準オブジェクトとカスタムオブジェクト、ビュー:Visualforce ページ、コントローラ:Apex</div><br><div>コード</div><br><div>D. モデル:Apex コード、ビュー:リストビュー、コントローラ:設定コンソール</div><br></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div></div><br><div><br><br><em> </em> *<br><br><div>Section 8.サンプル問題の回答</div><br><div>1. A、D、E</div><br><div><a href="https://developer.salesforce.com/trailhead/ja/alm_deployment/alm_sandbox" target="_blank" rel="external">https://developer.salesforce.com/trailhead/ja/alm_deployment/alm_sandbox</a></div><br><div></div><br><div>2. D</div><br><div><a href="https://developer.salesforce.com/docs/atlas.ja-jp.lightning.meta/lightning/" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.ja-jp.lightning.meta/lightning/</a></div><br><div></div><br><div>3. B、C、E</div><br><div><br><div>例外処理</div>

<ul>
<li><span lang="ja">try</span><span lang="ja">、</span><span lang="en-US">catch</span><span lang="en-US">、</span><span lang="en-US">finally </span><span lang="en-US">ステートメント</span></li>
<li>組み込み例外および共通メソッド</li>
<li>さまざまな例外種別のキャッチ</li>
<li>カスタム例外の作成</li>
<li>.addError()<br><span style="font-family: Verdana; font-size: small;"><a href="https://developer.salesforce.com/page/An_Introduction_to_Exception_Handling" target="_blank" rel="external">https://developer.salesforce.com/page/An_Introduction_to_Exception_Handling</a></span></li>
</ul>
<p></p></div><p></p>
<div>4. A、D</div><br><div><a href="https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_sosl_where.htm" target="_blank" rel="external">https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_sosl_where.htm</a></div><br><div></div><br><div>5. C</div><br></div><br><div></div><br><div></div>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SalesforceExam </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大牛们是如何开发 WordPress 主题的?]]></title>
      <url>http://www.ibmer.info/wordpress-develop.html</url>
      <content type="html"><![CDATA[<p>当初走上web开发的路之后最想干的事情就是写个自己的WP主题。。。所以网上搜罗了很多资料，但是说实在的鲜有那种一下把人点通的教程出现。不是说没有教程就写不了，但是如果能有一个说得清楚的讲解，比起自己摸索实在是省事太多。</p>
<p>当初一开始看的是我爱水煮鱼博客上发布的一个教程 -&gt; <a href="//link.zhihu.com/?target=http%3A//blog.wpjam.com/2007/06/04/so-you-want-to-create-wordpress-themes-huh/">WordPress 主题教程：从零开始制作 WordPress 主题</a>，我下了PDF，很容易找。这个教程很老了，但是对于什么都不清楚的人而言至少能给我们以全局的理解，到底开发WP主题是什么意思，是个什么样的过程。这里还有一个国外的教程可供擦考 -&gt; <a href="//link.zhihu.com/?target=http%3A//themeshaper.com/2012/10/22/the-themeshaper-wordpress-theme-tutorial-2nd-edition/">The ThemeShaper WordPress Theme Tutorial: 2nd Edition</a>。</p>
<p>看完这个之后心里就算是有个框架和大概了，知道其实就是在主题目录里建一些PHP文件和HTML、CSS以及可能有的JS文件。PHP文件一般而言都是一个文件对应一个页面，比如首页，存档页，日志页等。然后最关键的来了，那就是这些PHP文件内允许我们调用WP提供的函数。函数的文档就如<a href="//www.zhihu.com/people/c73d094352f2fc05d1ec59e84c968da9" title="@吴钊">@吴钊</a>说的在这里 -&gt; <a href="//link.zhihu.com/?target=http%3A//codex.wordpress.org/Template_Hierarchy">Template Hierarchy « WordPress Codex</a>。里面有五花八门的函数可供使用，比如一篇博客其内容的输出，谋篇博客它的标签的输出等等。其实也就是数据来源。</p>
<p>我们通过PHP来获取数据，然后整合进HTML，配以一定的CSS和JS修饰，一个主题其实就完成了。但是这样的主题其实并不优美，比如一个文件竟然就是一个页面。通常来讲，写WP主题我们并不追求代码的质量，能用就行（这一定是我的误解）。</p>
<p>似乎一切都很简单？其实并不是这样的，因为每个页面需要调用些什么函数以及函数怎么搭配使用，并不是那么容易理清楚的，毕竟很多功能对应的函数又不唯一，我们无法在短时间内合理地做出选择。</p>
<p>那么这个时候，我个人更倾向于主题开发框架，也可以叫作模板。我也更推荐大家直接用它们来开发。那么先来看看模板啊框架啊都是些什么东西吧 -&gt; <a href="//link.zhihu.com/?target=http%3A//zmiao.me/%25E6%259C%2580%25E4%25BD%25B3wordpress%25E4%25B8%25BB%25E9%25A2%2598%25E6%25A1%2586%25E6%259E%25B6.html">最佳WordPress主题框架</a>。</p>
<p>其实这里面还分很多种，我大致把他们分成框架、工具套件以及沙盒。</p>
<p><strong>1.框架</strong><br>比如这个，<a href="//link.zhihu.com/?target=http%3A//themehybrid.com/themes/hybrid">Hybrid WordPress Theme</a>，它就是一个全息的开发框架，它的理念在于其自身就是一个主题，而我们所要建的主题是它提供主题的子主题，我们通过PHP的对象继承等特性来从父主题的功能上继承很多基础的东西，然后再在我们自己的文件上做修改以自定义。这种方法显然比较「高级」，也是目前比较流行的一种。</p>
<p><strong>2.工具套件
</strong>然后是工具类框架，它们不提供必须的继承，而是给我们封装自己的一套API，把很多功能更直接地暴露给我们使用。这一类我曾经搜到过，不过暂时没有很典型的代表。</p>
<p><strong>3.二次开发，沙盒
</strong>最后是沙盒，其实这是我自己起的名字，弄玄乎了。通俗说就是在原有的空白的精简的主题的基础上迭代开发自己的特性，也就是就是修改一个空白主题。我就是用的这种方式，而选择的空白主题也是非常有名的sandbox -&gt;<a href="//link.zhihu.com/?target=http%3A//www.plaintxt.org/wordpress.html%23sandbox"><span class="invisible">http://www.</span><span class="visible">plaintxt.org/wordpress.</span><span class="invisible">html#sandbox</span></a>, <a href="//link.zhihu.com/?target=http%3A//wordpress.org/themes/sandbox">WordPress › Sandbox « Free WordPress Themes</a>。该有的页面它基本都有，该要的数据基本都会有必要的函数负责输出，我们要做的，只是去调整负责每个页面的那个PHP文件，数据多了，那就去掉，少了，去查文档加进来。而且因为有了很多范例页面，我们自定义一个页面也是易如反掌。就像我自己的博客的首页，我就是用原来的一个页面改的。</p>
<hr>
<p>再仔细看问题，我发现楼主似乎就框架类没有自己实践过，然后二次开发所基于的简单主题也体验过一些。所以我个人认为你或许可以试试看类似Hybrid的那个框架，它有免费部分以及一定的免费教程（类似的开发框架应该还有不少）。我自己理解的题主的本意就是想了解更多元更全面的开发主体的形式，进而找到最理想的哪一种。那么多尝试总是好的。</p>
<p>但是WP近来功能狂增，代码量和API也增加不少，虽然codex上梳理得比较清楚，但是如果想完全搞清楚所有的细节，我觉得就学习性价比来说是很差的。而且WP的代码众所周知的不是优秀PHP程序的典范。如果是为了学习，我更建议看其他的项目，类似<a href="//link.zhihu.com/?target=http%3A//laravel.com/">Welcome! - Laravel PHP Framework</a>。而如果是为了开发WP主题来做推广和运营等，那么其实不用太在意过分的细节，看的几个适合迭代开发的空白模板源码即可。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[salesforce学习导航]]></title>
      <url>http://www.ibmer.info/salesforce-roadmap.html</url>
      <content type="html"><![CDATA[<p>Salesforce免费在线学习</p>
<p><a href="https://developer.salesforce.com/trailhead/ja" target="_blank" rel="external">https://developer.salesforce.com/trailhead/ja</a></p>
<p>&nbsp;</p>
<p><span lang="ja">Developer Trail - Beginner の</span><span lang="en-US"> Trailhead モジュール</span></p>
<p><a href="https://developer.salesforce.com/trailhead/trail/force_com_dev_beginner" target="_blank" rel="external">https://developer.salesforce.com/trailhead/trail/force_com_dev_beginner</a></p>
<p>&nbsp;</p>
<p>Apex Workbook / Apex ワークブック</p>
<p><a href="https://resources.docs.salesforce.com/200/latest/ja-jp/sfdc/pdf/apex_workbook.pdf" target="_blank" rel="external">https://resources.docs.salesforce.com/200/latest/ja-jp/sfdc/pdf/apex_workbook.pdf</a></p>
<p>&nbsp;</p>
<p><span lang="en-US">Developer考试指导/Developer</span><span lang="ja">試験</span></p>
<p><a href="http://www.sfdcstatic.com/jp/assets/pdf/misc/studyguide_cert_pla_dev1.pdf" target="_blank" rel="external">http://www.sfdcstatic.com/jp/assets/pdf/misc/studyguide_cert_pla_dev1.pdf</a></p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Salesforce 認定]]></title>
      <url>http://www.ibmer.info/Salesforce-exam.html</url>
      <content type="html"><![CDATA[<ul>
<li><a href="http://www.salesforce.com/jp/services-training/education-services/cert/credentials.jsp" target="_blank" rel="external">認定ガイド</a></li>
<li><a href="https://developer.salesforce.com/docs?service=All+Services&amp;select_type=&amp;version=32.0&amp;lang=ja-jp&amp;show_en=no" target="_blank" rel="external">開発者ドキュメントページ</a></li>
<li><a href="http://blog.csdn.net/neusoft06/article/category/5861687" target="_blank" rel="external">我的CSDN</a></li>
<li><a href="http://qiita.com/dearboy15/items/2d2c6f5ef7eabd6397fb" target="_blank" rel="external">認定Platformアプリケーションビルダー 移行試験の参考資料まとめ</a></li>
<li><p><a href="http://wenku.baidu.com/link?url=KLLISghJgHEL7kIsm3u7q9E9IwPnsUSZUmSvNGoulwS9KUXbgQ-GuhLfsDhwaAg8EPkaPxja7smLmIWhGJzQ0JWcGEHadLwjkXUZRkRj-pO" target="_blank" rel="external">百度题库</a></p>
<p>&nbsp;</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[salesforce中js调用apex方法]]></title>
      <url>http://www.ibmer.info/sf-js-remoting.html</url>
      <content type="html"><![CDATA[<p><span style="font-size:16px;"><a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_and_ajax.htm" target="_blank" rel="external">Apex in AJAX, 官方参考资料</a></span></p>
<pre><code>■自定义CustomButton中，调用cls，可以通过js调用webservice解决问题。

■JavaScript Remoting

レコードの詳細からカスタムボタンでapexを呼び出す

webServiceを使用して、apexクラスを作成しておく。

&amp;nbsp;

■APEX代码

global without sharing class IBMERService {

&amp;nbsp; &amp;nbsp; webService static Boolean checkExistContractDetails(String id) {

&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;Boolean flag = true;

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;

&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;return flag;

&amp;nbsp; &amp;nbsp; }

}

■JS代码

{!REQUIRESCRIPT(&amp;#39;/soap/ajax/31.0/connection.js&amp;#39;)}&amp;nbsp;

{!REQUIRESCRIPT(&amp;#39;/soap/ajax/31.0/apex.js&amp;#39;)}&amp;nbsp;

var ret = sforce.apex.execute(&amp;#39;IBMERService&amp;#39;,&amp;#39;checkExistContractDetails&amp;#39;,{id:&amp;quot;{!Contact.Id}&amp;quot;});&amp;nbsp;

if(ret==&amp;#39;true&amp;#39;)&amp;nbsp;

location.href = &amp;quot;/apex/ContractSelect?id={!Contact.Id}&amp;amp;type=operation&amp;quot;;&amp;nbsp;

else&amp;nbsp;

alert(&amp;#39;存在しません&amp;#39;);
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wordpress路径]]></title>
      <url>http://www.ibmer.info/wordpress-path.html</url>
      <content type="html"><![CDATA[<p>###<br>    站点路径相关函数</p>
<p>####<br>    <u>HOME_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/home_url" title="Codex" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回站点路径，相当于后台**设置-&amp;gt;常规**中的&amp;quot;**站点地址（URL）**&amp;quot;。
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$url</code>&nbsp;<code>= home_url();</code><br><br>                    <code>echo</code>&nbsp;<code>$url``;</code><br><br>                    &nbsp;<br><br>                    <code>//输出: http://www.ibmer.info</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$url</code>&nbsp;<code>= home_url(``&amp;#39;/images/&amp;#39;``);</code><br><br>                    <code>echo</code>&nbsp;<code>$url``;</code><br><br>                    &nbsp;<br><br>                    <code>输出：http:``//www.ibmer.info/images/</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>SITE_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/site_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>如果WordPress安装在域名根目录下，则该函数与home_url()相同。

如果WordPress安装在子目录下，例如http://www.ibmer.info/wordpress，则site_url()返回WordPress实际安装地址，相当于**后台-&amp;gt;设置-&amp;gt;常规**中的&amp;ldquo;**WordPress 地址（URL）**&amp;rdquo;。
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>                    5<br><br>            </td><br>            <td><br><br>                    <code>$url = site_url();</code><br><br>                    <code>echo $url;</code><br><br>                    &nbsp;<br><br>                    <code>//假设WordPress安装在http://www.ibmer.info/wordpress下</code><br><br>                    <code>//输出：http://www.ibmer.info/wordpress</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>ADMIN_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/admin_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回后台地址，传递参数后也可返回后台menu的地址
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$url</code>&nbsp;<code>= admin_url();</code><br><br>                    <code>echo</code>&nbsp;<code>$url``;</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-admin/</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>CONTENT_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/content_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回实际的wp-content目录，如果是默认安装，且装在根目录下，则如下所示
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$url = content_url();</code><br><br>                    <code>echo $url;</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>如果在wp-config.php中改变了wp-content目录的位置，则该函数会返回正确地址，例如wp-config.php中如下定义
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>            </td><br>            <td><br><br>                    <code>define(``&amp;#39;WP_CONTENT_DIR&amp;#39;``,&amp;nbsp;``&amp;#39;/home/user/public_html/cdn&amp;#39;``);</code><br><br>                    <code>define(``&amp;#39;WP_CONTENT_URL&amp;#39;``,&amp;nbsp;``&amp;#39;http://sola-cdn.me&amp;#39;``);</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>则content_url()的返回值为
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>http://sola-cdn.me</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>INCLUDES_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/includes_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回当前WordPress站点存放核心文件的目录wp-includes的地址，可以带一个$path作为参数。
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$url</code>&nbsp;<code>= includes_url(&amp;nbsp;``&amp;#39;/js/&amp;#39;``);</code><br><br>                    <code>echo</code>&nbsp;<code>$url``;</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-includes/js/</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>WP_UPLOAD_DIR()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/wp_upload_dir" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回WordPress上传目录的地址，是一个数组，包含一系列与上传地址相关的信息。
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>&amp;lt;?php&amp;nbsp;``$upload_dir</code>&nbsp;<code>= wp_upload_dir(); ?&amp;gt;</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>提供如下信息给你
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>                    5<br><br>                    6<br><br>            </td><br>            <td><br><br>                    <code>*&amp;nbsp;``&amp;#39;path&amp;#39;</code>&nbsp;<code>- 上传目录的服务器绝对路径，通常以反斜杠（/）开头</code><br><br>                    <code>*&amp;nbsp;``&amp;#39;url&amp;#39;</code>&nbsp;<code>- 上传目录的完整URL</code><br><br>                    <code>*&amp;nbsp;``&amp;#39;subdir&amp;#39;</code>&nbsp;<code>- 子目录名称，通常是以年/月形式组织的目录地址，例如/2012/07</code><br><br>                    <code>*&amp;nbsp;``&amp;#39;basedir&amp;#39;</code>&nbsp;<code>- 上传目录的服务器绝对路径，不包含子目录</code><br><br>                    <code>*&amp;nbsp;``&amp;#39;baseurl&amp;#39;</code>&nbsp;<code>- 上传目录的完整URL，不包含子目录</code><br><br>                    <code>*&amp;nbsp;``&amp;#39;error&amp;#39;</code>&nbsp;<code>- 报错信息.</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>            </td><br>            <td><br><br>                    <code>$upload_dir</code>&nbsp;<code>= wp_upload_dir();</code><br><br>                    <code>echo</code>&nbsp;<code>$upload_dir``[``&amp;#39;baseurl&amp;#39;``];</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/uploads</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###<br>    主题路径相关函数</p>
<p>####<br>    <u>GET_THEME_ROOT_URI()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_theme_root_uri" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取存放主题的目录URI
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo get_theme_root_uri();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/themes</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_THEME_ROOT()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_theme_root" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取存放主题的目录的服务器绝对路径
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo get_theme_root();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：&amp;lt;tt&amp;gt;/home/user/public_html/wp-content/themes&amp;lt;/tt&amp;gt;</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_THEME_ROOTS()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_theme_roots" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取主题目录的目录名称，如果你的主题目录是/wp-content/themes，则
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>get_theme_roots();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：/themes</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_STYLESHEET_DIRECTORY()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_stylesheet_directory" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取当前启用的主题目录的服务器绝对路径，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>/home/user/public_html/wp-content/themes/twentyeleven</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>可以用来include文件，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>&amp;lt;?php&amp;nbsp;``include``( get_stylesheet_directory() .&amp;nbsp;``&amp;#39;/includes/myfile.php&amp;#39;``); ?&amp;gt;</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_STYLESHEET_DIRECTORY_URI()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_stylesheet_directory_uri" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取当前启用的主题目录的URI，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>get_stylesheet_directory_uri();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/themes/twentyeleven</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>可以使用在需要主题目录URI的场合，例如图片
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>&amp;lt;img src=``&amp;quot;&amp;lt;?php echo get_stylesheet_directory_uri() ?&amp;gt;/images/aternus.png&amp;quot;</code>&nbsp;<code>alt=``&amp;quot;&amp;quot;</code>&nbsp;<code>title=``&amp;quot;&amp;quot;</code>&nbsp;<code>width=``&amp;quot;&amp;quot;</code>&nbsp;<code>height=``&amp;quot;&amp;quot;</code>&nbsp;<code>/&amp;gt;</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_TEMPLATE_DIRECTORY_URI()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_template_directory_uri" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>如果当前启用的主题是一个child theme，该函数返回parent theme的主题目录URI，用法与get_stylesheet_directory_uri()类似。
</code></pre><p>####<br>    <u>GET_TEMPLATE_DIRECTORY()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_template_directory" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>如果当前启用的主题是一个child theme，该函数返回parent theme的主题目录的服务器绝对路径，用法与get_stylesheet_directory()类似。
</code></pre><p>####<br>    <u>GET_TEMPLATE()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_template" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取当前启用主题的主题目录名称，例如现在启用的主题为twentyeleven，则
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>get_stylesheet();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：twentyeleven</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>GET_STYLESHEET()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/get_stylesheet" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取当前启用主题的主题目录名称，与get_template()的区别是，如果用了child theme，则返回child theme的目录名称。
</code></pre><p>###<br>    插件路径相关函数</p>
<p>####<br>    <u>PLUGINS_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/plugins_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>获取当前插件的目录的URI，例如一个插件位于/wp-content/plugins/myplugin下，该目录下放有插件的主文件名为myplugin.php，在myplugin.php中执行下面的代码，结果如下
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugins_url();</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/plugins</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugins_url(``&amp;#39;&amp;#39;``,``__FILE__``);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/plugins/myplugin</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugins_url(``&amp;#39;js/myscript.js&amp;#39;``,``__FILE__``);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/plugins/myplugin/js/myscript.js</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>PLUGIN_DIR_URL()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/plugin_dir_url" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回当前插件的目录URI，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugin_dir_url(&amp;nbsp;``__FILE__</code>&nbsp;<code>);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：http://www.ibmer.info/wp-content/plugins/myplugin/</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>注意结尾有反斜杠。
</code></pre><p>####<br>    <u>PLUGIN_DIR_PATH()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/plugin_dir_path" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回当前插件目录的服务器绝对路径，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugin_dir_path(&amp;nbsp;``__FILE__</code>&nbsp;<code>);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：/home/user/public_html/wp-content/plugins/myplugin/</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>可以用来引用文件，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>                    4<br><br>                    5<br><br>            </td><br>            <td><br><br>                    <code>&amp;lt;?php</code><br><br>                    <code>define(&amp;nbsp;``&amp;#39;MYPLUGINNAME_PATH&amp;#39;``, plugin_dir_path(``__FILE__``) );</code><br><br>                    <code>require</code>&nbsp;<code>MYPLUGINNAME_PATH .&amp;nbsp;``&amp;#39;includes/class-metabox.php&amp;#39;``;</code><br><br>                    <code>require</code>&nbsp;<code>MYPLUGINNAME_PATH .&amp;nbsp;``&amp;#39;includes/class-widget.php&amp;#39;``;</code><br><br>                    <code>?&amp;gt;</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>PLUGIN_BASENAME()&nbsp;<a href="http://codex.wordpress.org/Function_Reference/plugin_basename" target="_blank" rel="external">&gt;&gt;</a></u></p>
<pre><code>返回调用该函数的插件文件名称（包含插件路径）

例如在插件myplugin下的myplugin.php文件中调用该函数，结果如下
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugin_basename(``__FILE__``);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：myplugin/myplugin.php</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>如果在myplugin/include/test.php文件中调用（test.php通过include引用到myplugin.php中），结果如下
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>                    2<br><br>                    3<br><br>            </td><br>            <td><br><br>                    <code>echo</code>&nbsp;<code>plugin_basename(``__FILE__``);</code><br><br>                    &nbsp;<br><br>                    <code>//输出：myplugin/include/test.php</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###<br>    路径相关常量</p>
<pre><code>WordPress中还有一组用define定义的常量代表路径。
</code></pre><p>####<br>    <u>WP_CONTENT_DIR</u></p>
<pre><code>wp-content目录的服务器绝对路径，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>/home/user/public_html/wp-content</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>WP_CONTENT_URL</u></p>
<pre><code>wp-content目录的URI地址，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>http://www.ibmer.info/wp-content</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>WP_PLUGIN_DIR</u></p>
<pre><code>插件目录的服务器绝对路径，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>/home/user/public_html/wp-content/plugins</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>WP_PLUGIN_URL</u></p>
<pre><code>插件目录的URI地址，例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>http://www.ibmer.info/wp-content/plugins</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>TEMPLATEPATH</u></p>
<pre><code>当前启用主题目录的服务器绝对路径，相当于get_template_directory()例如
</code></pre><table border="0" cellpadding="0" cellspacing="0"><br>    <tbody><br>        <tr><br>            <td><br><br>                    1<br><br>            </td><br>            <td><br><br>                    <code>/home/user/public_html/wp-content/themes/twentyeleven</code><br><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>####<br>    <u>STYLESHEETPATH</u></p>
<pre><code>当前启用主题目录的服务器绝对路径，相当于get_stylesheet_directory()，与TEMPLATEPATH的区别在于如果使用child theme，该常量指向child theme目录。
</code></pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows10关闭自动更新]]></title>
      <url>http://www.ibmer.info/close-win10-update.html</url>
      <content type="html"><![CDATA[<p>Windows10, win10关闭自动更新</p>
<pre><code>Windows10&amp;nbsp;を完全に拒否する方法

1\. &amp;nbsp;プログラムの中のコマンドプロンプトを右クリックして**管理者と&lt;wbr /&gt;して実行**する。

2\. コマンドプロンプトに下記を貼り付けて実行する。※&lt;wbr /&gt;下記はアップグレードを拒否するためのレジストリキーの登録です&lt;wbr /&gt;。

reg add HKEY_LOCAL_MACHINE\SOFTWARE\&lt;wbr /&gt;Policies\Microsoft\Windows\Gwx /v &amp;quot;DisableGwx&amp;quot; /t REG_DWORD /d 00000001 /f

※コマンドプロンプトを管理者として実行しないと「&lt;wbr /&gt;この操作は禁止されております」&lt;wbr /&gt;と表示されてコマンドが失敗します。

3\. 再起動するとタスクトレイからも&amp;nbsp;Windows10&amp;nbsp;の告知が消滅します。
</code></pre>]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sf-disabled-lookup]]></title>
      <url>http://www.ibmer.info/sf-disabled-lookup.html</url>
      <content type="html"><![CDATA[<p>###<br>    Disable Lookup field on Visua lforce Page using Java Script</p>
<pre><code>如何隐藏salesforce的放大镜按钮

salesforce visualforce&amp;nbsp;虫眼鏡を削除方法：

通过javascript方式可以隐藏

$(&amp;quot;.lookupIcon&amp;quot;).css({&amp;#39;visibility&amp;#39;:&amp;#39;hidden&amp;#39;});
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WordPress的主题文件优先级层次图]]></title>
      <url>http://www.ibmer.info/template-hierarchy.html</url>
      <content type="html"><![CDATA[<pre>
// 先介绍重要的
│ index.php // 主题的引导文件，也是默认的首页的模板
│ header.php
// 这个文件包含 HTML 的 &lt;head&gt; 部分（不显示在网页上，但是通过查看网页源文件就能看到）， // 同时还可能包含一部分正文（HTML的 &lt;body&gt; 标签内的东西）； // get_header() 就是调用它的。 // 比如水景一页下面整个浅灰色色背景的部分都是在这个文件中处理的
│ footer.php
// 用于显示页面下面的内容，包含 &lt;/body&gt; 标签 // 比如水景一页上面整个黑色背景的部分都是在这个文件中处理的

// 下面 9 个文件都是页面模板，都调用了 get_header() 和 get_footer() // 并且一般都会调用 comments.php 以处理评论列表和评论框
│ 404.php // 用于显示自定义 404 错误网页的页面模板
│ archive.php // 用于显示文章存档网页的页面模板，比如按日期存档等页面
│ author.php // 作者文章存档页面模板（显示该作者所有文章列表网页）
│ category.php // 分类页面模板
│ image.php // 用于显示图片附件，页面模板
│ page.php
 // 用于显示静态页面（page）的页面模板，通过 get_template_part( &#39;content&#39;, &#39;page&#39; ) 调用了 content-page.php
│ tag.php // 标签页面模板
│ single.php // 单一文章（post）页面，这是标准形式的 post，调用了 content-single.php
│ showcase.php // 特色文章页面模板；用这个模板来做首页其实挺不错的

// 下面这一组 11 个以 content 开头的文件，都只是某个页面的一部分，类似于上面的 comments.php 文件 // Twenty Ten 主题中用的是 loop 开头
│ content-aside.php
│ content-featured.php
│ content-gallery.php
│ content-image.php
│ content-intro.php
│ content-link.php
│ content-page.php
│ content-quote.php
│ content-single.php
│ content-status.php
│ content.php
// 以上 11 个文件是用来处理网页主体部分的； // 包含正文内容，包括文章（post）、静态页面（page），也就是我们通常所说的文章内容； // 2011 主题内置了几种文章形式（[post format](http://codex.wordpress.org/Post_Formats)），可针对不同的文章形式使用不同的模板； // 当然如果你乐意，使用同一个模板也没有问题

│ comments.php
// 评论模板；这个不是一个单独的页面，需要在别的页面中调用此模板 // 使用 comments_template( &#39;&#39;, true ) 来调用
│ searchform.php // 搜索框模板
│ search.php // &ldquo;搜索&rdquo;页面模板，还会调用 searchform.php 来显示搜索框，这是个页面模板
│ sidebar-footer.php
│ sidebar-page.php
│ sidebar.php // get_sidebar() 会调用此文件
// 这三个是用于显示网页上 WordPress 边栏的模板 // sidebar.php 会根据情况调用 sidebar-page.php 或者 sidebar-footer.php 或者同时调用两个
│ functions.php
// 主题自定义的一些功能函数，如果有的话可以覆盖 WordPress 内建函数
│ rtl.css
│ style.css
// 这两个是主题的样式表文件，其中 rtl 只用于显示从右到左写法的语言
│ editor-style-rtl.css
│ editor-style.css
// 这两个是主题提供给后台的编辑器样式文件，一般不修改
│ screenshot.jpg
│ screenshot.png
// 这两个是主题的缩略图
│ readme.txt // 主题的说明文档
│ license.txt // 主题的许可证内容
├─colors // 文件夹，包含选择黑色风格时需要调用的样式文件（省略其下的文件）
│
├─images // 文件夹，包含主题网页上用到的图片（省略其下的文件）
│ │
│ └─headers // 文件夹，包含顶部背景图片（省略其下的文件）
│
├─inc // 文件夹一些内部函数，基本不会自己修改（省略其下的文件）
│ │
│ └─images // 文件夹，包含一些图片（省略其下的文件）
│
├─js // 文件夹，包含主题自己的 JavaScript 文件（省略其下的文件）
│
└─languages // 文件夹，包含语言文件的文件夹（省略其下的文件）</pre>

<pre><code>&amp;nbsp;
</code></pre><p>###<br>    Examples&nbsp;</p>
<pre><code>If your blog is at&amp;nbsp;`http://example.com/blog/`&amp;nbsp;and a visitor clicks on a link to a category page such as&amp;nbsp;`http://example.com/blog/category/your-cat/`, WordPress looks for a template file in the current theme&amp;rsquo;s directory that matches the category&amp;rsquo;s ID to generate the correct page. More specifically, WordPress follows this procedure:
</code></pre><ol>
<li>Looks for a template file in the current theme&rsquo;s directory that matches the category&rsquo;s slug. If the category slug is &ldquo;unicorns,&rdquo; then WordPress looks for a template file named&nbsp;<code>category-unicorns.php</code>.</li>
<li>If&nbsp;<code>category-unicorns.php</code>&nbsp;is missing and the category&rsquo;s ID is 4, WordPress looks for a template file named&nbsp;<code>category-4.php</code>.</li>
<li>If&nbsp;<code>category-4.php</code>&nbsp;is missing, WordPress will look for a generic category template file,&nbsp;<code>category.php</code>.</li>
<li>If&nbsp;<code>category.php</code>&nbsp;does not exist, WordPress will look for a generic archive template,&nbsp;<code>archive.php</code>.</li>
<li><p>If&nbsp;<code>archive.php</code>&nbsp;is also missing, WordPress will fall back to&nbsp;the main theme template file,&nbsp;<code>index.php</code>.</p>
<p><a href="http://developer.wordpress.org/files/2014/10/template-hierarchy.png" target="_blank" rel="external"><img src="http://developer.wordpress.org/files/2014/10/template-hierarchy-1024x640.png" alt=""></a></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[日本所得税计算]]></title>
      <url>http://www.ibmer.info/jp-tax.html</url>
      <content type="html"><![CDATA[<font size="7"><strong>日本所得税</strong></font>

<pre><code>[&lt;font size=&quot;7&quot;&gt;**日本所得税计算器**&lt;/font&gt;](http://www.ibmer.info/calculate-income-tax)

------------------------------------------------------------

所得税计算公式 正规版

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**&lt;font color=&quot;Black&quot;&gt;所得税纳税金额＝&lt;/font&gt;&amp;nbsp;**&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**_&lt;u&gt;課税される所得金額&lt;/u&gt;_**&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**&lt;font color=&quot;Black&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&amp;nbsp;&amp;nbsp;X 所得税率&lt;/font&gt;&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**_&lt;u&gt;課税される所得金額&lt;/u&gt;_＝&lt;font color=&quot;Blue&quot;&gt;【税前给与支払額】－【所得控除】&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**【税前给与支払額】＝工作单位向劳动者支付的&lt;font size=&quot;6&quot;&gt;&lt;u&gt;税前&lt;/u&gt;&lt;/font&gt;薪资总额**&lt;/font&gt;&lt;/font&gt;

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**【所得控除】＝税法规定的控除项目和控除金额**&lt;/font&gt;&lt;/font&gt;

-------------------------------------------------------

所得税计算公式 白话版

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Black&quot;&gt;**所得税纳税金额＝ 纯所得（課税される所得金額）X 所得税率**

**纯所得（課税される所得金額）＝收入（税前給与支払額） - 费用（所得控除）**&lt;/font&gt;&lt;/font&gt;

-------------------------------------------------------

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**所得税率**&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;

[http://www.nta.go.jp/taxanswer/shotoku/2260.htm](http://www.nta.go.jp/taxanswer/shotoku/2260.htm)
</code></pre><table cellspacing="0"><br>    <tbody><br>        <tr><br>            <td width="62%"><br>                課税される所得金額<br>            </td><br>            <td width="13%"><br>                税率<br>            </td><br>            <td width="25%"><br>                控除額<br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    195万円以下<br><br>            </td><br>            <td><br><br>                    5％<br><br>            </td><br>            <td><br><br>                    0円<br><br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    195万円を超え　330万円以下<br><br>            </td><br>            <td><br><br>                    10％<br><br>            </td><br>            <td><br><br>                    97,500円<br><br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    330万円を超え　695万円以下<br><br>            </td><br>            <td><br><br>                    20％<br><br>            </td><br>            <td><br><br>                    427,500円<br><br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    695万円を超え　900万円以下<br><br>            </td><br>            <td><br><br>                    23％<br><br>            </td><br>            <td><br><br>                    636,000円<br><br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    900万円を超え　1,800万円以下<br><br>            </td><br>            <td><br><br>                    33％<br><br>            </td><br>            <td><br><br>                    1,536,000円<br><br>            </td><br>        </tr><br>        <tr><br>            <td><br><br>                    1,800万円超<br><br>            </td><br>            <td><br><br>                    40％<br><br>            </td><br>            <td><br><br>                    2,796,000円<br><br>            </td><br>        </tr><br>    </tbody><br></table>

<pre><code>从上面的税率表当中，可以看到

所得税的税率，是根据【課税される所得金額】的高低而定的

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**課税される所得金額**&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;

-------------------------------------------------------

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**【課税される所得金額】＝&lt;font color=&quot;Blue&quot;&gt;【&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**&lt;font color=&quot;Blue&quot;&gt;税前给与支払額&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**&lt;font color=&quot;Blue&quot;&gt;】－【所得控除】&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;

-------------------------------------------------------

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**【**&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**&lt;font color=&quot;Blue&quot;&gt;税前给与支払額&lt;/font&gt;**&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**】**&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;

【税前給与支払額】，就是工作单位向劳动者支付的工资、薪水、报酬的税前合计金额

（&lt;font color=&quot;Blue&quot;&gt;&lt;font color=&quot;Black&quot;&gt;**【**&lt;/font&gt;&lt;/font&gt;&lt;font color=&quot;Blue&quot;&gt;&lt;font color=&quot;Black&quot;&gt;**税前給与支払額**&lt;/font&gt;&lt;/font&gt;&lt;font color=&quot;Blue&quot;&gt;&lt;font color=&quot;Black&quot;&gt;**】并没有扣除各种税金、保险**&lt;/font&gt;&lt;/font&gt;）

（**年度奖金或ボーナス****的****课税算法不同，这里不讨论奖金的课税问题**）

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;&lt;font color=&quot;Blue&quot;&gt;**【所得控除】**&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;

税法为了保护纳税人享有最基本的生存能力和经济负担能力

在征收所得税之前，允许纳税人从【税前給与支払額】当中扣除一些特定的费用或开销

这些特定的费用或开销，在税法上叫做【所得控除】

从【税前给与支払額】当中扣除了法定的【所得控除】项目之后，剩余的部分，就成为了【課税される所得金額】

【課税される所得金額】＝【税前给与支払額】 － 【所得控除】

【所得控除】的项目比较复杂，参考日本国税厅的官方解释：

[http://www.nta.go.jp/taxanswer/shotoku/shoto320.htm](http://www.nta.go.jp/taxanswer/shotoku/shoto320.htm)

对于留学生来说，最常见的【所得控除】是以下几种：

①**基础控除**38万日元（全员适用）

[http://www.nta.go.jp/taxanswer/shotoku/1199.htm](http://www.nta.go.jp/taxanswer/shotoku/1199.htm)

②**给与所得控除**（最低控除额从65万日元起步，全员适用）

[http://www.nta.go.jp/taxanswer/shotoku/1410.htm](http://www.nta.go.jp/taxanswer/shotoku/1410.htm)

③**配偶者控除**27万日元（仅限于&lt;font color=&quot;Blue&quot;&gt;**已婚世代主1人适用，并且世代主的配偶者的**&lt;/font&gt;&lt;font color=&quot;Blue&quot;&gt;**税前给与支払額**&lt;/font&gt;&lt;font color=&quot;Blue&quot;&gt;**在103万日元以内**&lt;/font&gt;）

[http://www.nta.go.jp/taxanswer/shotoku/1191.htm](http://www.nta.go.jp/taxanswer/shotoku/1191.htm)

（如果世代主的配偶者的税前给与支払額超过103万但不超过141万的情况下，可以适用于[配偶者特别控除](http://www.nta.go.jp/taxanswer/shotoku/1195.htm)）

④**抚养控除**（仅限于家中有孩子或者老人需要纳税人抚养的前提下适用。控除额最低38万、最高63万）

[http://www.nta.go.jp/taxanswer/shotoku/1180.htm](http://www.nta.go.jp/taxanswer/shotoku/1180.htm)

⑤**勤劳学生控除**27万日元（仅限于&lt;font color=&quot;Blue&quot;&gt;**税前给与支払額**&lt;/font&gt;&lt;font color=&quot;Blue&quot;&gt;**在130万日元以内的在校学生**&lt;/font&gt;适用）

[http://www.nta.go.jp/taxanswer/shotoku/1175.htm](http://www.nta.go.jp/taxanswer/shotoku/1175.htm)

关于所得税的基础知识就是这些

在这里举3个例子，来看一下所得税的基本计算方法：

**事例1**

留学生A，单身，在某年1月1日-12月31日之间

工作单位向A支付的薪水总额是150万

【税前给与支払額】＝150万

【所得控除】＝基础控除38万＋给与所得控除65万＝103万

（由于留学生A的税前给与支払額为150万，超过了勤劳学生控除的130万限制，因此不适用勤劳学生控除）

（由于留学生A是单身，不适用配偶者控除）

【課税される所得金額】＝【税前给与支払額】-【所得控除】＝150万-103万＝47万

根据税率表当中的规定，47万小于195万，属于第1档税率，税率为5%

所得税纳税金额＝【課税される所得金額】X 所得税率

所以留学生A的所得税纳税金额＝47万 X 5%＝23500

**事例2**

日企正社员B，已婚，与妻子在日本同居

妻子是家庭主妇，平时打零工，税前给与支払額不超过103万

在某年1月1日-12月31日之间

工作单位向B支付的薪水总额是400万

【税前给与支払額】＝400万

【所得控除】＝基础控除38万＋给与所得控除65万＋配偶者控除27万＝130万

【課税される所得金額】＝【税前给与支払額】-【所得控除】＝400万-130万＝270万

根据税率表当中的规定，270万大于195万，但小于330万，属于第2档税率，税率为10%

所得税纳税金额＝【課税される所得金額】X 所得税率

所以正社员B的所得税纳税金额＝270万 X 10%＝27万

最后再减掉税率表右侧的附加控除额97500

正社员B的所得税纳税金额＝27万-97500＝172500

**事例3**

留学生C，单身，在某年1月1日-12月31日之间

工作单位向C支付的薪水总额是130万

【税前给与支払額】＝130万

【所得控除】＝基础控除38万＋给与所得控除65万＋勤劳学生控除27万＝130万

【課税される所得金額】＝【税前给与支払額】-【所得控除】＝130万 -130万＝0

所得税纳税金额＝【課税される所得金額】X 所得税率

所以留学生C的所得税纳税金额＝0 X 所得税率＝0

也就是说，留学生每年打工的【税前给与支払額】不超过130万的话，不需要缴纳所得税

&lt;font size=&quot;5&quot;&gt;&lt;font color=&quot;Red&quot;&gt;**所得税常见问题答疑：**&lt;/font&gt;&lt;/font&gt;

**①我每年到底赚多少钱不需要交所得税？**

一般人是【税前给与支払額】不超过103万，不需要交所得税

（理由：【課税される所得金額】＝税前给与支払額103万 - 基础控除38万 - 给与所得控除65万 ＝ 0）

留学生是【税前给与支払額】不超过130万，不需要交所得税（因为留学生可以适用于勤劳学生控除）

（理由：【課税される所得金額】＝税前给与支払額130万 - 基础控除38万 - 给与所得控除65万 - 勤劳学生控除27万 ＝ 0）

**②我的【****税前给与支払額****】符合①的标准，为什么每个月的工资仍然会被工作单位扣缴所得税？**

不论您的【税前给与支払額】高或者低，根据日本税法的规定，工作单位在有些情况下，必须从劳动者的薪水当中代扣代缴一定比例的所得税。这个强制性的规定，在日本税法上叫做【&lt;font color=&quot;Red&quot;&gt;**源泉征收**&lt;/font&gt;】。劳动者获取【税前给与支払額】的瞬间，相当于纳税义务的发生源泉。所以在税法上把工作单位代扣代缴所得税的行为，命名为【源泉征收】。

工作单位在当年度最后1次向劳动者支付薪水之前，会进行一个【&lt;font color=&quot;Red&quot;&gt;**年末调整**&lt;/font&gt;】的精算手续。【年末调整】将最终确定劳动者在当年度所获取的【税前给与支払額】实际金额，并以此为依据重新计算劳动者的所得税和其他社会保险税的准确纳税金额，多退少补。如果在【年末调整】中判定劳动者的【税前给与支払額】不发生所得税的纳税义务，工作单位会把这一年当中多扣多缴的所得税全部退还给劳动者本人。

简单点说，就是根据【源泉征收】的规定先代扣代缴所得税，【年末调整】的时候再把不应该扣缴的所得税返还给劳动者本人。

**③我怎么才能知道自己这一年的【****税前给与支払額****】？我怎么才能知道工作单位代扣代缴了多少所得税？**

正规的工作单位，在每年12月或1月前后，会向劳动者发行一张《&lt;font color=&quot;Red&quot;&gt;**源泉征收票**&lt;/font&gt;》

这个《源泉征收票》上：

记录了工作单位在这一年当中累计向您支付的薪水总额（【税前给与支払額】）

记录了工作单位在这一年当中累计从您的薪水当中代扣代缴的所得税总额（【源泉征收】）

**④我换了新的工作单位，旧的工作单位还能给我《源泉征收票》吗？**

在每年的12月或1月前后，正规的工作单位会把《源泉征收票》邮寄给已经离职的劳动者

如果您的旧工作单位没有给您邮寄《源泉征收票》，您可以打电话向旧工作单位索取《源泉征收票》

如果您搬家了，请务必把最新的住址告知旧工作单位，以便收取《源泉征收票》

**⑤我同时在2个以上的工作单位打工，是否都能得到《源泉征收票》？**

正规的工作单位都会发行《源泉征收票》

劳动者在几个工作单位兼职，就应该会得到几张《源泉征收票》

**⑥我同时在2个以上的工作单位打工，是不是也适用于第②个问题当中的那个【年末调整】退税的规定？**

&lt;font color=&quot;Blue&quot;&gt;**同时在2个以上工作单位兼职的劳动者，不适用【年末调整】的规定**&lt;/font&gt;

必须在每年年初（1月-3月前后）的时候，携带全部工作单位的《源泉征收票》

主动去区役所或税务署办理【&lt;font color=&quot;Red&quot;&gt;**确定申告**&lt;/font&gt;】手续

【确定申告】手续与【年末调整】的作用是一样的

可以准确的计算您的【税前给与支払額】，以及各种税金的纳税金额

多退少补，多扣多缴的所得税，在【确定申告】之后会退还给劳动者本人

**⑦中国籍留学生免除所得税的手续怎样办理？**

根据日本政府和中国政府签署的《日中租税条约》的规定

[http://www.nta.go.jp/tetsuzuki/shinsei/annai/joyaku/annai/1648_46.htm](http://www.nta.go.jp/tetsuzuki/shinsei/annai/joyaku/annai/1648_46.htm)

同时符合以下3个条件的中国籍留学生，可以全额免除所得税

（在此之前符合免税条件但已经被扣缴的所得税，也可以依据《日中租税条约》办理退税申请）

&lt;font color=&quot;Red&quot;&gt;**①中国大陆护照**&lt;/font&gt;

&lt;font color=&quot;Red&quot;&gt;**②留学签证**&lt;/font&gt;

&lt;font color=&quot;Red&quot;&gt;**③日本正规的大学学部或大学院的正式在籍留学生**&lt;/font&gt;

（&lt;font color=&quot;Blue&quot;&gt;**语言学校、专门学校、日本语别科、预科研究生不符合免税资格**&lt;/font&gt;）

免除手续：

①在税务署或网上获取免税申请表

下载地址（PDF文档）：

[http://www.nta.go.jp/shiraberu/zeiho-kaishaku/tsutatsu/kobetsu/hojin/010705/pdf/228.pdf](http://www.nta.go.jp/shiraberu/zeiho-kaishaku/tsutatsu/kobetsu/hojin/010705/pdf/228.pdf)

②将免税申请表交付工作单位，根据税务署的规定完成后续申请手续

**⑧我看自己的工资单每个月都被扣了所得税，这个工资单里的纳税金额就是准确的纳税金额吗？**

您现在每个月拿到的工资单里记载的所得税纳税金额，并不是准确的纳税金额

在当年度最后1次发工资之前，您的工作单位将会进行一个叫做【年末调整】的精算手续

在【年末调整】之后，当年度的【税前給与支払額】，以及所得税纳税金额，才会最终确定

按着【年末调整】算出来的最终纳税金额，您的所得税和其他社会保险将会多退少补

多扣多缴的部分都会退还给您

如果您的工作单位没有做【年末调整】

您可以自己去区役所办理【确定申告】

把多扣多缴的税都退回来
</code></pre>]]></content>
      
        <categories>
            
            <category> 日本 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[关于Salesforce]]></title>
      <url>http://www.ibmer.info/about-sf.html</url>
      <content type="html"><![CDATA[<p>&nbsp;</p>
<pre><code>简介

Salesforce是创建于1999年3月的一家客户关系管理(CRM)软件服务提供商，总部设于美国旧金山，可提供随需应用的客户关系管理平台。Salesforce允许客户与独立软件供应商定制并整合其产品，同时建立他们各自所需的应用软件。对于用户而言，则可以避免购买硬件、开发软件等前期投资以及复杂的后台管理问题。因其口号&amp;ldquo;软件的终结&amp;rdquo;，故在业内常被称作&amp;ldquo;软件终结者&amp;rdquo;。Marc Benioff 和Magdalena Yesil是最初的投资者和董事会成员，其他早期投资者还包括Larry Ellison、Halsey Minor、 Stewart Henderson、Mark Iscaro、Igor Sill和Nancy Pelosi，Marc Benioff是现任董事会主席兼CEO。2004年6月，该公司在纽约证券交易所成功上市，股票代号CRM，筹资1.1亿美元。2004年的收入就已达到1.75亿美元，拥有13,900家企业客户，注册用户达到227,000名。2012年收入突破20亿，达到22.6亿美元。在《福布斯》全球最具创新力企业排行榜上Salesforce名列首位，而且连续第四年稳居宝座。[1]&amp;nbsp;&amp;nbsp;在《财富》杂志公布的2013年全球100个最佳雇主排名中Salesforce排名第19位，在同时上榜的科技公司中仅次于Google、SAS和Qualcomm。[2]&amp;nbsp;

Salesforce又译作软件营销部队或软营，是全球按需 CRM 解决方案的领导者。因引：它拥有业界无可比拟的客户成功率。当前，全球有150,000多家公司正使用 Salesforce 的强大功能分享客户信息，以及开发具有更高收益的客户关系。

Salesforce.com提供按需定制的软件服务，用户每个月需要支付类似租金的费用来使用网站上的各种服务，这些服务涉及客户关系管理的各个方面，从普通的联系人管理，产品目录到订单管理，机会管理，销售管理等。他提供一个平台，使得客户无需拥有自己的软件，也无需花费大量资金和人力用于记录的维护，储存和管理，所有的记录和数据都储存在Salesforce.com上面。同时和普通的自己购买的软件不一样，用户随时可以根据需要去增加新的功能或者去除一些不必要的功能，真正地实时了按需使用。

创始人

Salesforce的创始人是俄罗斯裔美国人Marc Benioff。Marc Benioff在美国也是一个具有传奇色彩的人物。他创立Salesforce之前是Oracle（甲骨文）高级副总裁，当时才27岁，是Oracle历史上最年轻的高级副总裁。上个世纪末，互联网的发展出现了一个高潮。当时，他预见到，随着互联网的发展和宽带的普及，会有越来越多的企业通过互联网得到一些软件的服务。于是，他离开了Oracle，并在1999年成立了Salesforce公司，当时他仅37岁，就开始对SaaS业务模式进行探索，此后Marc Benioff被誉为&amp;ldquo;软件终结者&amp;rdquo;。提出云计算和软件即服务 (SaaS) 的理念。开创了新的里程碑。
</code></pre>]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WordPress中创建自定义PHP页面的两种方法]]></title>
      <url>http://www.ibmer.info/wp-php-page.html</url>
      <content type="html"><![CDATA[<p>WordPress 现在是非常流行的一个网页内容管理平台，维护方便，可扩展性强，并且有着强大的社区支持。但 WordPress 默认的文章和页面只支持很有限的很基本的 HTML 代码。而很多时候我们想要设计一些更加个性的页面，比如在博客上收集表单，并且使得表单页的风格与主题一致；或者针对某些特定的标签页使用主题的衍变风格来个性化我们自己的 WordPress，这些自定义的需求没有 PHP 的支持就解决不了了。但是，如果我们直接用 PHP 来做，就会与全站的主题非常不协调，这时候我们可以：1. 制作页面模板；2. 调用 WordPress 的 API. 来解决这个问题。具体实现如下：</p>
<p>###<br>    方案一：制作页面模板</p>
<pre><code>制作页面模板是一个最简单、方便的解决方案，但功能也有一定的局限性。要创建页面模板：
</code></pre><ol>
<li>在当前启用的主题文件夹（wp-content/themes/your_theme_name）下创建一个 sample-template.php 的 PHP 文件；</li>
<li>将 page.php 的内容复制到刚才创建的文件中；</li>
<li>增加自定义的 PHP 代码；</li>
<li><p>在文件的最顶端增加一段注释：</p>
<pre><code>&lt;pre&gt;
</code></pre><p><code>&amp;lt;?php
/*
Template Name: Sample Template
*/
?&amp;gt;</code></p>
<p>接下来进入 WordPress 后台，新建页面后就能找到&ldquo;Sample Template&rdquo;这个模板来使用了，这个方法比较简单，网上能够百度谷歌的资料也很多，因此只是简略地说一下。</p>
</li>
</ol>
<p>###<br>    方案二：调用 WordPress 的 API</p>
<pre><code>这种方法的自由度较高，并且可以创建非WordPress格式的URL，非常有用。比如我们要把 example.com/some-custom-url-request 转交给主题文件夹下的 /custom/some-custom-url-request.php 来处理，就可以用这种方式来处理。这种方法用到 template redirect 钩子，template redirect 是 WordPress 在预处理好所有参数设置之后决定调用主题模板的时候调用的。

我们只需在主题的 function.php 文件的尾部加上：
</code></pre><pre>
`function loadCustomTemplate($template) {
    global $wp_query;
    if(!file_exists($template))return;
    $wp_query-&gt;is_page = true;
    $wp_query-&gt;is_single = false;
    $wp_query-&gt;is_home = false;
    $wp_query-&gt;comments = false;
    // if we have a 404 status
    if ($wp_query-&gt;is_404) {
    // set status of 404 to false
        unset($wp_query-&gt;query["error"]);
        $wp_query-&gt;query_vars["error"]=&quot;&quot;;
        $wp_query-&gt;is_404=false;
    }
    // change the header to 200 OK
    header(&quot;HTTP/1.1 200 OK&quot;);
    //load our template
    include($template);
    exit;
}

function templateRedirect() {
    $basename = basename($_SERVER['REQUEST_URI'], '?' . $_SERVER['QUERY_STRING']);
    loadCustomTemplate(TEMPLATEPATH.&#39;/custom/&#39;.&quot;/$basename.php&quot;);
}

add_action(&#39;template_redirect&#39;, &#39;templateRedirect&#39;);`</pre>

<pre><code>这样就实现了 WordPress 查找 /custom 文件夹下的 php 文件，并且将相匹配的 URL 请求转交给对应的 php 文件来处理的效果，与此同时，这个 php 文件还保持了对 WordPress API 的调用，因此留给我们的空间非常大。

例如如果我们在 /custom 文件夹下创建一个 hello.php 的文件如下：
</code></pre><pre>
`&lt;?php get_header();?&gt;
&lt;div id=&quot;main&quot;&gt;
    &lt;div id=&quot;content&quot;&gt;
        &lt;div id=&quot;post-999&quot; class=&quot;page type-page status-publish hentry&quot;&gt;
            &lt;h2 class=&quot;post-title&quot;&gt;My custom page&lt;/h2&gt;
            &lt;div class=&quot;post-content&quot;&gt;
                &lt;?php echo &quot;Hello World&quot;; ?&gt;
                &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;
            &lt;/div&gt;&lt;!-- END .post-content --&gt;
            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;!-- #post-## --&gt;
    &lt;/div&gt;&lt;!-- END #content --&gt;
    &lt;?php get_sidebar(); ?&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;
&lt;/div&gt;&lt;!-- END #main --&gt;
&lt;?php get_footer(); ?&gt;`</pre>

<pre><code>那么只要输入 example.com/hello 就能显示 Hello World，并且具有主题的框架和 CSS 样式，非常方便好用。
</code></pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[awk, grep, sed处理一段xml]]></title>
      <url>http://www.ibmer.info/awk-grep-sed-xml.html</url>
      <content type="html"><![CDATA[<p>awk, grep, sed处理一段xml</p>
<p>[root@DISS010 shell]# cat test1<br>&lt;parameter name=”PortMappingEnabled” access=”readWrite” type=”xsd:boolean”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”PortMappingLeaseDuration” access=”readWrite” activeNotify=”canDeny” type=”xsd:unsignedInt”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”RemoteHost” access=”readWrite”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”ExternalPort” access=”readWrite” type=”xsd:unsignedInt”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”ExternalPortEndRange” access=”readWrite” type=”xsd:unsignedInt”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”InternalPort” access=”readWrite” type=”xsd:unsignedInt”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”PortMappingProtocol” access=”readWrite”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”InternalClient” access=”readWrite”&gt;&lt;/parameter&gt;<br>&lt;parameter name=”PortMappingDescription” access=”readWrite”&gt;&lt;/parameter&gt;<br>[root@DISS010 shell]#</p>
<p>[root@DISS010 shell]# awk -F “\”” ‘{print $2}’ test1<br>PortMappingEnabled<br>PortMappingLeaseDuration<br>RemoteHost<br>ExternalPort<br>ExternalPortEndRange<br>InternalPort<br>PortMappingProtocol<br>InternalClient<br>PortMappingDescription</p>
<p>[root@DISS010 shell]# grep -Po ‘name=”\K[^”]*’ test1<br>PortMappingEnabled<br>PortMappingLeaseDuration<br>RemoteHost<br>ExternalPort<br>ExternalPortEndRange<br>InternalPort<br>PortMappingProtocol<br>InternalClient<br>PortMappingDescription</p>
<p>[root@DISS010 shell]# sed ‘s/[^”]<em>“([^”]</em>).*/\1/‘ test1<br>PortMappingEnabled<br>PortMappingLeaseDuration<br>RemoteHost<br>ExternalPort<br>ExternalPortEndRange<br>InternalPort<br>PortMappingProtocol<br>InternalClient<br>PortMappingDescription</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bash脚本：怎样一行行地读文件(转)]]></title>
      <url>http://www.ibmer.info/bash-read-file.html</url>
      <content type="html"><![CDATA[<p>用bash脚本读文件的方法有很多。请看第一部分，我使用了while循环及其后的管道命令（|）(cat $FILE | while read line; do … )，并在循环当中递增 i 的值，最后，我得到了非我所想的 i 。主要的原因是，管道命令会发起子shell来读取文件，而任何在（子shell的）while循环中的操作（例如 i ++），都会随着子shell的结束而丢失。</p>
<p>而第二种，也是最坏的一种，其最明显的错误就是在读文件的过程中使用了for循环(for fileline in $(cat $FILE);do ..)，这样每打印一个单词就换一次行，因为for循环使用空格作为默认的IFS。</p>
<p>完美的方法，即第三种的while循环(while read line;do …. done &lt; $FILE) 是最合适且最简单的一行行地读文件的方法。请看以下例子。</p>
<p>Input: $ cat sample.txt<br>This is sample file<br>This is normal text file</p>
<p>Source: $ cat readfile.sh</p>
<p>#!/bin/bash</p>
<p>i=1;<br>FILE=sample.txt</p>
<h1 id="Wrong-way-to-read-the-file"><a href="#Wrong-way-to-read-the-file" class="headerlink" title="Wrong way to read the file."></a>Wrong way to read the file.</h1><h1 id="This-may-cause-problem-check-the-value-of-‘i’-at-the-end-of-the-loop"><a href="#This-may-cause-problem-check-the-value-of-‘i’-at-the-end-of-the-loop" class="headerlink" title="This may cause problem, check the value of ‘i’ at the end of the loop"></a>This may cause problem, check the value of ‘i’ at the end of the loop</h1><p>echo “###############################”<br>cat $FILE | while read line; do<br>echo “Line # $i: $line”<br>((i++))<br>done<br>echo “Total number of lines in file: $i”</p>
<h1 id="The-worst-way-to-read-file"><a href="#The-worst-way-to-read-file" class="headerlink" title="The worst way to read file."></a>The worst way to read file.</h1><p>echo “###############################”<br>for fileline in $(cat $FILE);do<br>echo $fileline<br>done</p>
<h1 id="This-is-correct-way-to-read-file"><a href="#This-is-correct-way-to-read-file" class="headerlink" title="This is correct way to read file."></a>This is correct way to read file.</h1><p>echo “################################”<br>k=1<br>while read line;do<br>echo “Line # $k: $line”<br>((k++))<br>done &lt; $FILE<br>echo “Total number of lines in file: $k”</p>
<p>Output: $ ./readfile.sh</p>
<p>###############################<br>Line # 1: This is sample file<br>Line # 2: This is normal text file<br>Total number of lines in file: 1</p>
<p>###############################<br>This<br>is<br>sample<br>file<br>This<br>is<br>normal<br>text<br>file</p>
<p>################################<br>Line # 1: This is sample file<br>Line # 2: This is normal text file<br>Total number of lines in file: 3</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SELinux简单介绍(转)]]></title>
      <url>http://www.ibmer.info/selinux-introduce.html</url>
      <content type="html"><![CDATA[<div id="blog_article" class="d cl"><br><div id="msgcns!981AB8AAE639A977!296" class="bvMsg"><span style="font-weight: bold; color: #3366ff;">1. 为什么要使用SELinux</span><br><br>先举一个简单的例子<br>比如我们先查看一个在本机上ssh private key文件的permission<br><br><span style="color: #3366ff;"># ls -l ~leonard/.ssh</span><br><span style="color: #3366ff;">-rw——- 1 leonard leonard 1743 Jun 30 14:02 id_rsa</span><br><br>我们会发现这个文件除了root用户，只有leonard用户可以对它进行读写操作。那么假设现在leonard用户打开了一个firefox浏览器<br><br><span style="color: #3366ff;"># ps -ef|grep firefox</span><br><span style="color: #3366ff;">leonard 5868 5863 1 11:08 ? 00:02:14 /home/leonard/Apps/firefox/firefox-bin</span><br><br>那么我们可以看到，由于firefox拥有了leonard的权限，那么它就可以浏览并修改leonard用户的ssh key. 如果一个黑客入侵了这个firefox,那么leonard用户的ssh key就可以很容易地被盗走。<br>那么这里就产生了一个问题：运行一个firefox浏览器，其实根本不需要让它有权限可以查看用户的私人信息。一个应用程序应该只在他特定的使用范围内拥 有权限。但是在linux系统下，如果用户运行了一个程序，那么这个程序就拥有了和这个用户相同的权限（甚至可以是更高的权限，如果程序被setuid or setgid的话),如此一来本来属于这个用户的其他资源都可以被这个程序所享用，由此就会产生一系列的安全问题。<br><br>上面这个例子我取自于Daniel Walsh所写的 “Managing Red Hat Enterprise Linux 5”. 他是SELinux的首席工程师，而SELinux正是用来解决诸如此类的安全问题<br><br><span style="font-weight: bold; color: #3366ff;">2. 什么是SELinux</span><br><br>SELinux (Security-Enhanced Linux) 是一种Mandatory Access Control (MAC) 的应用。先不忙解释它，让我们先来看看Linux本身的安全标准<br><br>Linux本身的安全标准称之为：Discretionary Access Control (DAC)<br>在DAC的标准之下，Linux下resource(file, device…)的安全性完全取决于它所属的用户，用户组以及他们所设定的permission,由此就产生了下面这些问题<br><br>1. 用户执行的程序可以拥有所有属于这个用户其他资源的权限<br><br>2. 程序可以修改用户文件的permission (如evolution可以将用户的邮件修改成world readable)<br><br>3. 只有root和普通用户之分。过于简单的安全设计，以至于任何以root运行的程序遭到入侵时，整个系统将被攻破<br><br>4. Kernel无法区分你是用户还是程序，所以不同类别的security不能够得以实施<br><br>那么SELinux的Mandatory Access Control是怎么解决这些问题的呢<br><br>1. SELinux给file, resource(device etc.), user, process等增加了另一层的属性：称之为Security Context<br><br>2. SELinux的security context里面包括了: Type Enforcement, Role-Based Access Control 以及 Multi-Level Security (MLS) 三种不同的access control<br><br>3. 应用这些新属性的目的在于SELinux可以将程序限制在它仅需要控制的范围之内，从而最大限度的保护了user space<br><br>4. 使用SELinux可以一定程度降低root用户的权限。比如即使以root所运行的程序被侵犯以后，它也不可以获取对于用户空间资源的操控<br><br>如果说运用到实际中的话。那么比如当许多应用软件被发现漏洞以后，发行商和自由社区通常需要一段时间来给程序打补丁。那么使用了SELinux之后我们就可以保护我们的系统在这段时间内不会被次类攻击所侵犯<br><br><span style="font-weight: bold; color: #3366ff;">3. 如何关闭SELinux<br><br></span> 为什么要先讲如何关闭呢？因为搜索了一下，这个看来是问的最多的问题。的确如果你确实不需要或者还没有掌握SELinux的话，它会给你服务器的日常工作带来麻烦。所以下面我就来讲讲几种关闭SELinux的方法<br><br>3.1 无须重起而暂时关闭SELinux<br><br>以root用户运行以下命令<br><span style="color: #3366ff;"> # setenforce 0</span><br>这条命令的作用是把SELinux暂时设定成Permissive模式（关于Permissive Mode在以下会有介绍）<br><br>如果要恢复运行SELinux则可以运行<br><span style="color: #3366ff;"> # setenforce 1</span><br>这条命令会把SELinux设定成Enforcing模式<br><br>3.2 把SELinux永久设定为Permissive模式<br><br>这里需要讲一下Permissive和Enforcing模式的区别。 SELinux有三种模式：Enforcing, Permissive and Disable.<br>Enforcing模式就是应用SELinux所设定的Policy, 所有违反Policy的规则(Rules)都会被SELinux拒绝<br>Permissive和Enforcing的区别就在于它还是会遵循SELinux的Policy,但是对于违反规则的操作只会予以记录而并不会拒绝操作<br>Disable 顾名思义就是完全禁用SELinux<br><br>如果要永久设定为Permissive模式，我们就要修改SELinux的配置文件 /etc/sysconfig/selinux (在RHEL5下这是一个symbolic link to /etc/selinux/conf)<br><br><span style="color: #3366ff;"> # This file controls the state of SELinux on the system.</span><br><span style="color: #3366ff;"> # SELINUX= can take one of these three values:</span><br><span style="color: #3366ff;"> # enforcing - SELinux security policy is enforced.</span><br><span style="color: #3366ff;"> # permissive - SELinux prints warnings instead of enforcing.</span><br><span style="color: #3366ff;"> # disabled - SELinux is fully disabled.</span><br><span style="color: #3366ff;"> SELINUX=enforcing</span><br><span style="color: #3366ff;"> # SELINUXTYPE= type of policy in use. Possible values are:</span><br><span style="color: #3366ff;"> # targeted - Only targeted network daemons are protected.</span><br><span style="color: #3366ff;"> # strict - Full SELinux protection.</span><br><span style="color: #3366ff;"> SELINUXTYPE=targeted</span><br><br>修改<span style="color: #3366ff;">SELINUX=permissive</span>,然后重新启动就可以了<br><br>还有一种设置为Permissive的方法就是在boot loader里设置kernel parameter. 下面以grub为例<br>修改 /boot/grub/grub.conf, 写入enforcing=0<br><br><span style="color: #3366ff;"> title Red Hat Enterprise Linux Server (2.6.18-8.el5)</span><br><span style="color: #3366ff;"> root (hd0,0)</span><br><span style="color: #3366ff;"> kernel /vmlinuz-2.6.18-8.el5 ro root=/dev/VolGroup00/LogVol00 enforcing=0</span><br><span style="color: #3366ff;"> initrd /initrd-2.6.18-8.el5.img</span><br><br>注意设定kernel parameter会override配置文件的设置，所以如果bootloader里是enforcing=0,而设置文件里是 SELINUX=enforcing的话，那么重起以后SELinux还是会在Permissive模式下运行<br>建议如果在测试SELinux时遇到问题应该先把它设定为Permissive模式。等你确定需要永久关闭SELinux功能才把它设置成disable<br><br>3.3. 永久关闭SELinux<br><br>如果你确定需要永久关闭SELinux,那么就应该把它设置成disable模式<br>修改 /etc/sysconfig/selinux<br><span style="color: #3366ff;"> SELINUX=disable</span><br>然后重新启动<br><br>或者也可以在boot loader里设置 selinux=0<br><br><span style="color: #3366ff;"> title Red Hat Enterprise Linux Server (2.6.18-8.el5)</span><br><span style="color: #3366ff;"> root (hd0,0)</span><br><span style="color: #3366ff;"> kernel /vmlinuz-2.6.18-8.el5 ro root=/dev/VolGroup00/LogVol00 selinux=0</span><br><span style="color: #3366ff;"> initrd /initrd-2.6.18-8.el5.img</span><br><br><span style="color: #3366ff; font-weight: bold;">4. SELinux需要注意的几点</span><br><br>1. SELinux和其他的linux安全工具一样是用来辅助和增强linux的安全性，而不是用来代替原有的linux的安全设置。所以如果遇到 permission deny的情况下，应该首先检查是不是遵守了Linux本身的安全设置，然后再来检查它是否违反了SELinux所设定的规则<br><br>2. SELinux是基于kernel的安全系统。所以有些时候在改变了它的有关设置时需要重起系统才可以产生效果<br><br>3. SELinux对于deny的规则没有任何的设置。也就是说凡是不符合规则的操作将全部被deny<br><br>4. 在SELinux的Permissive模式下，kernel 只会记录第一次违犯规则的情况。而在Enforcing模式下每一次违反规则的情况都会被记录下来<br><br><span style="font-weight: bold; color: #3366ff;">5. SELinux的参考资料</span><br><br>1. NSA的SELinux官方主页: <a href="http://www.nsa.gov/selinux/" target="_blank" rel="external">http://www.nsa.gov/selinux/</a><br>2. Fedora Project的SELinux主页: <a href="http://fedoraproject.org/wiki/SELinux" target="_blank" rel="external">http://fedoraproject.org/wiki/SELinux</a><br>3. Dennis Walsh的live journal: <a href="http://danwalsh.livejournal.com/" target="_blank" rel="external">http://danwalsh.livejournal.com/</a></div><br></div>]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[quotacheck权限问题和selinux]]></title>
      <url>http://www.ibmer.info/quotacheck-selinux.html</url>
      <content type="html"><![CDATA[<p>[root@DISS010 home]# quotacheck -cv /home<br>quotacheck: Scanning /dev/sdb1 [/home] done<br>quotacheck: Cannot stat old user quota file /home/aquota.user: そのようなファイルやディレクトリはありません. Usage will not be substracted.<br>quotacheck: Old group file name could not been determined. Usage will not be substracted.<br>quotacheck: Checked 28 directories and 771 files<br>quotacheck: Cannot create new quotafile /home/aquota.user.new: 許可がありません<br><strong><span style="color: #ff0000;">quotacheck: Cannot initialize IO on new quotafile: 許可がありません</span></strong></p>
<p>[root@DISS010 home]# ll<br>合計 20<br>drwx——. 2 root     root 16384  2月 18 13:27 2015 lost+found<br>drwxr-xr-x. 5 postgres pg    4096  2月 18 13:32 2015 postgres</p>
<p><strong><span style="color: #ff0000;">[root@DISS010 home]# restorecon -v /home/</span></strong><br><strong><span style="color: #ff0000;">restorecon reset /home context system_u:object_r:default_t:s0-&gt;system_u:object_r:home_root_t:s0</span></strong></p>
<p>[root@DISS010 home]# quotacheck -cv /home<br>quotacheck: Scanning /dev/sdb1 [/home] done<br>quotacheck: Cannot stat old user quota file /home/aquota.user: そのようなファイルやディレクトリはありません. Usage will not be substracted.<br>quotacheck: Old group file name could not been determined. Usage will not be substracted.<br>quotacheck: Checked 28 directories and 771 files<br>quotacheck: Old file not found.<br>[root@DISS010 home]# ll<br>合計 28<br><strong><span style="color: #ff0000;">-rw——-. 1 root     root  6144  2月 18 14:57 2015 aquota.user</span></strong><br>drwx——. 2 root     root 16384  2月 18 13:27 2015 lost+found<br>drwxr-xr-x. 5 postgres pg    4096  2月 18 13:32 2015 postgres</p>
<ul>
<li>重设 SELinux 安全性本文<br>既然安全性本文是错的，那么就将他改回来即可嘛！怎么修改呢？可以透过两个命令喔！首先我们使用 chcon 来处理：</li>
</ul>
<p><a name="chcon"></a></p>
<p><table class="term"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="term"></td></p>
<p><pre>[root@www ~]# <span class="term_command">chcon [-R] [-t type] [-u user] [-r role] 文件</span><br>[root@www ~]# <span class="term_command">chcon [-R] –reference=范例档 文件</span><br><span class="term_say">选项与参数：<br>-R  ：连同该目录下的次目录也同时修改；<br>-t  ：后面接安全性本文的类型栏位！例如 httpd_sys_content_t ；<br>-u  ：后面接身份识别，例如 system_u；<br>-r  ：后面街角色，例如 system_r；<br>–reference=范例档：拿某个文件当范例来修改后续接的文件的类型！</span></pre></p>
<p><span class="term_hd">范例一：将刚刚的 index.html 类型改为 httpd_sys_content_t 的类型</span><br>[root@www ~]# <span class="term_command">chcon -t httpd_sys_content_t /var/www/html/index.html</span><br>[root@www ~]# <span class="term_command">ll -Z /var/www/html/index.html</span><br>-rw-r–r–  root root root:object_r:<span class="term_write">httpd_sys_content_t</span> /var/www/html/index.html<br><span class="term_say"># 瞧！这样就改回来啦！</span></p>
<p><span class="term_hd">范例二：以 /etc/passwd 为依据，将 index.html 修改成该类型</span><br>[root@www ~]# <span class="term_command">ll -Z /etc/passwd</span><br>-rw-r–r–  root root system_u:object_r:<span class="term_write">etc_t</span>          /etc/passwd</p>
<p>[root@www ~]# <span class="term_command">chcon –reference=/etc/passwd /var/www/html/index.html</span><br>[root@www ~]# <span class="term_command">ll -Z /var/www/html/index.html</span><br>-rw-r–r–  root root root:object_r:<span class="term_write">etc_t</span> /var/www/html/index.html<br><span class="term_say"># 看看！是否与上面的 /etc/passwd 相同了！不过，这又是错误的安全性本文！</span></p>
<h1 id="先不要急著修改！我们来进行底下的另外一个命令处置看看！"><a href="#先不要急著修改！我们来进行底下的另外一个命令处置看看！" class="headerlink" title="先不要急著修改！我们来进行底下的另外一个命令处置看看！"></a>先不要急著修改！我们来进行底下的另外一个命令处置看看！</h1><p><br><br><br><br><br><a name="restorecon"></a></p>
<p>chcon 是透过直接指定的方式来处理安全性本文的类型数据。那我们知道其实系统默认的目录都有特殊的 SELinux 安全性本文， 举例来说， /var/www/html 原本就是 httpd 可以读取的目录嘛！既然如此，那有没有可以使用默认的安全性本文来还原的方式？ 有的，那就是 restorecon 这玩意儿：</p>
<p><table class="term"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="term"></td></p>
<p><pre>[root@www ~]# <span class="term_command">restorecon [-Rv] 文件或目录</span><br><span class="term_say">选项与参数：<br>-R  ：连同次目录一起修改；<br>-v  ：将过程显示到萤幕上</span></pre></p>
<p><span class="term_hd">范例一：将刚刚错误的 index.html 以默认的安全性本文改正过来</span><br>[root@www ~]# <span class="term_command">restorecon -Rv /var/www/html/index.html</span><br>restorecon reset /var/www/html/index.html context system_u:object_r:<span class="term_write">etc_t</span>:s0-&gt;<br>system_u:object_r:<span class="term_write">httpd_sys_content_t</span>:s0<br><span class="term_say"># 上面这两行其实是同一行喔！表示将 index.html 由 etc_t 改为 httpd_sys_content_t</span><br><br><br><br><br><br>然后回到刚刚图 5.4.2 给他重读一下，嘿嘿！又可以看到正确的内容啦！这个过程完全没有动到 rwx 权限， 因为该权限本来就是对的！而错的部分是在於 SELinux 的安全性本文当中那个类型 (type) 配置错误！ 而配置错误的原因很可能是因为该文件由其他位置复制或移动过来所导致的！因此， 你得要善用 restorecon 以及 chcon 来处理这方面的问题喔！</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux磁盘分区与格式化]]></title>
      <url>http://www.ibmer.info/linux-fdisk.html</url>
      <content type="html"><![CDATA[<div><span class="Apple-style-span" style="font-size: medium;">Windows/dos常用的分区工具：fdisk/partition magic/diskpart</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Linux下常用的分区工具：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">    fdisk/sfdisk:命令行工具，各种版本和环境都能使用，包含在软件包util-linux中</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">    diskdruid:图形化分区工具，只能在安装REDHAT系统时使用。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">下面我们开始实验：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">环境/工具：Fedora 14/256M内存卡；fdisk</span></div><br><div><strong><span class="Apple-style-span" style="font-size: medium;">第一步：fdisk</span></strong></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice ~]#<span class="Apple-style-span" style="color: #f00000;"> fdisk -l /dev/sdb </span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1 <em> 512 = 512 bytes </em></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice ~]# <span class="Apple-style-span" style="color: #f00000;">fdisk /dev/sdb</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): #在输入上面的命令后会出现左边的提示，输入m就会得到一个帮助菜单，如下：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): m </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command action </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   a   toggle a bootable flag </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   b   edit bsd disklabel </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   c   toggle the dos compatibility flag </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   d   delete a partition </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   l   list known partition types </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   m   print this menu </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   n   add a new partition </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   o   create a new empty DOS partition table </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   p   print the partition table </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   q   quit without saving changes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   s   create a new empty Sun disklabel </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   t   change a partition’s system id </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   u   change display/entry units </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   v   verify the partition table </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   w   write table to disk and exit </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   x   extra functionality (experts only) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃help虽然是英文的，可都很简单，在这里不再解释。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#现在，我们正式开始分区的操作：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): <span class="Apple-style-span" style="color: #f00000;">n #新建分区</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command action </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   e   extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   p   primary partition (1-4) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#e/p分别对应扩展分区 /主分区；我们先分四个主分区，每个50M；然后再来增加主分区或扩展分区，看会出现怎样的状况，嘿嘿。</span></div><br><div><span class="Apple-style-span" style="color: #f00000; font-size: medium;">p  #分区类型为主分区</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Partition number (1-4, default 1):<span class="Apple-style-span" style="color: #f00000;"> 1 </span> #分区号，在这里我们依次选择1、2、3、4</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">First sector (2048-496127, default 2048):  #指定分区的起始扇区，一般默认，按enter键即可。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Last sector, +sectors or +size{K,M,G} (2048-496127, default 496127): <span class="Apple-style-span" style="color: #f00000;">+50M</span>  #指定分区的终止扇区，根据前面的提示我们可以做出相应的选择+sectors 或 +size{K,M,G}</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): p  #用p打印出已建好的分区列表</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1  512 = 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#剩下的三个分区的建立操作同上</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#分好四个主分区后的情况如下</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> p </span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1 <em> 512 = 512 bytes </em></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb4          309248      309298          25+  83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#已经建好四个主分区啦，现在我们来看看如果再建主分区或是扩展分区的话会出现怎样的情况：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): <span class="Apple-style-span" style="color: #f00000;">n </span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">You must delete some partition and add an extended partition first </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃看到了吧，不能再建分区啦！要再建分区的话必须删除some分区，再新建一个扩展分区才行。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#现在，我们删掉一个主分区，来新建扩展分区</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> d </span> #删除分区</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Partition number (1-4):<span class="Apple-style-span" style="color: #f00000;"> 4 </span>  #选择要删除分区的分区号，我们选第四个</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> p </span>  #打印，如下，四个分区变成了三个！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1  512 = 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#新建一个扩展分区</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#如果在没有建满三个主分的区的情况下建立扩展分区，相关选项会有些不同。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> n</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command action </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   e   extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   p   primary partition (1-4) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"><span class="Apple-style-span" style="color: #f00000;">e</span>   </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Selected partition 4 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">First sector (309248-496127, default 309248): #enter，默认</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Using default value 309248 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Last sector, +sectors or +size{K,M,G} (309248-496127, default 496127):   #enter，默认，使用剩余空间</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Using default value 496127 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): <span class="Apple-style-span" style="color: #f00000;">p</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1 <em> 512 = 512 bytes </em></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb4          309248      496127       93440    5  Extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃接下来，我们在新建的扩展分区里再新建两个逻辑分区，因为已经有了三个主分区，这里不会再显示是建立逻辑分区还是主分区的提示！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): n </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">First sector (311296-496127, default 311296):  #enter</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Using default value 311296 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Last sector, +sectors or +size{K,M,G} (311296-496127, default 496127): +50M </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): n </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">First sector (415744-496127, default 415744):  #enter</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Using default value 415744 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Last sector, +sectors or +size{K,M,G} (415744-496127, default 496127):  #enter</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Using default value 496127 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): p </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1  512 = 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb4          309248      496127       93440    5  Extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb5          311296      413695       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb6          415744      496127       40192   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃上面的列表，就是我们今天分区的成果啦！接下来保存退出，重启计算机，就可以进行下一步的mkfs操作啦！如果忘记了相关的操作命令，记得按m!!!</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> w  #保存</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">The partition table has been altered! </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Calling ioctl() to re-read partition table. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Syncing disks. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">另：在建好分区后，我们还可以更改相关分区的文件系统类型</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃如，我们要把第二个主分区改成Linux下的交换分区，操作如下</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> t  #更改文件系统类型</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Partition number (1-6):<span class="Apple-style-span" style="color: #f00000;"> 2  #选择第二个分区</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Hex code (type L to list codes):<span class="Apple-style-span" style="color: #f00000;"> L ＃选择要更改的文件系统编码，可以按L来查看相关编码信息</span>。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris        </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 1  FAT12           39  Plan 9          82  Linux swap / So c1  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 2  XENIX root      3c  PartitionMagic  83  Linux           c4  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 3  XENIX usr       40  Venix 80286     84  OS/2 hidden C:  c6  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> …………</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">16  Hidden FAT16    64  Novell Netware  af  HFS / HFS+      fb  VMware VMFS    </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">17  Hidden HPFS/NTF 65  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">18  AST SmartSleep  70  DiskSecure Mult b8  BSDI swap       fd  Linux raid auto </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">1b  Hidden W95 FAT3 75  PC/IX           bb  Boot Wizard hid fe  LANstep        </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">1c  Hidden W95 FAT3 80  Old Minix       be  Solaris boot    ff  BBT            </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">1e  Hidden W95 FAT1 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Hex code (type L to list codes):<span class="Apple-style-span" style="color: #f00000;"> 82 </span>   #查找到linux swap的编码为82</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Changed system type of partition 2 to 82 (Linux swap / Solaris) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): p </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">…………..</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   82  Linux swap / Solaris </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb4          309248      496127       93440    5  Extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb5          311296      413695       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb6          415744      496127       40192   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#最后别忘了保存！如果你须要的话！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#扩展分区不能直接使用，逻辑分区只能建立在扩展分区上！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"><strong>第二步：mkfs</strong>（mkfs时分区的格式最好与fdisk设定的分区格式一致，不然…….）</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">mkfs支持ext2 ext3 vfa msdos jfs reiserfs等文件系统。</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">用法1：<span class="Apple-style-span" style="color: #f00000;">mkfs -t &lt;fstype&gt; &lt;partition&gt;</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例： mkfs -t ext3 /dev/sdb2</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">用法2：<span class="Apple-style-span" style="color: #f00000;">mkfs.&lt;fstype&gt; &lt;partition&gt;</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例：mkfs,vfat /dev/sdb3</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">mke2fs支持ext2/ext3文件系统</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">用法：<span class="Apple-style-span" style="color: #f00000;">mke2fs [-j] &lt;partition&gt;</span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例:mke2fs -j /dev/sdb5</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"># 更多更具体的用法请参照相关命令的man手册</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">下面，接着实验：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例一</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice ~]# <span class="Apple-style-span" style="color: #f00000;">mkfs -t ext3 /dev/sdb1</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">mke2fs 1.41.12 (17-May-2010) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Filesystem label= </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">OS type: Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Block size=1024 (log=0) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Fragment size=1024 (log=0) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Stride=0 blocks, Stripe width=0 blocks </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">12824 inodes, 51200 blocks </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">2560 blocks (5.00%) reserved for the super user </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">First data block=1 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Maximum filesystem blocks=52428800 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">7 block groups </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8192 blocks per group, 8192 fragments per group </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">1832 inodes per group </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Superblock backups stored on blocks: </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8193, 24577, 40961 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Writing inode tables: done                            </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Creating journal (4096 blocks): done </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Writing superblocks and filesystem accounting information: done </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">This filesystem will be automatically checked every 34 mounts or </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">180 days, whichever comes first.  Use tune2fs -c or -i to override. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例二：</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice ~]#<span class="Apple-style-span" style="color: #f00000;"> fdisk /dev/sdb</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help): t </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Partition number (1-6): 6 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Hex code (type L to list codes): L </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris        </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 1  FAT12           39  Plan 9          82  Linux swap / So c1  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 2  XENIX root      3c  PartitionMagic  83  Linux           c4  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 3  XENIX usr       40  Venix 80286     84  OS/2 hidden C:  c6  DRDOS/sec (FAT- </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 4  FAT16 &lt;32M      41  PPC PReP Boot   85  Linux extended  c7  Syrinx         </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 5  Extended        42  SFS             86  NTFS volume set da  Non-FS data    </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 6  FAT16           4d  QNX4.x          87  NTFS volume set db  CP/M / CTOS / . </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> 7  HPFS/NTFS       4e  QNX4.x 2nd part 88  Linux plaintext de  Dell Utility   </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">………</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Hex code (type L to list codes): <span class="Apple-style-span" style="color: #f00000;">7</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Changed system type of partition 6 to 7 (HPFS/NTFS) </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> p</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk /dev/sdb: 254 MB, 254017536 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">8 heads, 61 sectors/track, 1016 cylinders, total 496128 sectors </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Units = sectors of 1 <em> 512 = 512 bytes </em></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Sector size (logical/physical): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">I/O size (minimum/optimal): 512 bytes / 512 bytes </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Disk identifier: 0x00000000 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">   Device Boot      Start         End      Blocks   Id  System </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb1            2048      104447       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb2          104448      206847       51200   82  Linux swap / Solaris </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb3          206848      309247       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb4          309248      496127       93440    5  Extended </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb5          311296      413695       51200   83  Linux </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/dev/sdb6          415744      496127       40192    7  HPFS/NTFS </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Command (m for help):<span class="Apple-style-span" style="color: #f00000;"> w </span></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">The partition table has been altered! </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Calling ioctl() to re-read partition table. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Syncing disks. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice ~]# <span class="Apple-style-span" style="color: #f00000;">mkfs.ntfs /dev/sdb6</span> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Cluster size has been automatically set to 4096 bytes. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Initializing device with zeroes: 100% - Done. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Creating NTFS volume structures. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">mkntfs completed successfully. Have a nice day. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> <em>*第三部：挂载</em></span></div><br><div><span class="Apple-style-span" style="font-size: medium;">挂载：mount</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例：mount /dev/sdb1 /mnt /sdb1</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">卸载：umonut</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">例：umount /dev/sdb1</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">/etc/fstab:</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">可以把要挂载的分区写入/etc/fstab，这样在开机的时候就能自动挂载啦！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">＃关于mount/nmout具体用法请参照man手册，/etc/fstab内的挂载格式，参数等在该文件内都有相关的说明。这里只做一个简单的测试，不再累述！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;"> </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice /]# cd /mnt </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice mnt]# mkdir sdb </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice mnt]# mount /dev/sdb1 /mnt/sdb </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice mnt]# cd /mnt/sdb </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice sdb]# echo “Hello! I am here” &gt; test.txt </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice sdb]# cat test.txt </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">Hello! I am here </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice sdb]# cd .. </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice mnt]# umount /dev/sdb1 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice mnt]# cd /mnt/sdb </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice sdb]# ls -l </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">total 0 </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#刚做的文件系统已经能正常使用啦！现在再来看看挂载没有经过mkfs的分区，会怎样！</span></div><br><div><span class="Apple-style-span" style="font-size: medium;">[root@novice sdb]# mount /dev/sdb2 /mnt/sdb </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">mount: unknown filesystem type ‘LVM2_member’ </span></div><br><div><span class="Apple-style-span" style="font-size: medium;">#不解释了喔！</span></div>]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rpm-relocate]]></title>
      <url>http://www.ibmer.info/rpm-relocate.html</url>
      <content type="html"><![CDATA[<p>RPMパッケージ管理</p>
<p>はじめに</p>
<p>RPMパッケージのインストール、更新、削除といった管理についてのメモです。<br>手順メモ<br>インストール先を変えたい<br>再配置可能なパッケージのインストール先を変更する</p>
<p>–prefixオプションでインストール先ディレクトリを指定します。</p>
<p><strong># rpm -ivh –prefix=/opt/pkgs netcdf-4.3.2-2.el6.x86_64.rpm</strong></p>
<p>この場合、デフォルトでは/usr下にインストールされるパッケージを/opt/pkgs下にインストールします。</p>
<p>再配置可能なパッケージとは、SPECファイルでPrefix属性が定義されているものです。<br>再配置不可能な場合、</p>
<p><strong># rpm -ihv –prefix=/opt/local netcdf-4.3.2-1.el6.x86_64.rpm</strong><br>エラー: パッケージ netcdf は再配置できません<br>#</p>
<p>とエラーになります。</p>
<p>再配置不可能なパッケージのインストール先を変更する</p>
<p><strong># rpm -ihv –relocate /usr=/opt/local –badreloc netcdf-4.3.2-1.el6.x86_64.rpm</strong></p>
<p>再配置可能でないパッケージも–relocateオプションと–badrelocオプションでインストール先を変更することができます。<br>依存関係<br>依存関係を調べる</p>
<p>$ rpm -qpR ruby-2.1.4-1.el6.x86_64.rpm<br>/usr/bin/env<br>/usr/bin/pkg-config<br>/usr/bin/ruby<br>coreutils<br>db4<br>gdbm<br>glibc<br>ld-linux-x86-64.so.2()(64bit)<br>:</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> aix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PostgresSQL基本认识]]></title>
      <url>http://www.ibmer.info/postgressql-basic.html</url>
      <content type="html"><![CDATA[<p>—基本命令——————————————————————————————————————————</p>
<p>(1)バージョン確認： SELECT version();<br>パッケージ確認：rpm -qa | grep Postgres<br>postgresql.conf確認： SELECT * FROM pg_settings</p>
<p>&nbsp;</p>
<p>(2)ifup、ifdown启用、禁用网卡的命令。<br>在linux系统中，实时地手动修改一些网络接口参数，可以利用ifconfig命令来实现，如果是要直接以配置文件，即在：/etc/sysconfig/network-scripts中的ifcfg-ethx等文件的设置参数来启动的话，那就得要通过ifdown或 ifup来实现了。</p>
<p>复制代码 代码示例:<br>[root@jbxue ~]# ifup {interface}<br>[root@jbxue ~]# ifdown {interface}<br>[root@jbxue ~]# ifup eth0</p>
<p>这两个程序其实是script而已，它会直接到 /etc/  sysconfig/network-scripts目录下搜索对应的配置文件，例如ifup  eth0，它会找出ifcfg-eth0这个文件的内容，然后加以设置。</p>
<p>(3)RPM确认<br>[root@DISS010 ~]# rpm -qa | grep postgres<br>postgresql-libs-8.4.20-1.el6_5.i686<br>postgresql-8.4.20-1.el6_5.i686<br>postgresql-odbc-08.04.0200-1.el6.i686<br>postgresql-docs-8.4.20-1.el6_5.i686<br>postgresql-server-8.4.20-1.el6_5.i686</p>
<p>(4)RPM删除<br>[root@DISS010 ~]# rpm -e postgresql-8.4.20-1.el6_5.i686 postgresql-odbc-08.04.0200-1.el6.i686 postgresql-docs-8.4.20-1.el6_5.i686 postgresql-server-8.4.20-1.el6_5.i686</p>
<p>[root@DISS010 ~]# rpm -qa | grep postgres<br>postgresql-libs-8.4.20-1.el6_5.i686</p>
<p>(5)用户删除<br>[root@DISS010 ~]# userdel postgres<br>[root@DISS010 ~]# id postgres<br>id: postgres: そのようなユーザは存在しません<br>[root@DISS010 ~]# cat /etc/group | grep postgres</p>
<p>(6)查找pg_ctl<br>find / -name pg_ctl<br>/usr/pgsql-9.3/bin/pg_ctl</p>
<p>(7)配置环境变量<br>PATH=/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin<br>PATH=/usr/lib/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin<br>export PATH=$PATH:/usr/pgsql-9.3/bin/pg_ctl<br>export PGLOG=$PGDATA/pgstartup.log<br>export PGUSER=postgres</p>
<p>(8)初始化db实例<br>-bash-4.1$ pwd<br>/var/lib/pgsql<br>-bash-4.1$ echo $PGDATA<br>/var/lib/pgsql/9.3/data<br>initdb -D $PGDATA -U postgres –encoding=UTF8 –no-locale</p>
<p>(9)配置pg_hba.conf，设置外部ip可访问权限<br>vi $PGDATA/pg_hba.conf<br>host all all 192.168.0.0/24 md5</p>
<p>(10)启动Postgres<br>pg_ctl -D $PGDATA -l $PGLOG start</p>
<p>(11)进入客户端<br>psql</p>
<p>(12)停止Postgres<br>pg_ctl stop -m fast</p>
<div class="wiki-content">

<p>(13)导出/恢复用户</p>
<p>Dump all roles on the source database / computer with</p>
<p><div class="preformatted panel" style="border-width: 1px;"></div></p>
<p><div class="preformattedContent panelContent"></div></p>
<p><pre>pg_dumpall -g &gt; roles.sql<br></pre><br></p></div><br><br>Restore on the target database / computer with:<p></p>
<p><div class="preformatted panel" style="border-width: 1px;"></div></p>
<p><div class="preformattedContent panelContent"></div></p>
<p><pre>psql -U postgres -f roles.sql<br></pre><br><br><br><br>—Error错误处理——————————————————————————————————————</p>
<p>(1)Error<br>psql.bin: FATAL:  role “pgsql” does not exist<br>环境变量添加<br>export PGUSER=postgres</p>
<p>—–数据库备份——————————————————————————————————————–</p>
<p>PostgreSQL数据库版本</p>
<p>psql –version<br>psql (PostgreSQL) 9.1.3</p>
<p>一、数据库备份</p>
<p>1、备份数据库结构</p>
<p>su - postgres<br>pg_dump -Fc -s -f testdbschema.sql testdb</p>
<p>2、备份数据库数据</p>
<p>su - postgres<br>pg_dump -Fc -a -f testdbdata.sql testdb</p>
<p>3、备份数据库结构和数据</p>
<p>su - postgres<br>pg_dump -Fc -f testdbschemadata.sql testdb</p>
<p>4、备份数据库中指定表结构</p>
<p>pg_dump -Fc -s -t citycode -f citycode_schema.sql testdb</p>
<p>5、备份数据库中指定表数据</p>
<p>pg_dump -Fc -a -t citycode -f citycode_data.sql testdb</p>
<p>.6、备份数据库中指定表（结构和数据）</p>
<p>pg_dump -Fc -t citycode -f citycode_schemadata.sql testdb</p>
<p>二、删除数据库</p>
<p>su - postgres</p>
<p>dropdb testdb</p>
<p>三、恢复数据库</p>
<p>1、创建新数据库testdb</p>
<p>su - postgres</p>
<p>createdb testdb;</p>
<p>2、 恢复数据结构（only schema）</p>
<p>su - postgres</p>
<p>pg_restore -s -d testdb testdbschema.sql</p>
<p>3、恢复数据库数据（only data）</p>
<p>su - postgres</p>
<p>pg_restore -a -d testdb testdbdata.sql</p>
<p>4、恢复数据库结构和数据（schema and data）</p>
<p>su - postgres</p>
<p>pg_restore -d testdb testdbschemadata.sql</p>
<p>5、指定表数据恢复</p>
<p>1）删除表</p>
<p>psql testdb</p>
<p>DROP TABLE citycode;</p>
<p>2）恢复表结构</p>
<p>pg_restore -s -t citycode -d testdb citycode_schema.sql</p>
<p>3）恢复表数据</p>
<p>pg_restore -a -t citycode -d testdb citycode_data.sql</p>
<p>4）恢复表（结构和数据）</p>
<p>pg_restore -t citycode -d testdb citycode_schemadata.sql</p>
<p>以上备份恢复相关操作可用于静态（无数据增长）数据库。</p>
<p>重要提示：pg_restore 可用来恢复pg_dump命令以 (Fc\Ft)格式备份的数据文件。执行pg_dump备份命令时若无此格式参数声明，pg_restore 恢复时可能出现错误提示“pg_restore: [archiver] input file does not appear to be a valid archive”。</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Database </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python代码风格建议]]></title>
      <url>http://www.ibmer.info/python-code-style.html</url>
      <content type="html"><![CDATA[<p>python 以其结构严格著称，同时也以其命名规范散漫出名，算乱无规矩的命名尤其给开发人员带来理解上的误区。</p>
<div>尤其像python、ruby动态语言，由于在运行期随时可能出现方法或者属性的增减，规则的命名尤其重要。</div><br><div></div><br><div>ruby语言本身定义的语法规则较为随意，但却不乏一一对应的隐含规则，使人一目了然。其命名规则甚至渗透进了语言本身的规范当中</div><br><div>在命名规则这一点上python显得没规没距。需要逐步养成一个好的编码命名规范。</div><br><div></div><br><div>本文从各大站点文章中搜集了一些代码风格，命名规范。便于学习参考。</div><br><div></div><br><div></div><br><div>代码风格：</div><br><div></div><br><div><br><br>1.  使用空格来表示缩进，而不要使用制表符tab，请勿将两者混用<br>2.  函数间换行至少一行<br>3.  类之间换行至少两行<br>4.  dict、list、tuple、参数列表时，应该在逗号，前添加一个空格<br>5.  dict中key之后的冒号：应在value与冒号：之间添加空格，而不是：与key之前间<br>6.  较长代码（大于79chars）使用反斜杠\换行。换行后新行的起始处应该与前一个分隔符对齐（是参数换行则与左括号（对齐<br>7.  import位于module comments 与 docstring 之后，常量声明之前<br>8.  3.0一下版本的代码文件建议以latin字符编码。3.0以上则推荐utf-8<br>9.  代码中有操作符运算，请注意优先级，优先的操作紧缩，或者加括号<br>10.  等号左右两边请勿加空格<br>11.  尽量不要将多行代码放在同一行<br>12.  少使用inline comments（行后注释）<br>13.  block comments （用#开头的多行函数注释），保持与目标函数 相同的缩进<br>14.  docstring ，开头一行写上返回值，接下来一行写函数功能描述，后可按照格式&gt;&gt;&gt;func(arg1, arg2, arg3) /r 返回值。以便于测试<br>15.  另外，若要使用subversion，cvs等源代码管理工具。可以在函数的docstring 之后，code之前 写上<br><br>    1.  <strong>version</strong> = “<span id="MathJax-Element-1-Frame" class="MathJax"><span id="MathJax-Span-1" class="math" style="width: 13.661em; display: inline-block;"><span style="display: inline-block; position: relative; width: 10.828em; height: 0px; font-size: 126%;"><span style="position: absolute; clip: rect(1.914em, 1000em, 2.97em, -0.477em); top: -2.778em; left: 0em;"><span id="MathJax-Span-2" class="mrow"><span id="MathJax-Span-3" class="mi" style="font-family: MathJax_Math; font-style: italic;">R</span><span id="MathJax-Span-4" class="mi" style="font-family: MathJax_Math; font-style: italic;">e</span><span id="MathJax-Span-5" class="mi" style="font-family: MathJax_Math; font-style: italic;">v</span><span id="MathJax-Span-6" class="mi" style="font-family: MathJax_Math; font-style: italic;">i</span><span id="MathJax-Span-7" class="mi" style="font-family: MathJax_Math; font-style: italic;">s</span><span id="MathJax-Span-8" class="mi" style="font-family: MathJax_Math; font-style: italic;">i</span><span id="MathJax-Span-9" class="mi" style="font-family: MathJax_Math; font-style: italic;">o</span><span id="MathJax-Span-10" class="mi" style="font-family: MathJax_Math; font-style: italic;">n</span><span id="MathJax-Span-11" class="mo" style="font-family: MathJax_Main; padding-left: 0.278em;">:</span><span id="MathJax-Span-12" class="mn" style="font-family: MathJax_Main; padding-left: 0.278em;">16</span><span id="MathJax-Span-13" class="mi" style="font-family: MathJax_Math; font-style: italic;">d</span><span id="MathJax-Span-14" class="mi" style="font-family: MathJax_Math; font-style: italic;">d</span><span id="MathJax-Span-15" class="mn" style="font-family: MathJax_Main;">63848921</span></span></span></span></span></span>“<br></div><br><div></div><br><div>命名规则：</div><br><div><br><br>1.  尽量少用 ‘l’ (lowercase letter el), ‘O’ (uppercase letter oh), or ‘I’ (uppercase letter eye) 单字母作为变量的命名.——-no l,I,O<br>2.  包和模块应该用短且全小写字母（Modules should have short, all-lowercase names.）:thismoduleisnew<br>3.  class name 则建议用CapWords（首字母大写）的形式命名:NewClassName<br>4.  Exception类则用以Error结尾的字符串命名为宜: NewError<br>5.  全局变量尽量只是设计用于模块内使用，并且可以用import *时，包内的<strong>all</strong>机制来除去全局变量<br>6.  函数名（function name） 尽量都用小写且单词间以_(下划线)连接，另外，大小混合的mixedCase植被允许用于传统类中。function_name(arg1…)<br>7.  函数和方法参数（function and method arguments）,self作为实例方法的第一个参数，cls作为类方法的第一个参数，倘若参数名与关键字相同，为了避讳，则应该加个下划线<br>8.  方法名&amp;类实例的属性（method name &amp; instance variable）方法名规则与函数名相同，类实例私有属性 和 类实例的私有方法以单个下划线开头_private_fucntion<em>name(self)<br>9.  常量;全大写，单词间以</em>下弧线间隔:THIS_IS_CONSTANT_VAR<br>10.  面向对象设计建议：<br><br>    1.  若对类实例中的属性是设置成public的好还是private好，可以考虑先设置成private，其修改成本更低。<br>    2.  private不能被第三方使用，因为随时有可能被删除、废弃<br>    3.  public属性不能用下划线开头<br>    4.  避免属性使用大运算量操作<br>    5.  倘若不想被子类继承的属性，应该用双下划线开头，且最后没有下划线。这样会启动python的命名识别矫正处理算法，保证不被继承<br></div><br><div></div><br><div></div><br><div><br><br>1.  joined_lower 可以是函数名 方法名 属性名<br>2.  ALL_CAPS 是常量<br>3.  StudlyCaps是类名<br>4.  camelCase 只有在预先订制好的命名规范中使用<br>5.  属性 interface，_internal, <strong>private<br>6.  尽量避免</strong>private形式，下面两个连接解释了为什么python中没有private声明<br><div> <a href="https://www.python.org/dev/peps/pep-0008/#naming-conventions" target="_blank" rel="external">https://www.python.org/dev/peps/pep-0008/#naming-conventions</a></div><br></div><br><div></div><br><div></div><br><div></div><br><div><br><div class="section"><br><br>## 反斜杠替换<br><br>如果一个语句必须占用多行，那么也可以在前一行的末尾添加反斜杠 () 以表明将在下一行继续输入该语句。请勿在反斜杠字符后面使用空格字符（具体来说就是制表符或空格）。例如：<br><br>    text =  “This is a test of a long lines” \<br>    “ continuing lines here.”<br>    print text<br>    =&gt; This is a test of a long lines continuing lines here.<br><br></div><br></div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jython </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WebSphere & TAM embedded PD.jar]]></title>
      <url>http://www.ibmer.info/websphere-tam-pdjar.html</url>
      <content type="html"><![CDATA[<h2 id="echnote-FAQ"><a href="#echnote-FAQ" class="headerlink" title="echnote (FAQ)"></a>echnote (FAQ)</h2><div class="ibm-container-body"><br><br>## Question<br><br>What versions of TAM’s PD.jar are compatible with various versions of WAS<br><br>## Cause<br><br><div class="ibm-domino-rtf"><br><br>IBM WebSphere upgrade causes an incorrect version of PD.jar to be installed.<br><br></div>

<h2 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h2><div class="ibm-domino-rtf"><br><br>IBM WebSphere<sup>®</sup> Application Server includes the ISAM (TAM) PD.jar file in its distribution.<br><br>This can be problematic or confusing when the Policy Server is at a different version.<br><br>In general there is quite a bit of flexibility in using various PD.jar files with WebSphere. The main issue<br>is what version of the PD.jar will work with what versions of TAM’s Policy Server and Authorization Server.<br>Other considerations include WPM, JACC and WebSphere 8. WAS 8 introduced some changes<br>that required changes to the PD.jar. Therefore it is more restricted to certain versions of the PD.jar.<br>WAS 8 requires a TAM PD.jar level of 6.1.0.7 or 6.1.1.3 as a minimum. JACC is also included in WAS<br>and depends on the PD.jar. WPM is not included with WAS but also depends on the PD.jar.<br><br>In general it is recommended that the PD.jar be at the same level as the TAM server. Since this is<br>not always possible the following tables will help serve as a guideline in determining which version to use .<br><br>The following chart shows key WAS releases and the versions of the PD.jar included.<br><br><div align="center"><br><table class="ibm-data-table ibm-alternate" border="0" summary="Data table with alternating rows example" rules=""><br><tbody><br><tr valign="top"><br><th width="218"><br><div align="center">WebSphere Application Server ND</div></th><br><th width="221"><br><div align="center">ISAM / Tivoli Access Manager PD.jar</div></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><br><div align="center">7.0 Fix pack 29</div></th><br><th bgcolor="#FFFFFF" width="221"><br><div align="center">6.1.0.7</div></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=1" alt=""></th><br><th bgcolor="#FFFFFF" width="221"><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=1" alt=""></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><br><div align="center">8.0</div></th><br><th bgcolor="#FFFFFF" width="221"><br><div align="center">6.1.0.5</div></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><br><div align="center">8.0 Fix Pack 01</div></th><br><th bgcolor="#FFFFFF" width="221"><br><div align="center">6.1.0.7</div></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=1" alt=""></th><br><th bgcolor="#FFFFFF" width="221"><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=1" alt=""></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><br><div align="center">8.5</div></th><br><th bgcolor="#FFFFFF" width="221"><br><div align="center">6.1.0.7</div></th><br></tr><br><tr valign="top"><br><th bgcolor="#FFFFFF" width="218"><br><div align="center">8.5 Fix Pack 02</div></th><br><th bgcolor="#FFFFFF" width="221"><br><div align="center">6.1.0.7</div></th><br></tr><br></tbody><br></table><br></div><br>The following chart show key WAS releases and the TAM server versions supported<br><br>Product Versions that PD.jar functions against.<br><table class="ibm-data-table ibm-alternate" border="0" summary="Data table with alternating rows example" rules=""><br><tbody><br><tr valign="top"><br><td width="117"><br><div align="center">PD.jar</div></td><br><td width="314"><br><div align="center">WebSphere Application Server ND<br>Version</div></td><br><td width="172"><br><div align="center">ISAM/TAM<br>Policy Server</div></td><br><td width="172"><br><div align="center">TAM Local Mode DB</div></td><br></tr><br><tr valign="top"><br><td bgcolor="#FFFFFF" width="117"><br><div align="center">6.1.0.5</div></td><br><td bgcolor="#FFFFFF" width="314"><br><div align="center">6.1 / 7.x</div></td><br><td bgcolor="#FFFFFF" width="172"><br><div align="center">6.1 / 6.1.1</div></td><br><td bgcolor="#FFFFFF" width="172"><br><div align="center">6.1 / 6.1.1</div></td><br></tr><br><tr valign="top"><br><td bgcolor="#FFFFFF" width="117"><br><div align="center">6.1.0.7</div></td><br><td bgcolor="#FFFFFF" width="314"><br><div align="center">7.x / 8.x</div></td><br><td bgcolor="#FFFFFF" width="172"><br><div align="center">6.1 / 6.1.1 / 7.0</div></td><br><td bgcolor="#FFFFFF" width="172"><br><div align="center">6.1 / 6.1.1</div></td><br></tr><br></tbody><br></table><br><span style="text-decoration: underline;">Back ground information:</span><br><br>The PD.jar file allow java runtimes to deploy a set of classes to an appropriate resource.<br>Jar files are compressed so you can download a complete application with one download.<br><br>The PD.jar file had a manifest file located in the path of the META-INF/MANIFEST.MF<br>The MANIFEST.MF can be extracted by any standard zip software including “jar” for Windows.<br><br>On Unix/Linux the PD.jar version can be viewed by using the zcat command as below:-<br>For this document I am going to use the zcat command ( from Unix/linux) and available from cygwin for Windows,, i.e zcat PD.jar<br><br><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=2" alt=""><br><br>To continue this example the above PD.jar was available but after an upgrade of WAS you can see that an older version of<br>PD.jar was inserted and therefore our customer should contact IBM WebSphere for the latest version so it can be inserted<br>into the WebSphere installation/ upgrade mechanism.<br><br><img src="http://www-01.ibm.com/support/docview.wss?uid=swg21646372&amp;aid=3" alt=""><br><br><strong><span style="text-decoration: underline;">Note: </span></strong> <strong>The PD.jar the</strong> <strong> can not be downloaded independent of a patch. </strong><br><br>All of the above PD.jar need to be upgraded to the latest version of TAM PD.jar to obtain the latest resolved issues:<br>They can be downloaded from IBM’s Fix Central :-<br><em>www.</em> <strong><em>ibm</em></strong> <em>.com/support/</em> <strong><em>fixcentral</em></strong> <em>/</em>‎<br><br>For WAS installation please contact your local WebSphere Support for to obtain the latest level using WebSphere installation mechanism</div><br></div>]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[云技术术语表(中英日)]]></title>
      <url>http://www.ibmer.info/cloud-tech-info.html</url>
      <content type="html"><![CDATA[<p><span id="result_box" class="short_text" lang="en"><span class="hps">バックボーン backbone 骨干</span></span></p>
<p>シンメトリック　Symmetric</p>
<p>symetric常用指相对来说是“虚”的东西的对称性，比如对称加密算法等等<br>symetrical则指相对来说是“实”的东西的对称性，比如说轴对称，左右对称等。</p>
<p>マルチパス　<span id="result_box" class="short_text" lang="en"><span class="hps">Multipath　多路径</span></span></p>
<p>マルチテナント　<span id="result_box" class="short_text" lang="en"><span class="hps">Multi-tenant</span></span>　多租户单实例</p>
<p>トラフィック　Traffic　流量</p>
<p>カプセル　Capsule　<span class="op_dict_text2">压缩</span></p>
<p>ボロケードbrocade japan</p>
<p>ジュニパーネットワークスjuniper</p>
<p>プロトコル　<span id="result_box" class="short_text" lang="en"><span class="hps">Protocol</span></span></p>
<p>スパニングツリー　<span id="result_box" class="short_text" lang="en"><span class="hps">Spanning Tree</span></span>　生成树</p>
<p>TRILL (Transparent Interconnection of Lots of Links ) 多链接透明互联(TRILL)</p>
<p>ファブリックパス FabricPath 二层多路径转发技术</p>
<p>オーバーレイ　<span id="result_box" class="short_text" lang="en"><span class="hps">Overlay </span></span></p>
<p>マイグレーション　<span id="result_box" class="short_text" lang="en"><span class="hps">Migration</span></span>　迁移</p>
<p>オンプレミス　<em>On-Premise</em>　专属（私有云计算）</p>
<p>マルチキャスト　<span id="result_box" class="short_text" lang="en"><span class="hps">Multicast</span></span>　组播，多播</p>
<p>アップリンク <span id="result_box" class="short_text" lang="en"><span class="hps">Uplink</span></span> 上行</p>
<p>ダウンリンク　<span id="result_box" class="short_text" lang="en"><span class="hps">Downlink</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>下行</span></span></p>
<p><span id="result_box" class="short_text" lang="en"><span class="hps"><span id="result_box" class="short_text" lang="ja"><span>アルゴリズム</span></span> Algorithm</span></span> 算法</p>
<p>バーチャルルーター　<span id="result_box" class="short_text" lang="en"><span class="hps">Virtual</span> <span class="hps">router</span></span></p>
<p>ブラックリスト　<span id="result_box" class="short_text" lang="en"><span class="hps">Blacklist</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>黑名单</span></span></p>
<p>コンテキスト　<span id="result_box" class="short_text" lang="en"><span class="hps">Context</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>上下文</span></span></p>
<p>アプローチ　<span id="result_box" class="short_text" lang="en"><span class="hps">Approach</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>途径</span></span></p>
<p>アイソレーション　<span id="result_box" class="short_text" lang="en"><span class="hps">Isolation　<span id="result_box" class="short_text" lang="zh-CN"><span>隔离</span></span></span></span></p>
<p>POC</p>
<p>Proof of Conceptの略で、概念実証のこと。これは新たな概念やアイデアの実現可能性を示すために、簡単かつ不完全な実現化（または概要）を行うこと。あるい は、原理のデモンストレーションによって、ある概念や理論の実用化が可能であることを示すこと。概念実証は一般に完全に機能するプロトタイプへと至る前段 階と見なされる。資金を提供する側にとってはリスクを低減させる手段であり、資金提供を受ける側にとってはより多くの資金を提供してもらう手段である。</p>
<p><img src="http://www.keyman.or.jp/_.gif" alt="">サードパーティ　<span id="result_box" class="short_text" lang="en"><span class="hps">Third-party</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>第三者</span></span></p>
<p>RPC（Remote Procedure Call Protocol）</p>
<p>XML-RPC（Remote Procedure Call Protocol）</p>
<p>&nbsp;</p>
<p>リダイレクト　<span id="result_box" class="short_text" lang="en"><span class="hps">Redirect</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>重定向</span></span></p>
<p>ターミナル　<span id="result_box" class="short_text" lang="en"><span class="hps">Terminal　</span></span></p>
<p>NETCONF是面向连接的</p>
<p>IETF在2003年5月成立了Netconf工作组，该工作组主要是为了提出一个全新的基于XML的网络配置（NETCONF）协议而成立的。该工作组已于2006年12月通过了NETCONF协议的基本标准RFC4741-4744。</p>
<p>NETCONF 协议分成四层：内容层、操作层、RPC层、通信协议层。</p>
<p>リクエスト　<span id="result_box" class="short_text" lang="en"><span class="hps">Request</span></span>　<span id="result_box" class="short_text" lang="zh-CN"></span></p>
<p>レスポンス　<span id="result_box" class="short_text" lang="en"><span class="hps">Response</span></span></p>
<p>コントローラ　<span id="result_box" class="short_text" lang="en"><span class="hps">Controller</span></span></p>
<p>スケーラブル　<span id="result_box" class="short_text" lang="en"><span class="hps">Scalable</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>可扩展性</span></span></p>
<p>プッシュ　Push</p>
<p>カーネル　<span id="result_box" class="short_text" lang="en"><span class="hps">Kernel　<span id="result_box" class="short_text" lang="zh-CN"><span>核心</span></span>　<span id="result_box" class="short_text" lang="en"></span></span></span></p>
<p>レプリケーション　<span id="result_box" class="short_text" lang="en"><span class="hps">Replication</span></span></p>
<p>ベアメタル　<span id="result_box" class="short_text" lang="en"><span class="hps">Bare-metal</span></span>　<span id="result_box" class="short_text" lang="zh-CN"><span>裸机</span></span></p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[云技术知识:Cisco的FabricPath]]></title>
      <url>http://www.ibmer.info/cloud-fabric.html</url>
      <content type="html"><![CDATA[<p>1）什么是FabricPath？</p>
<p>FabricPath是思科Nexus交换机上的一项特性，能够实现二层多路径数据转发。FabricPath能够在二层环境实现类似三层的路由功能，帮助虚拟化数据中心网络实现平滑扩展。</p>
<p>2）FabricPath有哪些好处？</p>
<p>FabricPath网络不再需要运行生成树协议（STP），没有链路被阻断，大大增加了网络传输带宽，很好地支持了服务器之间迅猛增加的横向流量。同时，FabricPath能够实现类似三层的路由功能，支持二层网络的平滑扩展。</p>
<p>3）FabricPath与现有二层交换冲突吗？</p>
<p>FabricPath的前提是不破坏现有的二层交换行为，FabricPath网络对已部署的接入设备来说是一个透明连接。</p>
<p>4）如何部署FabricPath？</p>
<p>在支持FabricPath的设备上将端口配置为FabricPath模式，系统会自动完成地址分配、路由建立等行为，无需手动干预。</p>
<p>5）什么是TRILL？</p>
<p>为了实现二层多路径功能，IETF在RFC5556中定义了一套方法，命名为Transparent Interconnection of Lots of Links，又名TRILL。</p>
<p>6）FabricPath是私有协议吗？</p>
<p>FabricPath是Cisco的市场词汇，用来表示思科的二层多路径技术，所以，FabricPath不是一项私有协议，但它是思科的私有技术实现。</p>
<p>7）FabricPath同TRILL的关系？</p>
<p>Cisco在TRILL标准制定过程中参与极深，并且积极推动TRILL的最终成型。FabricPath是TRILL正式标准化之前，Cisco推向市场的“Pre-Standard”技术，基本内容与TRILL相同， 增加了“基于会话的MAC地址学习”、“Vpc+”和“多重拓扑”等高级功能。FabricPath架构与TRILL完全兼容，Cisco承诺FabricPath平台将全面支持TRILL协议，TRILL正式标准化之后，通过软件升级，现有FabricPath设备能够与标准的TRILL交换机互联互通。</p>
<p>8）什么设备能够支持FabricPath？</p>
<p>2010年Cisco在Nexus 7000交换机上发布了一块支持FabricPath的32口万兆光纤板卡，以及相应的软件。未来，FabricPath技术会扩展到更多的Nexus 7000和Nexus 5000交换机上。</p>
<p>9）市场上还有那些类似FabricPath的解决方案？</p>
<p>目前没有完全相同的产品，Juniper的QFabric在二层扩展方面与FabricPath类似，但QFabric是一个私有架构，目前也没有开放的时间表。</p>
]]></content>
      
        <categories>
            
            <category> Salesforce </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Salesforce </tag>
            
            <tag> cloud </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WAS nd v8.5安装笔记]]></title>
      <url>http://www.ibmer.info/was-nd-install-log.html</url>
      <content type="html"><![CDATA[<p>1.IIM生产response文件</p>
<p><span class="ph cmd">Run the command to record a response file for the <span class="keyword">IBM</span> product installation. This command uses the <samp class="ph codeph">-skipInstall <var class="keyword varname">agentDataLocation</var></samp> argument. This argument records the installation commands without installing the <span class="keyword">IBM</span> product. Substitute your own file name and location for the response file.</span> Verify that the file paths that you enter exist. <span class="keyword">Installation Manager</span> does not create directories for the response file.</p>
<ul>
<li>Windows:<kbd class="ph userinput"> IBMIM.exe -record <var class="keyword varname">responseFile</var> -skipInstall <var class="keyword varname">agentDataLocation</var></kbd></li>
<li>Linux, UNIX, and the OS X operating system: <kbd class="ph userinput">./IBMIM -record <var class="keyword varname">responseFile</var> -skipInstall <var class="keyword varname">agentDataLocation</var></kbd><br><table class="table" border="1" summary="" frame="border" rules="all" cellspacing="0" cellpadding="4"><caption><span class="tablecap">Table 1. <samp class="ph codeph">-record</samp> commands by operating system</span></caption><br><thead class="thead" align="left"><br><tr class="row" valign="bottom"><br><th id="d30992e291" class="entry" valign="bottom" width="19.587628865979383%">Operating System</th><br><th id="d30992e293" class="entry" valign="bottom" width="80.41237113402062%">Command</th><br></tr><br></thead><br><tbody class="tbody"><br><tr class="row"><br><td class="entry" headers="d30992e291 " valign="top" width="19.587628865979383%">Windows</td><br><td class="entry" headers="d30992e293 " valign="top" width="80.41237113402062%"><kbd class="ph userinput">IBMIM.exe -record c:\response_files\install_product.xml -skipInstall c:\skipInstall\IBM_product</kbd></td><br></tr><br><tr class="row"><br><td class="entry" headers="d30992e291 " valign="top" width="19.587628865979383%">Linux, UNIX, and the OS X operating system</td><br><td class="entry" headers="d30992e293 " valign="top" width="80.41237113402062%"><kbd class="ph userinput">./IBMIM -record /response_files/install_product.xml -skipInstall skipInstall/IBM_product</kbd></td><br></tr><br></tbody><br></table><br>&nbsp;</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[simple_html_dom使用小结]]></title>
      <url>http://www.ibmer.info/simple-html-dom.html</url>
      <content type="html"><![CDATA[<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff;"></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53;"><span style="font-family: Arial, Helvetica, simsun, u5b8bu4f53; line-height: 25px;"> 简单范例</span></div><br></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff;"></div></p>
<p><pre style="padding: 2px; border: 1px solid #888888;"><span style="line-height: 25px; color: #666600;">&lt;?</span><span style="line-height: 25px;">php</span><br><span style="line-height: 25px;">include </span><span style="line-height: 25px; color: #008800;">“simple_html_dom.php”</span><span style="line-height: 25px; color: #666600;">;</span></pre></p>
<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Create DOM from URL or file</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">$html <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><strong><span style="line-height: 21px; color: #000000;">file_get_html</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘<a href="http://www.ibmer.info/">http://www.ibmer.info/</a>‘</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">);</span></span></p>
<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Find all images <wbr></span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000088;">foreach</span><span style="line-height: 21px; color: #666600;">(</span><span style="line-height: 21px; color: #000000;">$html</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘img’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #000088;">as</span><span style="line-height: 21px; color: #000000;"> <wbr>$element</span><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr> <wbr> <wbr> echo $element</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">src</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">.</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘&lt;br&gt;’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Find all links <wbr></span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000088;">foreach</span><span style="line-height: 21px; color: #666600;">(</span><span style="line-height: 21px; color: #000000;">$html</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘a’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #000088;">as</span><span style="line-height: 21px; color: #000000;"> <wbr>$element</span><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr> <wbr> <wbr> echo $element</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">href</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">.</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘&lt;br&gt;’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; text-align: -webkit-auto; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"></div></p>
<pre style="padding: 2px; border: 1px solid #888888;">

<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Create DOM from URL</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">$html <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><strong><span style="line-height: 21px; color: #000000;">file_get_html</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘<a href="http://www.ibmer.info/">http://www.ibmer.info/</a>‘</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">);</span></span></p>
<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Find all article blocks</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000088;">foreach</span><span style="line-height: 21px; color: #666600;">(</span><span style="line-height: 21px; color: #000000;">$html</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div.article’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #000088;">as</span><span style="line-height: 21px; color: #000000;"> <wbr>$article</span><span style="line-height: 21px; color: #666600;">)</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">{</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr>$item</span><span style="line-height: 21px; color: #666600;">[</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘title’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">]</span><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr>$article</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div.title’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">,</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #006666;">0</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">plaintext</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr>$item</span><span style="line-height: 21px; color: #666600;">[</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘intro’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">]</span><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr>$article</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div.intro’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">,</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #006666;">0</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">plaintext</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr>$item</span><span style="line-height: 21px; color: #666600;">[</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘details’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">]</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr>$article</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div.details’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">,</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #006666;">0</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">plaintext</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr> <wbr> <wbr> <wbr>$articles</span><span style="line-height: 21px; color: #666600;">[]</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr>$item</span><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">}</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">print_r</span><span style="line-height: 21px; color: #666600;">(</span><span style="line-height: 21px; color: #000000;">$articles</span><span style="line-height: 21px; color: #666600;">);</span></span></p>
<p></p></pre><p></p>
<pre style="padding: 2px; border: 1px solid #888888;">

<p><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Create DOM from string</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">$html <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><strong><span style="line-height: 21px; color: #000000;">str_get_html</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘&lt;div id=”hello”&gt;Hello&lt;/div&gt;&lt;div id=”world”&gt;World&lt;/div&gt;’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">);</span></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">$html</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div’</span><span style="line-height: 21px; color: #666600;">,</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #006666;">1</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)-&gt;</span></span><strong><span style="line-height: 21px; color: #000088;">class</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘bar’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">$html</span><span style="line-height: 21px; color: #666600;">-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">find</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">(</span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘div[id=hello]’</span><span style="line-height: 21px; color: #666600;">,</span><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #006666;">0</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">)-&gt;</span></span><strong><span style="line-height: 21px; color: #000000;">innertext</span></strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;"> <wbr></span><span style="line-height: 21px; color: #666600;">=</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #008800;">‘foo’</span></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #666600;">;</span></span></p>
<p><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><span style="line-height: 21px; color: #000000;">echo $html</span><span style="line-height: 21px; color: #666600;">;</span><span style="line-height: 21px; color: #000000;"> <wbr></span></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><span style="line-height: 21px; color: #880000;">// Output: &lt;div id=”hello”&gt;</span><strong><span style="line-height: 21px; color: #880000;">foo</span></strong><span style="line-height: 21px; color: #880000;">&lt;/div&gt;&lt;div id=”world” <wbr></span><strong><span style="line-height: 21px; color: #880000;">class=”bar”</span></strong><span style="line-height: 21px; color: #880000;">&gt;World&lt;/div&gt;</span></span></p>
<p></p></pre><br><p></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;"><br></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif;"> <span style="line-height: 23px; font-size: small;">3.DOM的方法</span></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif;"> <span style="line-height: 23px; font-size: small;"><br></span></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;"> $html = <wbr></span><strong>file_get_html</strong><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">(</span><span style="line-height: 14px; background-color: #f6f6f6; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">‘<a href="http://www.google.com/" target="_blank" rel="external">http://www.google.com/</a>‘</span><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">);  <wbr>  <wbr>  <wbr>  <wbr>//</span><span style="line-height: 14px; font-family: Monaco, Verdana, sans-serif;"><span style="line-height: 23px; color: #ff0000; font-size: small;"><strong>$html 所拥有的方法如下表所示</strong></span></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;"> $html-&gt;clear() ;  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>//</span><span style="line-height: 14px; background-color: #f6f6f6; font-family: Monaco, Verdana, sans-serif;"><span style="line-height: 23px; color: #ff0000; font-size: small;"><strong>调用方法</strong></span></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif;"> <span style="line-height: 28px; font-size: medium;"><br></span></span></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><strong> DOM</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> <wbr>methods &amp; properties <wbr></span></div></p>
<p><table style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;" width="100%" cellspacing="1" cellpadding="1"></table></p>
<p><tbody style="line-height: 21px;"></tbody></p>
<p><tr></tr></p>
<p><th style="line-height: 23px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;" width="320">Name</th></p>
<p><th style="line-height: 23px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;">Description</th><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">void</div><br>__construct ( <wbr><span style="line-height: 21px; color: #770000;">[string $filename]</span> <wbr>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Constructor, set the filename parameter will automatically load the contents, either text or file/url.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;"> <wbr>string</div><br>plaintext</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Returns the contents extracted from HTML.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">void</div><br>clear ()</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Clean up memory.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">void</div><br>load ( <wbr><span style="line-height: 21px; color: #770000;">string $content <wbr></span>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Load contents from a <wbr><strong>string</strong>.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">string</div><br>save ( <wbr><span style="line-height: 21px; color: #770000;">[string $filename]</span> <wbr>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Dumps the internal DOM tree back into a <wbr><strong>string</strong>. If the $filename is set, result string will save to file.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">void</div><br>load_file (<span style="line-height: 21px; color: #770000;"> <wbr>string $filename</span> <wbr>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Load contents from a from a file or a URL.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">void</div><br>set_callback ( <wbr><span style="line-height: 21px; color: #770000;">string $function_name <wbr></span>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Set a callback function.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">mixed</div><br>find (<span style="line-height: 21px; color: #770000;"> <wbr>string $selector [, int $index] <wbr></span>)</p>
<p><td style="line-height: 21px; background-color: #dddddd; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; font-size: 11px; color: #333333;">Find elements by the CSS selector. Returns the Nth element <wbr><strong>object</strong> <wbr>if <wbr><strong>index</strong> <wbr>is set, otherwise return an <wbr><strong>array</strong> <wbr>of object.</td><br><br><br><br></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><strong> <span style="line-height: 23px; font-size: small;">4.find <wbr>方法详细介绍</span></strong></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><strong> 
</strong></div></p>
<p><div style="line-height: 25px; text-align: -webkit-auto;"><span style="line-height: 23px; color: #ff0000; font-family: Monaco,Verdana,sans-serif; font-size: small;"><span style="line-height: 14px;"><strong>find ( string $selector [, int $index] ) <wbr></strong></span></span></div><br></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="color: #002166; font-family: Monaco,Verdana,sans-serif;"><span style="line-height: 14px; font-size: 12px;"> </span></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all <wbr><strong>anchors</strong>, returns a <wbr><strong>array</strong> <wbr>of element objects</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>a</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></div></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find <wbr><strong>(N)th</strong> <wbr><strong>anchor</strong>, returns element object or <wbr><strong>null</strong> <wbr>if not found</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">(zero based)</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>a</strong>‘, <wbr><strong>0</strong></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find <wbr><strong>lastest</strong> <wbr><strong>anchor</strong>, returns element object or <wbr><strong>null</strong> <wbr>if not found</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">(zero based)</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>a</strong>‘, <wbr><strong>-1</strong></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">); <wbr></span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all <wbr><strong>&lt;div&gt;</strong> <wbr>with the <wbr><strong>id</strong> <wbr>attribute</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>div[id]</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all <wbr><strong>&lt;div&gt;</strong> <wbr>which attribute <wbr><strong>id=foo</strong></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>div[id=foo]</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">); <wbr></span></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all element which <wbr><strong>id</strong>=foo</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>#foo</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></div></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all element which <wbr><strong>class</strong>=foo</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>.foo</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all element has attribute<strong> <wbr>id</strong></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>*[id]</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">); <wbr></span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all <wbr><strong>anchors</strong> <wbr>and <wbr><strong>images</strong> <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>a, img</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">); <wbr></span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all <wbr><strong>anchors</strong> <wbr>and <wbr><strong>images</strong> <wbr>with the “title” attribute</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $ret = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>a[title], img[title]</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all &lt;li&gt; in &lt;ul&gt; <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $es = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>ul li</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></div></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find Nested &lt;div&gt; <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">tags</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $es = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>div div div</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">); <wbr></span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all &lt;td&gt; in &lt;table&gt; which class=hello <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $es = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘<strong>table.hello td</strong>‘</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Find all td tags with attribite align=center in table tags <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $es = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘’<strong>table**</strong> <wbr>td[align=center]**’</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 23px; font-size: small;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> 5.</span> <wbr><strong>Element</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> <wbr></span> <wbr><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">的方法</span></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 23px; font-size: small;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><br></span></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;"> $e = $html-&gt;find(</span><span style="line-height: 14px; background-color: #f6f6f6; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">“div”</span><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">, <wbr></span><span style="line-height: 14px; background-color: #f6f6f6; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">0</span><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">);  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>  <wbr>//</span><strong>$e 所拥有的方法如下表所示</strong></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><strong> 
</strong></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"></div></p>
<p><table style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;" cellspacing="1" cellpadding="1"></table></p>
<p><tbody style="line-height: 19px;"></tbody></p>
<p><tr bgcolor="#CCCCCC"></tr></p>
<p><th style="line-height: 20px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;" width="25%">Attribute Name</th></p>
<p><th style="line-height: 20px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;" width="75%">Usage</th><br></p>
<p><tr></tr></p>
<p><td style="line-height: 19px; background-color: #dddddd;">$e-&gt;<strong>tag</strong></td></p>
<p><td style="line-height: 19px; background-color: #dddddd;">Read or write the <wbr><strong>tag name</strong> <wbr>of element.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 19px; background-color: #dddddd;">$e-&gt;<strong>outertext</strong></td></p>
<p><td style="line-height: 19px; background-color: #dddddd;">Read or write the <wbr><strong>outer HTML text <wbr></strong>of element.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 19px; background-color: #dddddd;">$e-&gt;<strong>innertext</strong></td></p>
<p><td style="line-height: 19px; background-color: #dddddd;">Read or write the <wbr><strong>inner HTML text <wbr></strong>of element.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 19px; background-color: #dddddd;">$e-&gt;<strong>plaintext</strong></td></p>
<p><td style="line-height: 19px; background-color: #dddddd;">Read or write the <wbr><strong>plain text <wbr></strong>of element.</td><br><br><br><br></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Example</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">html = <wbr></span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">str_get_html</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">“&lt;div&gt;foo &lt;b&gt;bar&lt;/b&gt;&lt;/div&gt;”</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">;</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> $e = $html-&gt;find(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">“div”</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">, <wbr></span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">0</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $e-&gt;</span><strong>tag</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">; <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">// Returns: “ <wbr><strong>div</strong>“</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $e-&gt;</span><strong>outertext</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">; <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">// Returns: “ <wbr><strong>&lt;div&gt;foo &lt;b&gt;bar&lt;/b&gt;&lt;/div&gt;</strong>“</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $e-&gt;</span><strong>innertext</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">; <wbr></span><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;">// Returns: “ <wbr><strong>foo &lt;b&gt;bar&lt;/b&gt;</strong>“</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $e-&gt;</span><strong>plaintext</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">; <wbr></span><span style="line-height: 25px; background-color: #f6f6f6;"><span style="color: #888888; font-family: Monaco,Verdana,sans-serif;"><span style="line-height: 14px; font-size: 12px;">// Returns: “ <wbr></span></span><strong>foo <wbr>**</strong>bar**<span style="color: #888888; font-family: Monaco,Verdana,sans-serif;"><span style="line-height: 14px; font-size: 12px;">“</span></span></span></div></p>
<p><span style="line-height: 23px; font-size: small;"><span style="color: #002166; font-family: Monaco,Verdana,sans-serif;"><span style="line-height: 14px;">6.</span></span><strong>DOM</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> <wbr>traversing 方法</span></span></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 23px; font-size: small;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><br></span></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"></div></p>
<p><table style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;" cellspacing="1" cellpadding="1"></table></p>
<p><tbody style="line-height: 21px;"></tbody></p>
<p><tr></tr></p>
<p><th style="line-height: 23px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;">Method</th></p>
<p><th style="line-height: 23px; font-family: 'Lucida Grande', Verdana, Geneva, sans-serif; color: #000000; background-color: #cfd4e6; margin: 2px; padding: 2px; font-size: 13px;">Description</th><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">mixed</div><br>$e-&gt;<strong>children</strong> <wbr>( <wbr><span style="line-height: 21px; color: #770000;">[int $index]</span> <wbr>)</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the Nth <wbr><strong>child object</strong> <wbr>if <wbr><strong>index</strong> <wbr>is set, otherwise return an <wbr><strong>array of children</strong>.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">element</div><br>$e-&gt;<strong>parent</strong> <wbr>()</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the <wbr><strong>parent</strong> <wbr>of element.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">element</div><br>$e-&gt;<strong>first_child</strong> <wbr>()</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the <wbr><strong>first child</strong> <wbr>of element, or <wbr><strong>null</strong> <wbr>if not found.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">element</div><br>$e-&gt;<strong>last_child</strong> <wbr>()</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the <wbr><strong>last child</strong> <wbr>of element, or <wbr><strong>null</strong> <wbr>if not found.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">element</div><br>$e-&gt;<strong>next_sibling</strong> <wbr>()</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the <wbr><strong>next sibling</strong> <wbr>of element, or<strong> <wbr>null</strong> <wbr>if not found.</td><br></p>
<p><tr></tr></p>
<p><td style="line-height: 21px; background-color: #dddddd;"></td></p>
<p><div style="line-height: 25px; font-size: 10px; color: #888888; float: left; text-align: right; margin: 0px 4px 0px 0px; width: 48px;">element</div><br>$e-&gt;<strong>prev_sibling</strong> <wbr>()</p>
<p><td style="line-height: 21px; background-color: #dddddd;">Returns the <wbr><strong>previous sibling</strong> <wbr>of element, or <wbr><strong>null</strong> <wbr>if not found.</td><br><br><br><br><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"><br> </span></p>
<p></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Example</span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $html-&gt;</span><strong>find</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">“#div1”, 0</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>children</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">1</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>children</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">1</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>children</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">2</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">id</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">;</span><br> <span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // or</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> <wbr></span><br> <span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"> echo $html-&gt;</span><strong>getElementById</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">“div1”</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>childNodes</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">1</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>childNodes</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">1</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>childNodes</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">2</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">)-&gt;</span><strong>getAttribute</strong><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">(</span><span style="line-height: 14px; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">‘id’</span><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">);</span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;">  <wbr>  <wbr> 附带： DOM方法  <wbr></span><strong>set_callback</strong><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">(</span><span style="line-height: 14px; background-color: #f6f6f6; color: #770000; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">‘my_callback’</span><span style="line-height: 14px; background-color: #f6f6f6; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px;">)  <wbr>使用方法</span></div></p>
<p><div style="line-height: 25px; font-family: Arial, Helvetica, simsun, u5b8bu4f53; background-color: #ffffff; text-align: -webkit-auto;"><span style="line-height: 14px; color: #002166; font-family: Monaco, Verdana, sans-serif; font-size: 12px; background-color: #f6f6f6;"><br></span></div><br><span style="line-height: 14px; font-size: 12px; color: #888888; font-family: Monaco, Verdana, sans-serif; background-color: #f6f6f6;"> // Write a function with parameter “</span></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装python环境]]></title>
      <url>http://www.ibmer.info/py-setup.html</url>
      <content type="html"><![CDATA[<p>安装python环境的相关信息</p>
<p>&nbsp;</p>
<p>插件安装命令python setup.py install</p>
<p>Pip安装</p>
<p><a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external">https://pypi.python.org/pypi/pip</a></p>
<p>selenium 自动化工具安装<br>pip install -U selenium</p>
<p><a href="https://pypi.python.org/pypi/xlrd/0.9.3%20" title="Python Excel库" target="_blank" rel="external">https://pypi.python.org/pypi/xlrd/0.9.3 </a></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WebSphere Application Server V8.5 常见问题及解答(基本介绍)]]></title>
      <url>http://www.ibmer.info/was85-faq.html</url>
      <content type="html"><![CDATA[<div class="ibm-col-6-4"><br><br>WebSphere Application Server V8.5 的最重要的新特性是新的 Liberty Profile 以及智能管理。本 FAQ 为您汇集了关于 WAS V8.5 的问题集锦，从智能管理、 Liberty Profile、性能等方面帮助您解答您使用过程中可能遇到的问题。<br><br>## WebSphere Application Server V8.5 带来了哪些新特性？<br><br>WebSphere Application Server V8.5 提供的新特性分为 3 部分：<br><br>1.  开发者的体验 （此部分致力于应用开发的快速，灵活，简化）<br><br>    1.  新的 Liberty Profile<br>    2.  扩展的工具包和 WAS 工具包<br>    3.  JDK7 的支持<br>    4.  OSGI 编程模型增强<br>    5.  OSGI 应用支持 EJB<br>    6.  迁移工具箱<br>    7.  Web 2.0 &amp; Mobile 工具箱；IBM Worklight 集成<br>    8.  SCA OASIS 编程模型<br><br>2.  应用的弹性 （此部分致力于智能管理和增强弹性）<br><br>    1.  应用版本的管理 Application Edition Management<br>    2.  应用服务器健康管理 Application Server Health Management<br>    3.  动态集群 Dynamic Clustering<br>    4.  新的智能路由能力 Intelligent Routing<br>    5.  消息通讯基础构架的弹性扩展<br>    6.  内存泄露的发现和保护<br><br>3.  运维和控制 （此部分致力于改进运维，安全，控制和集成）<br><br>    1.  可以选择的 JDK<br>    2.  Websphere 批处理的增强<br>    3.  管理安全的审计<br>    4.  跨组件的日志（XCT）<br>    5.  增强的 IBM Support Assistant 软件<br>    6.  更好的日志及跟踪的过滤<br>三部分中，最重要的新特性是：新的 <a href="http://www.ibm.com/developerworks/cn/websphere/zones/faqs/was85faqs/liberty.html" target="_blank" rel="external">Liberty Profile</a> 以及<a href="http://www.ibm.com/developerworks/cn/websphere/zones/faqs/was85faqs/intelligent.html" target="_blank" rel="external">智能管理</a>（包 括：应用版本的管理、应用服务器健康管理、动态集群、新的智能路由能力）。新的 Liberty Profile 提供了一个非常轻量级的应用服务器，它的安装、配置简单，运行的高效，带来了更好的开发者的体验。智能管理则大大的增强了应用服务器的弹性，并有效地管理 拓扑中的负载，此外，还提供健康状况的管理以及应用程序部署的管理。<br><br>## 智能管理是什么？哪些部分组成？带来哪些新的功能？<br><br><a href="http://www.ibm.com/developerworks/cn/websphere/zones/faqs/was85faqs/intelligent.html" target="_blank" rel="external">智能管理 (Intelligent Management) </a>是 WAS V8.5 将另一个 WebSphere 产品 WVE（WebSphere Virtual Enterprise）核心功能集成进来，使 WAS 拥有了更强的应对应用的弹性。针对系统管理员<br><br>智能管理所提供的特性分为：应用版本的管理， 应用服务器健康管理， 动态集群， 智能路由。其中应用版本管理，应用服务器健康管理和动态集群是基于随机应变路由的。<br><br>随机应变路由核心组件是 ODR - On Demand Router， 可以将它看做是一个代理，它帮助管理访问请求和确保关键应用有高优先级，并得以最先处理。<br><br>应用版本管理是管理同一个应用不同的版本，并可以保证在版本更新的过程中不中断业务逻辑。<br><br>应用服务器健康管理是通过设定监控触发条件和应对措施，完成对异常事件的及时处理。<br><br>动态集群可以随时调整动态集群中的成员规模，根据负载规模扩大或缩小集群规模。 在集群规模固定的情况下，集群成员也不是全部处于“活动”状态，而是根据当前负载启动匹配的“活动”的成员个数，使 IT 资源分配始终和资源需求保持一致，实现 IT 资源的最优配置。<br><br>## WAS V8.5 在运维和控制方面都有哪些新的功能？<br><br>运维和控制方面的新功能有：<br><br>1.  可以选择的 JDK： 管理员可以通过命令行或是 WAS 管理界面进行 JDK 的版本切换， 如：从 JDK6 切换到 JDK7，或是切换回来。<br>2.  Websphere 批处理的增强： 将 Computer Grid 集成进 WAS8.5，增加的批处理的功能。<br>3.  管理安全的审计： 可以查询某一确定审计点的配置情况。<br>4.  跨组件的日志（XCT）： 用户可以跟踪请求的流向，按照请求 ID 查看日志<br>5.  增强的 IBM Support Assistant 软件： 提供了 Data Collector，帮助用户收集数据和日志，进行问题诊断<br>6.  更好的日志及跟踪的过滤： 高性能可扩展日志提供了更多的日志过滤功能，方便用户分析日志<br></div>]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WebSphere Application Server V8.5 常见问题及解答(智能管理)]]></title>
      <url>http://www.ibmer.info/was85-qa-intelligent-management.html</url>
      <content type="html"><![CDATA[<div class="ibm-col-6-4"><br><br>WebSphere Application Server V8.5 的最重要的新特性是新的 Liberty Profile 以及智能管理。本 FAQ 为您汇集了关于 WAS V8.5 的问题集锦，从智能管理、 Liberty Profile、性能等方面帮助您解答您使用过程中可能遇到的问题。<br><br>## 在智能管理中，动态集群中每个节点所承担的负载是相同的吗？<br><br>动态集群中每个节点根据权重（Weight）来承担负载。权重代表的是集群中各个成员之间，应该如何分配负载的一个相对比率值。但在动态集群里，权重是自动分配和实时调整的，手工调整不会起到效果。所以用户不需要关注动态集群中的权重。<br><br>## 使用随需应变路由（ODR）会对整个WAS的集群环境有性能影响吗？装ODR的机器有没有具体的硬件需求？<br><br>随需应变路由（ODR）本身设计采用了异步机制，支持大量请求的并发处理，并且可以将多个 ODR 组成集群，来进一步扩大处理能力。因此不用担心其性能问题。<br><br>ODR 的安装取决于负载的不同，ODR 对 CPU 和内存的消耗也不同。ODR 的具体硬件需求不能一概而论，会受多个因素影响，如：<br><br><em>   最大并发请求数
</em>   平均请求负荷和响应负荷<br><em>   入栈和出栈的 SSL 链接比率
</em>   ODR 缓存中的响应的比率<br>一般建议将 ODR 单独装在一台性能较好的机器上，避免和应用服务器或其它进程争用 CPU 和内存的情况。<br><br>## 按传统的方式配置静态集群，通常每个应用服务器会运行多个应用。在动态集群（dynamic cluster）的环境下，每个应用是否要部署在不同的动态集群上？有没有推荐的最佳实践？<br><br>规划动态集群时， 需要对您当前的资源利用率以及应用的各种需求进行全面考虑，而不是简单、机械的划分应用与动态集群的对应。 例如，您当前的环境中有 200 台机器，15 个应用 , 简单、机械的建立 15 个动态集群 , 每个动态集群都横跨这 200 台机器，并不是一个很好的规划，这将导致您每台机器上创建太多的 JVM ( 至少 15 个应用服务器实例 +1 个节点代理 ), 对硬件资源要求提高。因此，您需要按照以前方案规划资源分配：<br><br>1.  了解各个应用的优先级、忙闲时分配、对安全性的需求<br>2.  针对需要安全性隔离，或者负载一直很大、很稳定的（一直很忙，不会有秒杀等极端情形）关键应用，可以考虑单独划分出节点组别（node group，即单独的资源池 ) 生成动态集群 , 保证这类应用的资源占用需求。 反正他们的负载很稳定，是你怎么规划都省不出来的，隔离出来以后安全性需求可以得到很好地保证。<br>3.  针对需要安全性隔离，但负载有忙闲时分别的应用，可以给他们在共享的资源池中生成动态集群 , 并规划动态集群隔离机制，保证该应用在某个机器上运行时，可以独占该机器的资源。<br>4.  针对没有安全性隔离需求，工作负载不是很重，或者不是重要的应用，或者负载曲线比较相似的一类应用，可以安装到同一个动态集群上，反正他们的负载曲线相似，一荣俱荣，一损俱损。<br>5.  即使是共享区的机器，也不能只有一个 node group，让动态集群横跨所有机器。 正确的方式是，在同一个机器上，实现忙、闲， 优先级高、优先级低的不同类型应用的合理组合，一方面最大限度的提高资源的共享率，另一方面降低 ODR 的计算量和决策难度。<br>按照 2、3、4、5 划分后，比如原来是 200 个机器的数据中心 , 你可能就分为了 3 类资源池，独占区，共享区，还能省出一个空闲区。系统管理员通过观察资源利用率和负载的变化，可以随时把资源紧张的动态集群动态扩展到空闲区机器上（动态更改 node group, 然后动态集群实例会自动生成），在闲时回收，以应付一些计划外的突发情况（比如秒杀）。<br><br>## 对于智能管理的版本管理功能，在同一个集群里能安装同一应用的不同版本吗？<br><br>可以，只要您在安装新版本时，标记出它的版本号，就可以在一个 WAS 的集群环境里面安装同一个应用的不同版本<br><br>## ODR可以取代HIS（IBM HTTP Server）进行使用还是能够共同使用？如果同时使用，请求就要经过IHS和ODR最后到达应用，这样会使性能降低吗？<br><br>ODR 作为一个智能的代理服务器 , 可以根据后台的负载，对从浏览器发送进来的请求做出更加合理的转发，从而提高总体的资源利用率，提高整体效率。确实转发路径过长，会对性能有一定的影响，但影响不大。<br><br>ODR 和 Dmgr 可以放在一个应用服务器上，但一般不建议那么做。 ODR 在一个单独的节点上，可以获得更好的性能。<br><br>如果客户原有的拓扑环境中，有 IHS, 可以继续使用，让 IHS 把请求转发到 ODR, 让 ODR 做进一步转发即可。如果原来就没有，可以不加 HIS。<br><br>## 智能管理(Intelligent Management)能监控历史数据吗？<br><br>可以， 登陆 WAS 的管理控制台，在管理控制台 -&gt; 系统管理 -&gt; 虚拟数据服务 -&gt; 启动，之后，智能管理会记录较长一段时间应用服务器和应用的运行情况。<br><br>但这些运行情况均以 .csv 方式存储，需要客户用 Excel 或者其它工具进行进一步分析<br><br>## 动态集群中的各个应用服务器的配置可以同步修改吗? 在建动态集群时是如何手动定义其成员的？<br><br>在智能管理的动态集群中存在应用服务器模板（server template）的概念。Server template 不需要手工生成，动态集群生成后，访问 WAS 管理控制台 -&gt; 动态集群 -&gt; &lt; 集群名称 &gt; -&gt; 应用服务器模板 , 可以对其中列出的属性进行配置，修改后的配置会被自动同步到动态集群所包含的所有应用服务器配置中，下次启动应用服务器时，新的配置会生效。<br><br>假设 WAS 的集群环境中有 5 个定制化节点（custom node）, 但用户只希望在 node1,node2, node3 上生成动态集群，则可以如下操作：<br><br>步骤 1: 在 WAS 的管理控制台 -&gt; 系统管理 -&gt; 节点组中，生成一个新的节点组 , 比如名字为 group1, 把 node1, node 2, node3 加入 group1 中<br><br>步骤 2: 在创建动态集群时， 在定义动态集群成员这一步骤中，选择 node_nodegroup = ‘group1’。 其他采用默认值即可。<br><br>这样用户就在 node1,node2, node3 上生成了一个动态集群。如果下次用户希望这个动态集群也覆盖 node 4, 就把 node4 放到 group1 中，动态集群就可以自动扩展。<br><br>按默认方式生成的动态集群，一般在每个节点上，只有一个应用服务器实例 , 如果用户希望增加，选择在节点上垂直扩展应用服务器实例 , 按照机器能力输入。<br><br>另外，创建动态集群时，也可以手工定义集群成员，但需要您实现有一个静态的集群 , 才能做相应的转换。<br><br>## 随需应变路由（ODR）是如何获取WAS的拓扑结构信息以及后台应用服务器的运行时状态的?<br><br>ODR 作为 WAS 集群环境里面的一个服务器 ( 只不过不是应用服务器 , 是随需应变路由服务器 ), 它有能力通过 Dmgr，节点代理获取全部的拓扑信息，应用的部署情况， 及后台的应用服务器的工作状态。 因此可以作为一个智能的 HTTP 代理服务器 , 决定请求的路由方式。<br><br></div>]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用PHP从淘宝采集评论和成交数据]]></title>
      <url>http://www.ibmer.info/php-taobao-curl.html</url>
      <content type="html"><![CDATA[<p>如果不想通过淘宝开放平台API获取数据，那么另外一个很好的办法就是采集了。一般来说，采集一个网页上的内容，只需要用CURL获取源代码，然后用正则表达式取出需要的内容就可以，不过如果这样载入一个淘宝的页面，会发现根本没有评论和成交数据，直接查看源代码可以看到评论的是空的。分析页面后发现，淘宝的评论并不是直接输出在页面中，而是在点击评论和成交的时候，才会跨域获取数据，并用脚本解析显示。</p>
<p>这样的处理方式使得CURL页面的方式不好使用了，但是实际上获得数据反而更容易：使用CURL还必须考虑装修模板的问题，通用性并不好，而跨域获取的数据多数情况下是一个标准的格式，通过抓取数据包最后发现淘宝的评论数据是从<a href="http://rate.taobao.com/feedRateList.htm?使用URL直接GET方式过来的，并且是标准的JSON格式。" target="_blank" rel="external">http://rate.taobao.com/feedRateList.htm?使用URL直接GET方式过来的，并且是标准的JSON格式。</a></p>
<p>数据地址：</p>
<div id="highlighter_79644" class="syntaxhighlighter  " style="color: #323232;"><br><div class="lines"><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>1</code></td><br><td class="content"><code>http:``//rate.taobao.com/feedRateList.htm?callback=jsonp_reviews_list&amp;amp;userNumId=【掌柜的账号数字ID】&amp;amp;auctionNumId=【商品ID】&amp;amp;currentPageNum=【评论分页页码】</code></td><br></tr><br></tbody><br></table><br></div><br></div><br></div>

<p>其他还有些参数可以不用。【掌柜的账号数字ID】抓包时可获取，商品ID在宝贝页面链接中的id值就是。</p>
<p>第二步：解析数值。因为淘宝的页面编码是GBK的，而<a href="http://cz1.me/tag/PHP" target="_blank" rel="external">PHP</a>在处理GBK编码的JSON文件时，对其中的中文处理是有问题的，会替换成空值，所以最后JSON数据decode出来的是一个NULL，解决办法是将GBK编码转换为UTF-8。如果你的网站是UTF-8的，那么把从淘宝抓来的JSON直接转成UTF-8然后decode就可用了，如果是GBK的，则转好后再转回GBK就可以。下面以<a href="http://item.taobao.com/item.htm?spm=a1z10.3.w4002-5694395307.29.JAGNX9&amp;id=20972699241" target="_blank" rel="external">http://item.taobao.com/item.htm?id=20972699241</a>为例，UTF-8页面的处理方法：</p>
<div id="highlighter_417778" class="syntaxhighlighter  " style="color: #323232;"><br><div class="lines"><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>01</code></td><br><td class="content"><code>$ch</code> <code>= curl_init();``//初始化，创建句柄</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt2"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>02</code></td><br><td class="content"><code>curl_setopt(``$ch``, CURLOPT_URL, ``&quot;[http://rate.taobao.com/feedRateList.htm?callback=jsonp_reviews_list&amp;amp;userNumId=1048567622&amp;amp;auctionNumId=20972699241&amp;amp;currentPageNum=1](http://rate.taobao.com/feedRateList.htm?callback=jsonp_reviews_list&amp;amp;userNumId=1048567622&amp;amp;auctionNumId=20972699241&amp;amp;currentPageNum=1)&quot;``);//设置细节参数</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>03</code></td><br><td class="content"><code>curl_setopt(``$ch``, CURLOPT_RETURNTRANSFER, 1);</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt2"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>04</code></td><br><td class="content"><code>curl_setopt(``$ch``, CURLOPT_HEADER, 0);</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>05</code></td><br><td class="content"><code>$str</code> <code>= curl_exec(``$ch``);``//获取内容</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt2"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>06</code></td><br><td class="content"><code>$str</code> <code>= mb_convert_encoding(``$str``,``&#39;UTF-8&#39;``,``&#39;GBK&#39;``);``//转换编码</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>07</code></td><br><td class="content"><code>$str</code> <code>= ``str_replace``(``&#39;jsonp_reviews_list(&#39;``,``&#39;&#39;``,``$str``);``//去掉多余的字符串</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt2"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>08</code></td><br><td class="content"><code>$str</code> <code>= ``str_replace``(``&#39;)&#39;``,``&#39;&#39;``,``$str``);</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt1"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>09</code></td><br><td class="content"><code>$data</code> <code>= json_decode(``$str``,TRUE);``//得到数据了，第二个参数是转化为数组</code></td><br></tr><br></tbody><br></table><br></div><br><div class="line alt2"><br><table><br><tbody><br><tr><br><td class="number" style="color: #787878 !important;"><code>10</code></td><br><td class="content"><code>print_r(``$data``)``//输出页面查看</code></td><br></tr><br></tbody><br></table><br></div><br></div><br></div>

<p>注意几个细节：<br>1、从淘宝抓来的JSON是GBK编码的；<br>2、PHP的json_decode()<a href="http://cz1.me/tag/%E5%87%BD%E6%95%B0" target="_blank" rel="external">函数</a>处理GBK编码的中文数据是有问题的，需要转换UTF-8后处理；<br>3、iconv()和mb_convert_encoding()函数也各有优劣和BUG，注意处理。<br>4、curl函数的使用；<br>5、如果要采集不止一页评论，总的页面数可以在返回值中的maxpage获取。</p>
<p>购买记录数据的获取方法大同小异，天猫的评论获取地址也有所不同，不过方法都是一样的。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VBA中StrConv(字格式转换)]]></title>
      <url>http://www.ibmer.info/vba-strconv.html</url>
      <content type="html"><![CDATA[<p>返回按指定类型转换的<span style="font-family: Verdana;"> <strong>Variant</strong> (<strong>String</strong>)。</span></p>
<p><strong>语法</strong></p>
<p><strong>StrConv</strong>(<span class="empb"><strong><em>string, conversion, LCID</em></strong></span>)</p>
<p><strong>StrConv</strong> 函数的语法有下面的命名参数：</p>
<p><table border="1" frame="below" rules="rows" cellpadding="5"></table></p>
<p><tbody></tbody></p>
<p><tr valign="top"></tr></p>
<p><td class="label" width="18%"><strong>部分</strong></td></p>
<p><td class="label" width="82%"><strong>说明</strong></td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="18%"><span class="empb"><strong><em>string</em></strong></span></td></p>
<p><td width="82%">必要参数。要转换的字符串表达式。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="18%"><span class="empb"><strong><em>conversion</em></strong></span></td></p>
<p><td width="82%">必要参数。Integer。其值的和决定转换的类型。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="18%"><span class="empb"><strong><em>LCID</em></strong></span></td></p>
<p><td width="82%">可选的。如果与系统LocaleID不同，则为LocaleID（系统LocaleID为缺省值。）</td><br><br><br><br>&nbsp;</p>
<p><strong>设置值</strong></p>
<p><span class="empb"><strong><em>conversion</em></strong></span> 参数的设置值为：</p>
<p><table border="1" frame="below" rules="rows" cellpadding="5"></table></p>
<p><tbody></tbody></p>
<p><tr valign="top"></tr></p>
<p><td class="label" width="25%"><strong>常数</strong></td></p>
<p><td class="label" width="11%"><strong>值</strong></td></p>
<p><td class="label" width="64%"><strong>说明</strong></td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbUpperCase</strong></td></p>
<p><td width="11%">1</td></p>
<p><td width="64%">将字符串文字转成大写。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbLowerCase</strong></td></p>
<p><td width="11%">2</td></p>
<p><td width="64%">将字符串文字转成小写。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbProperCase</strong></td></p>
<p><td width="11%">3</td></p>
<p><td width="64%">将字符串中每个字的开头字母转成大写。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbWide*</strong></td></p>
<p><td width="11%">4*</td></p>
<p><td width="64%">将字符串中单字节字符转成双字节字符。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbNarrow*</strong></td></p>
<p><td width="11%">8*</td></p>
<p><td width="64%">将字符串中双字节字符转成单字节字符。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbKatakana**</strong></td></p>
<p><td width="11%">16**</td></p>
<p><td width="64%">将字符串中平假名字符转成片假名字符。</td><br><br><br><br>&nbsp;</p>
<p><table border="1" frame="below" rules="rows" cellpadding="5"></table></p>
<p><tbody></tbody></p>
<p><tr valign="top"></tr></p>
<p><td width="25%"><strong>vbHiragana**</strong></td></p>
<p><td colspan="2" width="11%">32**</td></p>
<p><td colspan="2" width="62%">将字符串中片假名字符转成平假名字符。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td colspan="2" width="26%"><strong>vbUnicode</strong></td></p>
<p><td colspan="2" width="11%">64</td></p>
<p><td colspan="2" width="63%">根据系统的缺省码页将字符串转成 Unicode。</td><br></p>
<p><tr valign="top"></tr></p>
<p><td colspan="2" width="26%"><strong>vbFromUnicode</strong></td></p>
<p><td colspan="2" width="11%">128</td></p>
<p><td colspan="2" width="63%">将字符串由 Unicode 转成系统的缺省码页。</td><br><br><br><br>&nbsp;</p>
<p>*应用到远东国别。</p>
<p>**仅应用到日本。</p>
<p><strong><b>注意 </b></strong>这些常数是由 VBA 指定的。可以在程序中使用它们来替换真正的值。其中大部分是可以组合的，例如 <strong>vbUpperCase + vbWide</strong>，互斥的常数不能组合，例如 <strong>vbUnicode + vbFromUnicode</strong>。当在不适用的国别使用常数 <strong>vbWide</strong>、<strong>vbNarrow</strong>、<strong>vbKatakana</strong>，和 <strong>vbHiragana </strong>时，就会导致运行时错误。</p>
<p>下面是一些一般情况下的有效分界符：Null<span style="font-family: Verdana;"> (<strong>Chr$(</strong>0<strong>)</strong>)，水平制表符 (<span style="font-family: Verdana;"><strong>Chr$(</strong>9<strong>)</strong>)，换行 (<span style="font-family: Verdana;"><strong>Chr$(</strong>10<strong>)</strong>)，垂直制表符 (<span style="font-family: Verdana;"><strong>Chr$(</strong>11<strong>)</strong>)，换页 (<span style="font-family: Verdana;"><strong>Chr$(</strong>12<strong>)</strong>) ，回车 (<span style="font-family: Verdana;"><strong>Chr$(</strong>13<strong>)</strong>)，空白 <span style="font-family: Verdana;">(SBCS) (<strong>Chr$(</strong>32<strong>)</strong>)。在 DBCS中，空白的实际值会随国家/地区而不同。</span></span></span></span></span></span></span></p>
<p><strong>说明</strong></p>
<p>在把 ANSI 格式的 <strong>Byte </strong>数组转换为字符串时，您应该使用<span style="font-family: Verdana;"> <strong>StrConv</strong> 函数。当您转换 Unicode 格式的这种数组时，使用赋值语句</span></p>
<p>&nbsp;</p>
<p>※Signle Code→以单一位元组(1Byte/8Bit)作为一个字的处理单位的字码。<br>※UniCode→由ISO(国际标准组织)订定的标准字码，以两个位元组(2Byte/16Bit)组成一个字，作为一个字处理单位的字码。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vba </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Excel VBA Interior.ColorIndex 色彩列表]]></title>
      <url>http://www.ibmer.info/excel-vba-interior-colorindex.html</url>
      <content type="html"><![CDATA[<p>使用如下VBA代码取得相应的单元格底色</p>
<p>[vba]</p>
<p>Sub a()Sub a()</p>
<p>Range(“A1”).Select</p>
<p>For i = 0 To 56 Step 1</p>
<p>ActiveCell.Interior.ColorIndex = i</p>
<p>ActiveCell.Offset(0, 1).Value2 = i</p>
<p>If i Mod 19 = 18 And i &lt;&gt; 0 Then</p>
<p>ActiveCell.Offset(-18, 2).Select</p>
<p>Else</p>
<p>ActiveCell.Offset(1, 0).Select</p>
<p>End If</p>
<p>Next</p>
<p>End Sub</p>
<p>[/vba]</p>
<p>结果如下</p>
<p><a href="/images/wp-uploads/2014/11/color.jpg"><img src="/images/wp-uploads/2014/11/color.jpg" alt="color"></a></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vba </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Websphere MQ安装入门]]></title>
      <url>http://www.ibmer.info/websphere-mq-install.html</url>
      <content type="html"><![CDATA[<p>环境：Red Hat Enterprise Linux Server release 6.4 (Santiago) 32bit</p>
<p>MQ版本：V7.5.0.2</p>
<p>[shell]</p>
<p>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# ./mqlicense.sh -accept</p>
<p>Licensed Materials - Property of IBM</p>
<p>5724-H72</p>
<p>(C) Copyright IBM Corporation 1994, 2013 All rights reserved.</p>
<p>US Government Users Restricted Rights - Use, duplication or disclosure<br>restricted by GSA ADP Schedule Contract with IBM Corp.</p>
<p>Agreement accepted:  Proceed with install.</p>
<p>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesRuntime-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>Creating group mqm<br>Creating user mqm<br>1:MQSeriesRuntime        ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesS<br>MQSeriesSamples-7.5.0-2.i386.rpm  MQSeriesServer-7.5.0-2.i386.rpm<br>MQSeriesSDK-7.5.0-2.i386.rpm<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesServer-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesServer         ########################################### [100%]</p>
<p>After the installation has completed, run the ‘/opt/mqm/bin/mqconfig’<br>command, using the ‘mqm’ user ID.</p>
<p>For example, execute the following statement when running as the ‘root’ user:</p>
<p>su mqm -c “/opt/mqm/bin/mqconfig”</p>
<p>The ‘mqconfig’ command validates that the system configuration satisfies the<br>requirements for WebSphere MQ, and ensures that the settings for the ‘mqm’<br>user ID are suitably configured.  Other WebSphere MQ administrators in the<br>‘mqm’ group can run this command to ensure their user limits are also<br>properly configured to use WebSphere MQ.</p>
<p>If ‘mqconfig’ indicates that any of the requirements have not been met,<br>consult the installation section within the WebSphere MQ Information Center<br>for details about how to configure the system and user limits.</p>
<p>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesSamples-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesSamples        ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesMsg_ja-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesMsg_ja         ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesMsg_Zh_CN-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesMsg_Zh_CN      ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesSDK-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesSDK            ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]# rpm -ivh MQSeriesJava-7.5.0-2.i386.rpm<br>Preparing…                ########################################### [100%]<br>1:MQSeriesJava           ########################################### [100%]<br>[root@localhost WS_MQ_LINUX_ON_X86_32B_V7.5.0.2]#</p>
<p>[root@localhost mqm]# su mqm -c “/opt/mqm/bin/mqconfig”<br>mqconfig: Analyzing Red Hat Enterprise Linux Server release 6.4 (Santiago)<br>settings for WebSphere MQ V7.5</p>
<p>System V Semaphores<br>semmsl     (sem:1)  250 semaphores                     IBM&gt;=500          FAIL<br>semmns     (sem:2)  5 of 32000 semaphores      (0%)    IBM&gt;=256000       FAIL<br>semopm     (sem:3)  32 operations                      IBM&gt;=250          FAIL<br>semmni     (sem:4)  3 of 128 sets              (2%)    IBM&gt;=1024         FAIL</p>
<p>System V Shared Memory<br>shmmax              4294967295 bytes                   IBM&gt;=268435456    PASS<br>shmmni              1 of 4096 sets             (0%)    IBM&gt;=4096         PASS<br>shmall              2019 of 268435456 pages    (0%)    IBM&gt;=2097152      PASS</p>
<p>System Settings<br>file-max            8896 of 191597 files       (4%)    IBM&gt;=524288       FAIL<br>tcp_keepalive_time  7200 seconds                       IBM&lt;=300          FAIL</p>
<p>Current User Limits (mqm)<br>nofile       (-Hn)  4096 files                         IBM&gt;=10240        FAIL<br>nofile       (-Sn)  1024 files                         IBM&gt;=10240        FAIL<br>nproc        (-Hu)  9 of 15033 processes       (0%)    IBM&gt;=4096         PASS<br>nproc        (-Su)  9 of 1024 processes        (0%)    IBM&gt;=4096         FAIL</p>
<p>-bash-4.1$ pwd<br>/opt/mqm/bin<br>-bash-4.1$ ./strmqm QMGR01<br>AMQ8118: WebSphere MQ 队列管理器不存在。<br>-bash-4.1$ ./crtmqm QMGR01<br>WebSphere MQ 队列管理器已创建。<br>已创建目录“/var/mqm/qmgrs/QMGR01”。<br>队列管理器与安装“Installation1”关联。<br>正在创建或替换队列管理器“QMGR01”的缺省对象。<br>缺省对象统计：74 个已创建。0 个已替换。0 个已失败。<br>正在完成设置。<br>设置完成。<br>-bash-4.1$ ./strmqm QMGR01<br>WebSphere MQ 队列管理器“QMGR01”正在启动。<br>队列管理器与安装“Installation1”关联。<br>在日志重放阶段在队列管理器“QMGR01”上访问了 5 条日志记录。<br>完成队列管理器“QMGR01”的日志重放。<br>为队列管理器“QMGR01”恢复了事务管理器状态。<br>使用 V7.5.0.2 启动了 WebSphere MQ 队列管理器“QMGR01”。<br>-bash-4.1$</p>
<p>进入队列处理器</p>
<p>runmqsc CMS_ALARM_QM</p>
<p>创建通道</p>
<p>DEFINE CHANNEL (‘CH1’) CHLTYPE(SVRCONN) +<br>TRPTYPE(TCP) +<br>DESCR(‘ ‘) +<br>HBINT(300) +<br>MAXMSGL(4194304) +<br>MCAUSER(‘mqm’) +<br>RCVDATA(‘ ‘) +<br>RCVEXIT(‘ ‘) +<br>SCYDATA(‘ ‘) +<br>SCYEXIT(‘ ‘) +<br>SENDDATA(‘ ‘) +<br>SENDEXIT(‘ ‘) +<br>REPLACE</p>
<p>[/shell]</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mq </tag>
            
            <tag> websphere </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IBM ESB 产品之间的比较及应用场景: 第 2 部分，实际应用场景]]></title>
      <url>http://www.ibmer.info/ibm-esb-2.html</url>
      <content type="html"><![CDATA[<h2 id="实际业务场景用-IBM-ESB-产品的实现"><a href="#实际业务场景用-IBM-ESB-产品的实现" class="headerlink" title="实际业务场景用 IBM ESB 产品的实现"></a>实际业务场景用 IBM ESB 产品的实现</h2><h3 id="通用业务场景"><a href="#通用业务场景" class="headerlink" title="通用业务场景"></a>通用业务场景</h3><p>业务场景：（虚拟场景）A 银行最近和 B 银行及 C 银行形成合作关系，合作合同的一项指出，在其中任何一个银行有存款的用户，可以在其他任意两家银行用该存款作为贷款担保来获得一定倍数数量的贷款。如，若 某人张三在 A 银行有 1 万元的存款，则该用户可以用这 1 万元的存款作为担保在 B，C 银行取得 10 倍于 1 万元（10 万元）的贷款。A 需要创新的解决方案，使得这项新的协议在 IT 系统中实现，并服务于他们的客户。如果用户在 B 和 C 之一具有一定的存款，则 A 的解决方案将自动从 B 和 C 取得该客户的存款额，并将该存款额应用到贷款流程中。（在本场景中，为了介绍 ESB 的连接性，我们将问题简单化，并没有考虑以下可能的情况：某客户分别在 B 和 C 都有一定存款，需要用 B 和 C 的存款之和在 A 进行贷款担保的情况。当然这种情况属于业务逻辑，应该在 A 的贷款流程中实现）</p>
<p>A 银行决定使用 SOA 来个构建这一新的解决方案，利用 IBM SOA Foundation 来构建体系结构模型，用 IBM ESB 作企业服务总线，统一进行服务的注册，查找，路由等，并在 ESB 上运行其他应用程序。前提条件：B 银行和 C 银行都已经向 A 公司提供了各自的获取某用户存款在本公司存款的服务，而且已经定义了良好的接口。</p>
<p>注：在这篇文章中，我们旨在介绍 IBM 几款 ESB 产品的各自特点，而不介绍开发细节。所以我们花更多笔墨来展示实现过程的一些重要特点，而不去详细介绍实现上述场景的整个过程。</p>
<h3 id="使用-WESB-实现场景"><a href="#使用-WESB-实现场景" class="headerlink" title="使用 WESB 实现场景"></a>使用 WESB 实现场景</h3><p><strong> 场景描述：</strong></p>
<ul>
<li>B、C 银行提供的查询客户存款的服务已通过 Web Service 方式实现；</li>
<li>并发的请求不会很多；</li>
<li>A 银行的整合中多个应用都会使用到 B、C 银行提供的查询客户存款的服务。</li>
<li>我们希望通过 ESB 向整合环境提供统一的、可复用的查询客户存款的服务，该服务自动根据客户的来源，动态路由到 B、C 提供的客户存款的服务。<br>下面我们选择 WESB 作为该场景的 ESB 实现。</li>
</ul>
<p>下表描述了 B，C 现有服务定义。</p>
<p><table class="ibm-data-table" border="0" cellspacing="0" cellpadding="0"></table></p>
<p><thead></thead></p>
<p><tr></tr></p>
<p><th scope="col">服务来源</th></p>
<p><th scope="col">接口</th></p>
<p><th scope="col">操作</th></p>
<p><th scope="col">输入</th></p>
<p><th scope="col">输出</th><br><br></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td>B 银行</td></p>
<p><td>BDepositService</td></p>
<p><td>queryDeposit</td></p>
<p><td>Customer</td></p>
<p><td>DepositInfo</td><br></p>
<p><tr></tr></p>
<p><td>C 银行</td></p>
<p><td>CDepositService</td></p>
<p><td>cxDeposit</td></p>
<p><td>Client</td></p>
<p><td>ClientDeposit</td><br><br><br><br>在上面的表格中，我们尽量模拟两个银行提供的数据接口和数据格式是不一样的，因为这样更加符合现实的情况。</p>
<p><strong> 场景实现：</strong></p>
<p><strong> 第一步：</strong></p>
<p>如图 1 所示在 WID（集成开发环境中）将服务的提供者（B 银行 C 银行）引用到开发环境中，每一个服务对应于一个 SCA Import，根据不同的服务提供者选择不同的绑定（Binding）这里由于服务都已 Web Service 方式提供，所以选用 Web Service 绑定。</p>
<p><strong> 第二步：</strong></p>
<p>通过一个 Mediation 模块来处理服务的路由，消息格式转换等。</p>
<p><strong> 第三步：</strong></p>
<p>将新的统一服务通过 Web Service 的方式 Export 出去，所以使用该 Web Service 的应用都通过该 Export 调用。</p>
<h5 id="图-1-WESB-上开发的三个步骤"><a href="#图-1-WESB-上开发的三个步骤" class="headerlink" title="图 1. WESB 上开发的三个步骤"></a>图 1. WESB 上开发的三个步骤</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image002.png" alt="WESB 上开发的三个步骤"></p>
<p>在以上三个步骤中，Mediation 模块是核心 ESB 模块，图 2 和图 3 是针对以上应用场景开发的 Mediation 逻辑。</p>
<h5 id="图-2-WESB-Mediation-模块的请求消息流"><a href="#图-2-WESB-Mediation-模块的请求消息流" class="headerlink" title="图 2. WESB Mediation 模块的请求消息流"></a>图 2. WESB Mediation 模块的请求消息流</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image005.jpg" alt="WESB Mediation 模块的请求消息流"></p>
<h5 id="图-3-WESB-Mediation-模块的响应消息流"><a href="#图-3-WESB-Mediation-模块的响应消息流" class="headerlink" title="图 3. WESB Mediation 模块的响应消息流"></a>图 3. WESB Mediation 模块的响应消息流</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image007.jpg" alt="WESB Mediation 模块的响应消息流"></p>
<p>从上述简要的开发过程来看，我们将来自不同服务提供者的两个服务注册在 WESB 上；由 WESB 提供一个统一的服务；今后，服务请求者不需要去关心具体应该调用由哪个后台服务；整个开发过程不需要写一行代码。</p>
<p>此外，WESB 基于 WAS J2EE 容器之上，对安全事务处理等方面都有很好的支持，同时 WESB 遵循标准的 SCA/SDO 的规范，使得我们开发的组件可以很容易的和其他应用集成。</p>
<h3 id="使用-WMB-实现场景"><a href="#使用-WMB-实现场景" class="headerlink" title="使用 WMB 实现场景"></a>使用 WMB 实现场景</h3><p><strong> 场景描述：</strong></p>
<ul>
<li>B 银行提供的服务由 Web Service 的方式实现，C 银行提供的服务由 FTP 方式实现，只要把消息放到 C 银行指定的 FTP Server 即可 , 数据格式由 C 银行指定</li>
<li>对 B.C 服务性能要求较高，需要每秒钟能同时处理 1000 到 10，000 条消息</li>
<li>B 银行和 C 银行都支持通过 MQ 的方式对其提供的服务进行访问</li>
<li>利用 ESB 构建一个统一的查询客户存款服务的，该服务通过查询不同的客户来源，动态路由到不同的服务提供银行<br><strong> 场景实现：</strong></li>
</ul>
<p>第一步：将开发好的 BBank 提供的 WSDL 导入 WMB 中，我们在 SOAPRequest 节点中可以利用该 WSDL 文件提供对 BBank 的访问。CBank 提供的是某个 FTP 服务，MB 中提供的 FileOutput 节点可以实现对 FTP 的访问。</p>
<p>第二步：利用 WMB 提供的 Route 节点实现对消息的路由，Route 节点是 MB6.1 的一个新 feature，开发起来和 WESB 中的 Route 节点非常类似。之前的 WMB 版本一般利用 Filter 节点来实现类似的路由功能。</p>
<p>第三步：提供一个 MQ Input 节点给 A 客户，A 客户可以通过该 MQ 节点发送消息，从而访问 BBank 和 CBank 提供的服务。</p>
<p>第四步：由于 A 银行支持对 MQ 的访问，故 B，C 银行的返回结果都存放在 MQ 中，A 银行只要访问相应的队列就可以取回结果。本例不介绍 A 银行应用系统对 MQ 的访问</p>
<h5 id="图-4-使用-Message-Broker-开发-Mediation-消息流"><a href="#图-4-使用-Message-Broker-开发-Mediation-消息流" class="headerlink" title="图 4. 使用 Message Broker 开发 Mediation 消息流"></a>图 4. 使用 Message Broker 开发 Mediation 消息流</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image009.jpg" alt="使用 Message Broker 开发 Mediation 消息流"></p>
<p>如图 4 所示，我们在 BBank Compute 节点和 MappingToCBank mapping 节点中分别采用了 ESQL 和 mapping 节点实现消息格式的转换。WMB 提供了非常强大的消息 mapping 功能，在已知映射双方消息格式的情况下，我们可以直接利用 mapping 节点进行消息映射。在 BBank 中我们也利用了 WMB 特有的 ESQL 实现到 SOAP 消息的映射。</p>
<p>在 CBank Compute 节点中我们对存放在 FTP 中的文件名进行了动态赋值，其文件名字根据消息中唯一的 ID 信息来标识。</p>
<p>图 5 是 Route 节点的主要信息，非常简单，根据消息中的 Bank 的字段路由到不同的服务：</p>
<h5 id="图-5-Router-规则表"><a href="#图-5-Router-规则表" class="headerlink" title="图 5. Router 规则表"></a>图 5. Router 规则表</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image010.gif" alt="Router 规则表"></p>
<p>总的来说，WMB 提供了更为丰富的内置节点，支持不同协议间的转换，在本例中我们采用 FTP 作为演示，WMB 还支持 JMS、HTTP、TCP/IP 等其他常用协议。由于和 MQ 天然的内在联系，支持 MQ 访问的应用系统使用 WMB 作为 ESB 将非常自然，和 WESB 相比，WMB 不仅提供了的丰富的消息处理机制，在性能方面也更为优越。</p>
<h3 id="使用-Datapower-实现场景"><a href="#使用-Datapower-实现场景" class="headerlink" title="使用 Datapower 实现场景"></a>使用 Datapower 实现场景</h3><p><strong> 场景描述：</strong></p>
<p>在该场景中，服务的注册，路由等功能和前面描述的 WESB 相似，除此之外，还需要以下安全方面的支持：</p>
<ul>
<li><p>B,C 提供的服务在服务端已经实现了服务端的安全机制，请求者只有满足相应的机制才能请求服务。</p>
</li>
<li><p>要求服务的请求和返回在安全的传输层（SSL）之上传输。</p>
</li>
<li>返回的消息是加密的，需要请求者解密消息。</li>
<li>请求的消息要数字签名，保证消息在请求过程中未被修改。</li>
<li>防范 XML 攻击（XML 攻击的介绍参见参考文献部分）</li>
<li>以上这些安全方面的要求在 WESB 中完全可以实现，但是对安全性的增加会导致：1）开发的复杂度；2）系统性能的大幅下降。<br>在这样的高安全要求应用场景下，用 Datapower 来做 ESB 则成为最佳选择。在有的情况下 Datapower 会和 WESB 或者 Message Broker 联合起来使用，参考联合使用章节。这里我们单独介绍 Datapower 单独做 ESB 时所能提供的功能。</li>
</ul>
<p><strong> 场景实现：</strong></p>
<p>在 Datapower 下实现该场景的过程中，我们分两个步骤来实现</p>
<p>第一步：实现基本的 ESB 服务注册、路由、消息转换等功能。</p>
<p>第二部：在此基础之上，我们再增加对安全方面的支持，下面我们来看看在 Datapower 上增加安全是如何的便捷及高效。</p>
<p>实现第一步，我们通过两个 XML Firewall 来封装 B，C 银行提供的服务，图 6 是对 B 服务建立 Firewall 的开发配置界面：</p>
<h5 id="图-6-封装-B-服务的-Firewall-开发配置界面"><a href="#图-6-封装-B-服务的-Firewall-开发配置界面" class="headerlink" title="图 6. 封装 B 服务的 Firewall 开发配置界面"></a>图 6. 封装 B 服务的 Firewall 开发配置界面</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image012.jpg" alt="封装 B 服务的 Firewall 开发配置界面"></p>
<p>建立好两个 Firewall 后，我们现在来建立一个新的 Firewall 来实现 ESB 中的路由和消息转换，如图 7：</p>
<h5 id="图-7-ESB-路由-Firewall"><a href="#图-7-ESB-路由-Firewall" class="headerlink" title="图 7. ESB 路由 Firewall"></a>图 7. ESB 路由 Firewall</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image014.jpg" alt="ESB 路由 Firewall"></p>
<p>Policy 的定义如图 8：</p>
<h5 id="图-8-Policy-定义"><a href="#图-8-Policy-定义" class="headerlink" title="图 8. Policy 定义"></a>图 8. Policy 定义</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image016.jpg" alt="Policy 定义"></p>
<p>我们需要配置请求消息流和返回消息流中的各个节点来完成 ESB 的功能。转换节点中，我们开发 XSL 来进行格式转换；在路由节点中，我们要定义路由表，如图 9 所示，</p>
<h5 id="图-9-路由规则表"><a href="#图-9-路由规则表" class="headerlink" title="图 9. 路由规则表"></a>图 9. 路由规则表</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image018.jpg" alt="路由规则表"></p>
<p>下面，我们对上述 ESB 消息流增加安全方面的支持。假定 Datapower 使用在 A 银行的内部网中，那么我们只需要在和 B，C 银行之间的传输中增加安全支持，如图 10 所示。</p>
<h5 id="图-10-实现场景图中的安全需求"><a href="#图-10-实现场景图中的安全需求" class="headerlink" title="图 10. 实现场景图中的安全需求"></a>图 10. 实现场景图中的安全需求</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image020.jpg" alt="实现场景图中的安全需求"></p>
<ul>
<li>加入 SSL<br>SSL 在 Datapower 中是一个独立开发的对象，我们开发好 SSL 的对象后，我们只需要在 XML Firewall 的配置界面上选择该对象即可，如图 11：</li>
</ul>
<h5 id="图-11-在-Firewall-中增加-SSL"><a href="#图-11-在-Firewall-中增加-SSL" class="headerlink" title="图 11. 在 Firewall 中增加 SSL"></a>图 11. 在 Firewall 中增加 SSL</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image022.jpg" alt="在 Firewall 中增加 SSL"></p>
<ul>
<li>签名和确认<br>B 银行要求传过去的请求消息是带有数字签名，我们需要在 B FirewallService 中加入 Sign（签名）节点来支持此项功能，如图 12 所示：</li>
</ul>
<h5 id="图-12-消息流中增加签名"><a href="#图-12-消息流中增加签名" class="headerlink" title="图 12. 消息流中增加签名"></a>图 12. 消息流中增加签名</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image024.jpg" alt="消息流中增加签名"></p>
<ul>
<li>加密解密<br>B 银行返回消息是加密的，我们需要在 B FirewallService 的 Firewall Policy 中加入 Decrypt（解密）的节点，如图 13 所示。</li>
</ul>
<h5 id="图-13-消息流中增加解密节点"><a href="#图-13-消息流中增加解密节点" class="headerlink" title="图 13. 消息流中增加解密节点"></a>图 13. 消息流中增加解密节点</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image026.jpg" alt="消息流中增加解密节点"></p>
<p>上面几张图中我们介绍了如何对 B 提供的服务增加安全支持，对 C 的服务业一样处理。至此，我们方便得在 Datapower 和 B,C 银行之间提供安全的服务请求，通过配置的方式即可完成安全的支持，节省了很大的开发成本，此外，Datapower 对 XML 的处理速度达到线速，有兴趣的读者可以参考相关文献。</p>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2.html#ibm-pcon" target="_blank" rel="external">回页首</a></p>
<h2 id="ESB-产品的联合应用的场景介绍"><a href="#ESB-产品的联合应用的场景介绍" class="headerlink" title="ESB 产品的联合应用的场景介绍"></a>ESB 产品的联合应用的场景介绍</h2><p>三款产品并不是独立使用的，在某些环境下可能需要三款产品的联合使用</p>
<h3 id="WESB-和-WMB-联合使用"><a href="#WESB-和-WMB-联合使用" class="headerlink" title="WESB 和 WMB 联合使用"></a>WESB 和 WMB 联合使用</h3><p>在图 14 的场景中，某跨国公司在世界各地都有分公司，由于时区的原因，每天的信息需要通过异步的方式统一到总公司，由于总公司的业务量大，我们可以使用 WMB 做总公司的 ESB，而在分支机构，业务量小，且都是 J2EE 和 Web Service 的应用，我们可以使用 WESB 作为分公司的 ESB。</p>
<h5 id="图-14-WMB-和-WESB-联合使用的场景"><a href="#图-14-WMB-和-WESB-联合使用的场景" class="headerlink" title="图 14. WMB 和 WESB 联合使用的场景"></a>图 14. WMB 和 WESB 联合使用的场景</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image028.gif" alt="WMB 和 WESB 联合使用的场景"></p>
<h3 id="Datapower-和-WESB-联合使用"><a href="#Datapower-和-WESB-联合使用" class="headerlink" title="Datapower 和 WESB 联合使用"></a>Datapower 和 WESB 联合使用</h3><p>如图 15 所示，我们可以在 WPS 上实现负责的业务流程，在企业内部使用 WESB 作为 ESB。在该场景中 WESB 只负责服务的注册、路由和查找功能，而安全方面的处理，以及部分消息格式转换的功能由 Datapower 处理（外部传来的非 XML 格式的数据通过 Datapower 处理成 XML 格式的数据），该场景既利用到 Datapower 在安全和 XML 处理方面的优势，有利用到 WESB 和 WPS 集成的优势。</p>
<h5 id="图-15-Datapower-和-WESB-联合使用的场景"><a href="#图-15-Datapower-和-WESB-联合使用的场景" class="headerlink" title="图 15. Datapower 和 WESB 联合使用的场景"></a>图 15. Datapower 和 WESB 联合使用的场景</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image030.gif" alt="Datapower 和 WESB 联合使用的场景"></p>
<h3 id="Datapower-和-WMB-联合使用"><a href="#Datapower-和-WMB-联合使用" class="headerlink" title="Datapower 和 WMB 联合使用"></a>Datapower 和 WMB 联合使用</h3><p>如图 16 所示，Datapower 可以和 WMB 配合使用。WMB 提供了多种多样的消息协议和格式的支持，比如遗留的 EIS 系统，SAP、PeopleSoft 等，也可以充分利用 WMB 的扩展性自定义消息集或者消息节点，以此来满足特殊的应用需求。Datapower 可以提供高性能的 Web Service 安全网关。客户端通过 SOAP over HTTP 可以访问到 Datapower，而 Datapower 用过 MQ 访问 WMB。该场景兼顾了 Datapower 在性能上强大的优势和 WMB 丰富的消息协议与格式支持。</p>
<h5 id="图-16-Datapower-和-WMB-联合使用的场景"><a href="#图-16-Datapower-和-WMB-联合使用的场景" class="headerlink" title="图 16. Datapower 和 WMB 联合使用的场景"></a>图 16. Datapower 和 WMB 联合使用的场景</h5><p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2-image032.jpg" alt="Datapower 和 WMB 联合使用的场景"></p>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/2.html#ibm-pcon" target="_blank" rel="external">回页首</a></p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>在和客户以及合作伙伴交流的过程中，我们经常会被问到 IBM 的三款 ESB 产品的差别以及如何选择合适的 ESB 产品。在这篇文章中，我们分成两个部分介绍了 ESB 以及 IBM 的三款 ESB 产品的各自特点和适用的场景，并通过一个实际案例基于三款产品的实现来描述其开发部署的差异。至此，希望能帮助读者在选择正确 ESB 产品时起到一定的作用。</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IBM </tag>
            
            <tag> SOA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IBM ESB 产品之间的比较及应用场景: 第 1 部分，IBM ESB 产品之间的比较]]></title>
      <url>http://www.ibmer.info/ibm-esb-1.html</url>
      <content type="html"><![CDATA[<p><a name="1\. 企业服务总线 ESB 的介绍 |outline"></a><span class="atitle"> 企业服务总线 ESB 的介绍 </span></p>
<p><a name="N100A3"></a><span class="smalltitle"> 企业应用的发展概述 </span></p>
<p>在介绍企业服务总线之前，有必要花一些笔墨来介绍企业应用架构的发展和变迁。企业级应用架构的发展经历了以下几个阶段：</p>
<ol>
<li>独立应用系统</li>
<li>EAI 阶段</li>
<li>SOA 阶段<br><strong> 独立应用阶段 </strong></li>
</ol>
<p>20 世纪 60 到 70 年代，企业应用处于独立应用系统阶段，当时的企业应用是一种用来替代重复性劳动的简单设计，其目的是用计算机代替孤立的，体力性质的工作环节，将相关联的 企业信息或数据管理起来。这些系统大部分是独立的系统——有独立的数据库、应用服务器、用户界面。因此有时候这类应用也叫“竖井型”的应用。</p>
<p>但是，随着业务和信息的不断扩展，独立应用系统渐渐不能满足企业对 IT 的需求，表现在大量的信息冗余，因为在建立一个新的应用的时候需要重新建立一套数据库；功能的重新设计，相似的功能存在于多个系统中；例如，客户信息在一 个公司中可能有多个拷贝分别存在于多个数据库中，不同时期建立的应用系统所使用的技术也会不同。对于获取客户资料这样的功能，必然存在于多个系统中，而且 在不同的系统中其实现方式可能是 Java/J2EE、Delphi、C/C++。</p>
<p><strong>EAI 阶段 </strong></p>
<p>20 世纪 80 到 90 年代，一些公司或集成商意识到应用集成的价值和必要性。EAI 是一种将多个不同平台、用不同方案建立的异构的应用集成的一种技术和方法。它的目标包括以下几个方面：各个分离的系统间的相互通讯，消除信息孤岛，实现信 息的共享。从功能的角度来看，EAI 包括信息接收、转换、翻译、路由、传播和业务流程管理。从架构上看有两种方式：Hub/Spoke 方式和 Bus 方式。</p>
<p>图 1 所示的 Hub/Spoke 结构使用一个中心代理（Hub）和多个适配器（Spoke）将 Hub 和应用连接起来。适配器负责将应用的数据格式转换成 Hub 可以理解的格式，Hub 将数据再转换成目标系统可以理解的格式，并执行消息的路由。Hub/Spoke 方式的弊端在于只有一个代理中心，当连接的应用种类增加或者消息量增大时，代理中心的性能将成为整个系统的瓶颈，在可扩展性方面也存在着一定的问题。<br><a name="N100CE"></a><strong> 图 1 . Hub/Spoke 结构的 EAI 集成 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image003.jpg" alt=""></p>
<p>图 2 所示的 Bus 结构使用一个中心总线，应用程序通过 Adapter 将消息发送给总线，总线负责消息的路由，接受方的应用程序也有自己的 Adapter 来转换接受到的消息。Bus 结构和 Hub/Spoke 结构的最大区别在于在 Bus 结构中，Adapter 位于应用程序中，而 Hub/Spoke 结构中，Adapter 由 Hub 来统一管理。这样在 Bus 结构中，加入一个新的应用变得很简单，可扩展性得到了很大的提高，但是应用程序方的负担加重了。<br><a name="N100DF"></a><strong> 图 2. Bus 结构的 EAI 集成 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image005.gif" alt=""></p>
<p><strong>SOA 阶段 </strong></p>
<p>SOA 将应用资源看成一个个独立的，自包含并良好定义的服务，通过这些服务的组装，编排可以产生新的应用。每一个服务可以完成一个独立业务功能，并且不依赖于业 务上下文或者其他服务的状态。服务的定义是标准的且被广泛支持的，比如 Web Service。在 SOA 的架构中，人们都用标准的方式来封装自己的服务，使得任何一个客户端程序都可以容易的和后台系统实施连接。而 ESB 是 SOA 架构中的一个核心基石，在几乎所有的 SOA 架构中，都将 ESB 放在核心的位置。图 3 是 IBM SOA Reference architecture，从中我们可以看出 ESB 在一个 SOA 架构中的地位，对该图的详细解释不在本文介绍范围之内，有兴趣的读者可以参考一下 IBM SOA 专区的相关文章。<br><a name="N100F4"></a><strong> 图 3. IBM 的 SOA 参考架构 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image007.gif" alt=""></p>
<p>下面我们来介绍一下 ESB。</p>
<p><a name="N10103"></a><span class="smalltitle"> 什么是 ESB?</span></p>
<p>什么是 ESB？ESB 严格来说不是某一个产品，而是一种框架，设计模式。不同的提供商对 ESB 的理解也各有不同。</p>
<p><em>“ESBs are essentially integration systems, not SOA systems. SOA is about tearing down application silos, but integration systems reinforce those silos. […] an ESB is especially good for bridging to legacy applications, and therefore it is a useful component in a services infrastructure”</em></p>
<p>—-Anne Thomas Manes, Research Director with Burton Group</p>
<p><em>“An Enterprise Service Bus (ESB) is a distributed middleware system for integrating enterprise IT assets using a service-oriented approach.”</em></p>
<p>—-Ron Ten-Hove , Sun Microsystems and JBI Spec Lead</p>
<p><em>“A Web-services-capable infrastructure that supports intelligently directed communication and mediated relationships among loosely coupled and decoupled business components.”</em></p>
<p>–Gartner</p>
<p>IBM 对 ESB 是这样描述的：</p>
<p>“<em>An enterprise service bus (ESB) is a pattern of middleware that unifies and connects services, applications and resources within a business. Put another way, it is the framework within which the capabilities of a business’ applications are made available for reuse by other applications throughout the organization and beyond. The ESB is not a new software product — it’s a new way of looking at how to integrate applications, coordinate resources and manipulate information </em>”</p>
<p>从 IBM 的立场来说，ESB 不仅仅是一个概念，而是一种中间件模式；它不是某个产品，而是一种全新的集成应用，协调资源和操纵信息的框架。</p>
<p>下面来介绍 ESB 或可以称为 ESB 的中间件产品保护一些特征，有些是必须的，有些是可选的：</p>
<ol>
<li><strong> 连接性 </strong>ESB 必须提供一种支持服务交互的桥梁，它必须支持多协议 (protocol) 之间的连接。不仅要提供对消息和面向事件的中间件的支持，还要提供和现有 EAI 技术的连接。连接性是 ESB 不可缺少的特征之一。</li>
<li><strong> 服务交互 </strong>服务交互可以理解为 ESB 的一个目的之一，ESB 作为 SOA 架构的核心，必然要支持服务的交互，要在服务的请求者和提供者架起一个坚实的桥梁，让服务的请求者和提供者只需要关心各自的业务逻辑，而不需要在发布和消 费服务的环节花很大力气。服务交互也是 ESB 的必备特征。</li>
<li><strong> 集成 </strong>集成的概念是对于系统而言的，ESB 不仅要能集成那些很容易封装服务的系统，也要集成不能方便地封装服务的系统，例如 SAP, ERP, CRM, Siebel 等 EAI 系统、遗留系统。集成也是 ESB 的核心特征之一。</li>
<li><strong> 消息处理 </strong>在集成的过程中，必须要面对的是消息处理，在不同的应用系统中，消息的描述格式是不一样的。在集成环境中，必须要提供一种统一的格式来处理系统间的交互， 从 ASBO(Application Specific Business Object ) 到 GBO(Generic Business Object) 之间的互转是 ESB 的核心特征之一。</li>
<li><strong> 管理 </strong>对于一个具有 ESB 特征的产品，管理也是一个重要的方面。例如，当一个服务从一个地址切换到另一个地址，在结构等不发生任何改变的时候，ESB 产品应该提供一个方便的途径适应这种改变。</li>
<li><strong>QoS</strong>对于服务交互来说，QoS 也是一个重要的特征，比如针对不同的服务请求者提供不同质量的服务响应。有些服务的请求需要在事务中完成，有些服务的交互需要保证其可靠性。一个 ESB 产品应该提供给开发者定义 QoS 的接口。</li>
<li><strong> 安全 </strong>安全的必要性不言而喻，系统和系统之间的交互必然需要认证，授权，加密，签名等安全性。一个优秀的 ESB 产品应该提供可靠的，可灵活配置的安全支持。</li>
</ol>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/#ibm-pcon" target="_blank" rel="external">回页首</a></p>
<p><a name="2.IBM 的 ESB 产品 |outline"></a><span class="atitle">IBM 的 ESB 产品 </span></p>
<p>IBM 有三款 ESB 产品：WebSphere ESB (WESB)，WebSphere Message Broker(WMB)，DataPower。这三款 ESB 产品都提供了 ESB 所必备的特征，但是它们各有侧重，WESB 主要构建与 WebSphere Application Server 之上，侧重于对标准协议和消息的支持，更适合于 J2EE，Web-Service 为主要特征的集成环境；WMB 提供了一个高级的 ESB，它构建于 WebSphere Message Queue 之上，提供了百种以上协议的连接和数据格式的转换机制。Datapower 是一款比较新的 ESB 产品，除了提供必备的 ESB 的特性之外，Datapower 更侧重于安全。众所周知，在 XML 的环境中，安全对于性能的影响是巨大的，Datapower 给企业 ESB 提供了强大的安全保障。下面分别介绍这三款 ESB 产品。</p>
<p><a name="N10174"></a><span class="smalltitle">WebSphere ESB</span></p>
<p>从图 4 中可以看出 ESB 构建与 WAS ND 之上，它使用了 WAS ND 及 WAS 对于安全，用户注册表，事务，消息引擎的支持，在其之上增加了对服务集成、消息流处理、建模以及 ESB 编程模型的支持等等。从图中还可以看出 WebSphere Process Server 是构建与 WESB 之上，并扩展了服务编排和流程管理方面的支持。<br><a name="N1017F"></a><strong> 图 4. WESB 在 WAS 产品线的位置 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image009.gif" alt=""></p>
<p>下面介绍在 WESB 上实现一个 SOA ESB 解决方案上的以下九个方面的特点，这九个方面的特点来源于上文中介绍的 ESB 的特性，或者特性的细化：</p>
<ol>
<li><strong><a name="OLE_LINK1"></a> 消息转换 </strong>WESB 所处理的消息为 XML 格式的数据，对于非 XML 结构的数据 WESB 不能处理。对于 XML 结构的数据，在 WESB 的消息流中数据以 SMO(IBM 对 SDO 的扩展，参见参考资料部分了解 SDO 的规范 ) 形式存在，WESB 可以对 XML 消息树的内容进行修改，包括改变某个节点的内容，增加新的节点以及删除某个节点等等。</li>
<li><strong> 支持的协议 </strong>WESB 支持符合 SOA 标准的协议，比如 SOAP/HTTP、SOAP/JMS、WSDL V1.1、UDDI V3.0，WebSphere MQ 等。也就是说 WESB 目前只支持 SOAP 方式来描述服务，传输协议可以是 HTTP、JMS 记忆原生的 WebSphere MQ 的连接。对于多传输协议的基础，建议使用 MB 来做 ESB 的解决方案，参考 MB 的介绍部分。</li>
<li><strong> 消息路由 </strong>消息的路由在 WESB 中有良好的支持，开发环境 WID 中提供了一个节点专门来负责消息路由，WID 也提供了良好的对路由规则定义的开发支持，开发人员可以很容易的定制负责的路由规则。若要实现动态路由的功能，则需要和一个服务的存储单元中来动态的查找 服务，目前 WSRR 是一款优秀的提供该功能的工具（参见参考资料部分了解 WSRR）。WESB 从 V6.1 开始提供了 Endpoint lookup 节点来支持 WSRR 的集成，简化了开发过程。如果要实现简单的动态服务路由的功能，则可把服务的定义存放在数据库中，在 WESB 中通过 DB lookup 来查找服务的 Endpoint, 然后注入到消息流中，WESB V6.1 之前的版本就已经支持与数据库的集成。</li>
<li><strong> 对 Web Service 的支持 </strong>WESB 天生运行在 J2EE 的环境里面，对 Web Service 有着天然的支持。</li>
<li><strong> 事件处理 </strong>在消息流中，我们需要跟踪消息各节点的状态，以满足统计和出错处理的要求，在 WESB 中，通过 CEI 机制来处理消息。（CEI 的介绍请参见参考资料部分）</li>
<li><strong> 与遗留系统的集成 </strong>WESB 通过 Adapter 与遗留系统进行集成，支持 IBM Websphere Adapter 和 JCA Adapter，通过 JCA 我们就可以将遗留系统里面的服务和数据通过标准（SCA/SDO）的形式整合到集成环境中。</li>
<li><strong> 安全方面的支持 </strong>WESB 没有对安全做特殊的处理，使用 WAS 的安全支持来实现 ESB 的安全。</li>
<li><strong> 性能 </strong>WESB 是一个纯 Java 的应用，运行效率上有些限制，同时可以处理的消息流的数量级为几十到几百之间。</li>
<li><strong> 开发和部署 </strong>开发工具是 WID，一个 ESB 的消息流在 WID 中被称为 Mediation Module，它是一个 J2EE 应用，开发和部署工作无异于普通的企业级应用。<br><a name="N101DD"></a><span class="smalltitle">Message Broker</span></li>
</ol>
<p>WMB 是 IBM 的应用整合中间件，是 IBM ESB 架构重要的产品组成部分之一，用于企业应用整合领域。WMB 目前的版本是 6.1.2，它的前身是 MQSeries Integrator。本质上看，WMB 是 MQ 的衍生产品，它使用 MQ 作为内部通信的机制。然后，WMB 提供的接入方式远不止 MQ 一种，包括 JMS、HTTP(S)、SCADA 等常见的新一代接口规范。在消息转化过程中，WMB 能够识别 XML、C 结构、SOAP 等各种自定义的消息格式。</p>
<p>如图 5 所示，WMB 可以分为开发环境和运行环境两大部分。其中开发环境由开发工具（Toolkit）和调试环境（Rational Agent Controller）组成，运行环境是 WMB 核心，也叫 Broker Domain，由三部分组成，配置管理器（Configuration Manager）、用户名服务器（User Name Server）和代理（Broker）。<br><a name="N101EB"></a><strong> 图 5. WMB 组件 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image011.jpg" alt=""></p>
<ul>
<li>代理（Broker）：消息代理是 WMB 的消息处理引擎，它提供 WMB 的所有运行服务，在 Windows 系统上它是一个系统服务，在 Unix 平台上表现为一个后台进程。应用系统利用与 MQ 的连接和队列将消息发送到消息代理。代理与代理之间，代理与配置管理器之间通过普通的 MQ 发生和接受类型的消息通道进行通信。在一个主机上我们可以创建一个或者多个 Broker，每个 Broker 会关联一个数据库，利用数据库存储 Broker 需要和相关的信息，每个 Broker 还需要一个队列管理器，多个 Broker 之间不能共享同一个队列管理器，每个 Broker 必须有自己特定的、唯一的队列管理器。每个 Broker 只能被一个配置管理器控制。</li>
<li>配置管理器（Configuration Manager）：配置管理器是整个 WMB 运行环境中的控制中心，它维护整个 Broker Domain 的配置信息，配置和管理所有代理，增、删、启动、停止消息流，所有的开发工具也是通过配置管理器来部署编译结果的。配置管理器也负责与用户名服务器联系， 配置和管理各种用户权限。配置管理器和其他各个部件之间的接口是 MQ，所以配置管理器也必须是基于 MQ 队列管理器而运行的。</li>
<li>用户名服务器（User Name Server）：用户名服务器是 WMB 运行环境中的可选部分，它可以提供应用程序的接入认证以及订阅主题的访问控制服务。用户名服务器本身是不需要数据库，但必须依赖于队列管理器与其他组件通 信。用户名服务器中的用户信息来自认证数据文件。</li>
<li>开发工具（Toolkit）：开发工具是基于 Eclipse 3.0 的集成开发环境，我们可以在其中开发消息流、消息集、ESQL 代码、Java 代码、映射规则等。通过内置的 MQ Client 与配置管理器连接，并将开发好的执行组件部署到相关的代理中。Eclipse 环境由不同的视图（Perspective）组成，我们在 WMB 中常用的有代理开发视图、代理管理视图等。</li>
<li>调试工具（Rational Agent Controller）：这是 IBM Rational 开发工具标准的调试工具。一般安装在代理所在的服务器一边，开发工具可以连接 RAC，通过它来控制和调试消息流的运行。需要注意的是，Toolkit 可以并行开发，但是对于同一个执行组不能并行调试，因 RAC 的调试过程是排他的。在 WMB6.0 之后 RAC 不需要再单独安装。<br>下面从九个方面来介绍 WMB 在实现一个 SOA ESB 解决方案上的支持的特点：</li>
</ul>
<ol>
<li><strong> 消息转换 </strong>WMB 在消息处理方面功能非常强大，对 XML 格式的消息或非 XML 格式的消息，如 C Header，COBOL 等都有很好的支持。实际上，通过开发消息对应的消息集（Message Set），可以在消息流中对任意格式的消息进行修改。WMB 提供了内置的 mapping 和 database 节点，用户可以通过图形化的方式方便的实现消息的转换或与数据库的交互。</li>
<li><strong> 支持的协议 </strong>WMB 支持所有 WESB 支持的传输协议，除了常用的 HTTP、JMS 等，还对 FTP、Socket、Mobile、Telemetry、Biztalk 和 Tuxedo 等有良好的支持。WMB 与 MQ 有着紧密的联系，对 MQ 的支持不在话下。WMB 内置的功能节点对这些协议提供了很好的支持，仅需配置即可，如图 6 所示。</li>
</ol>
<p><a name="N10220"></a><strong> 图 6. Message Broker 的内置开发节点 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image015.gif" alt=""></p>
<ol>
<li><strong> 消息路由 </strong>WMB 提供了很多功能强大的内置节点支持消息的路由，如 Filter 节点、Label 节点等，在新版本的 WMB 中又引入了 Router 节点，该节点几乎和 WESB 中的 Router 节点一样。若需要实现动态路由，可以使用 WSRR 作为服务的存储，WMB 和 WSRR 有很好的集成，通过 RegistryLookup 和 EndpointLookup 我们可以在消息流中实现动态路由。另外需要指出的是，WMB 可以提供一个消息输入，多个消息输出的功能，可以实现一个消息同时路由到多个输出端。</li>
<li><strong> 对 Web Service 的支持 </strong>在 WMB 中，消息流可以作为 Web Service 暴露出去供外部调用，也可以作为客户端调用外部提供的 Web Service。WMB 不仅提供了内置的 SOAPRequest、SOAPInput 等节点实现对 Web Service 的支持，而且对 WS 扩展，如 WS-Security 和 WS-Addressing 也有良好的支持。</li>
</ol>
<p><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image016.gif" alt=""></p>
<ol>
<li><strong> 事件处理 </strong>在 WMB 中我们可以通过 Trace Service 来记录所发生的事件。Trace 分两种，一种是 User Trace 记录消息流级别的事件，另一种是 Service Trace，可以记录整个 WMB 的事件，如 Broker 的部署执行。WMB 提供了 Trace 内置节点，可以实时的记录流程中消息内容的变化。</li>
<li><strong> 与遗留系统的集成 </strong>WMB 对遗留系统有良好的支持。对 SAP，PeopleSoft 等大型的 EIS 系统，直接提供了内置的节点，通过 JCA Adapter 配置的方式和 EIS 系统交互。对于比较特别的遗留系统，如 CICS、VSAM 等，WMB 提供了丰富的 SupportPacs，客户可以下载并安装。</li>
<li><strong> 安全方面的支持 </strong>WMB 本身提供了两个层次上的安装，一个是部署时安全性，管理部署 bar 文件到 Broker 以及运行 WMB 管理命令的权限控制；另一个是运行时安全，涉及的权限控制包括发送消息到相应的消息流，以及消息流可以访问哪些 MQ 资源和非 MQ 资源，如数据库系统。</li>
<li><strong> 性能 </strong>WMB 底层是使用 C++ 开发的，在性能上相对于 WESB 有很大的提高。同时可以处理的消息数量级为几千到几万之间。</li>
<li><strong> 开发和部署 </strong>开发工具是 WMB Toolkit，我们开发的消息流和消息集被打成 bar 文件通过配置管理器部署到 Broker 中。<br>总的来说，WMB 是 IBM 久经考验的一款消息中间件产品，为异构的 IT 环境提供了统一的连接和转化，其优势如下：</li>
</ol>
<ul>
<li>利用 WebSphere MQ 作为企业消息传递主干，提供了很好的并发性和可靠性</li>
<li>不仅支持各种标准协议，而且支持和 WebSphere 企业应用程序适配器进行集成</li>
<li>支持多种数据格式之间的转换，包括 XML、遗留系统、行业标准和自定义消息格式</li>
<li>针对大量数据处理进行了优化，极大提高了处理速度。<br><a name="N10284"></a><span class="smalltitle">Datapower</span></li>
</ul>
<p>DataPower 是一个硬件产品，看起来像一个盒子。目前 IBM 有三款 Datapower 产品供用户选择。按照进入市场的先后次序，它们分别是：Datapower Accelerator XA35，Datapower Security Gateway XS40， Datapower Integration Appliance XI50，见图 7。<br><a name="N10290"></a><strong> 图 7. IBM 的 Datapower 产品线 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image017.jpg" alt=""></p>
<ul>
<li>XA35 的主要侧重点是 XML 加速，众所周知，在 SOA 的环境中，XML 是应用最广泛的，而对 XML 的解析，加密，解密这些操作让应用服务器来做的话，这是一个很大性能开销，而 XA35 就是要替应用服务器的分担这些 XML 相关的工作，让应用服务器专注于处理业务逻辑；</li>
<li>XS40 的主要侧重点是安全，即负责提供安全的企业网关，及对 XML 攻击的防范。</li>
<li>XI50，从名字上看，主要侧重点是集成功能，是一款高级 ESB 产品，提供了多种协议和数据格式的路由和解析的功能。<br>虽然三款产品各有侧重，但是三款产品的功能也具有包含关系，XS40 包含 XA35 的功能，XI50 包含 XS40 的功能。</li>
</ul>
<p>我们依然从以下九个方面来介绍 Datapower 在实现 ESB 解决方案中的特点。</p>
<ol>
<li><strong> 消息转换 </strong>Datapower 对 XML 消息有强大的支持，但是 Datapower 绝不仅仅支持 XML，我们可以在 Policy 中使用 Transformation 节点来对消息进行任意我们需要的转换，其原理是使用 XSLT 来实现的，开发人员定义自己 XSLT Stylesheet 并在 Transformation 节点中指定，Datapower 负责转换。</li>
<li><strong> 支持的协议 </strong>Datapower 支持和以下传输协议，HTTP，HTTS，WebSphere MQ<br>WebSphere JMS，TIBICO EMS，FTP Poller, FTP Server, NFS 等等。 Datapower 的 MPGW 就是一个处理不同协议的应用系统的互联的服务对象。</li>
<li><strong> 消息路由 </strong>Datapower 支持对服务和消息的路由，根据消息流中的上下文连接将消息动态的分发到不同的消息提供者。但是 Datapower 的动态路由和 WESB 以及 MB 的动态路由还是有区别的，Datapower 的动态路由需要由开发者定义路由的 Map，而 WESB 和 MB 支持在消息头的属性里动态的设置 Endpoint 的地址。目前 Datapower 可以和 WSRR 集成来定义 WS-Proxy（Datapower 中的一种服务对象），但不支持直接和 WSRR 联合实现动态访问 Endpoint 的功能。</li>
<li><strong> 对 Web Service 的支持 </strong>Datapower 的 XMlFirewall 和 WS-Proxy 提供了强大的对 Web Service 的支持，而且 datapower 提供了细粒度的对 Web Service 的控制，可以从服务级 (Service)，端口级 (port)，绑定级 (binding)，操作级 (operation) 来对消息体进行控制。此外，对 WS-Security 也提供了强大的支持。</li>
<li><strong> 事件处理 </strong>Datapower 中可以通过 Probe 的方式来跟踪消息流的中间状态，在 Probe 中，可以看到消息流的每个节点的消息内容。Probe 一般用于开发调试过程，在生产模式下一般不使用，因为使能 Probe 会牺牲一定的效率。Datapower 不支持与 CEI 类似将消息发送到其他应用系统的机制。</li>
<li><strong> 与遗留系统的集成 </strong>Datapower 不支持和 Adapter 的连接，若要与遗留系统的集成，则需要通过其他中间件转换在遗留系统和 Datapower 之间做而桥梁来连接。</li>
<li><strong> 安全方面的支持 </strong>Datapower 的强大之处在于其对安全方面的强有力的支持，它提供对 XML-attack 的原生支持（关于 XML-attack 的知识参见参考资料）；此外，Datapower 可以对 Web Service 提供细粒度的安全支持，包括加密 (Encryption)，解密 (Decryption)，签名 (Sign) 和确认 (Verify)，以及 HTTS 方面的支持。这些支持在 Datapower 上开发起来都异常简单。</li>
<li><p><strong> 性能 </strong>Datapower 无疑是三款 ESB 产品中性能最高的，对 XML 的处理速度达到线速，下图是一组测试结果。如果去处网络传输在其中的比例，对 XML 的处理性能所提高的倍数可达到上百倍。</p>
<table class="ibm-data-table" border="0" cellspacing="0" cellpadding="0"><br><tbody><br><tr><br><th colspan="2" scope="col">Software Solution</th><br><th colspan="2" scope="col">DP Solution</th><br></tr><br><tr><br><td>Avg. response time ( TimeP / N )</td><br><td>XML processing time ( TimeX )</td><br><td>Avg. response time ( TimeP / N )</td><br><td>XML processing time ( TimeX )</td><br></tr><br><tr><br><td>106 ms</td><br><td>96 ms</td><br><td>19 ms</td><br><td>11ms</td><br></tr><br></tbody><br></table>
</li>
<li><p><strong> 开发和部署 </strong>Datapower 的没有相应的开发工具，但是提供了 Web GUI 的管理控制台和 CLI 方式的管理支持。我们在 Web GUI 下开发消息流，开发即部署。</p>
</li>
</ol>
<p>高速的 XML 处理能力和强大的安全支持，是 Datapower 作为 SOA 应用中的 ESB 的重要特色，这个特点使得 Datapower 成为一款举足轻重的 ESB 产品。</p>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/#ibm-pcon" target="_blank" rel="external">回页首</a></p>
<p><a name="N10332"></a><span class="atitle"> 三款产品的比较 </span></p>
<p>从上面的介绍我们可以看出，三款产品都提供了 ESB 的必须的功能，但各有侧重：</p>
<ul>
<li><p>WESB 是一个轻量级的 ESB，侧重于标准协议，SOAP,JMS 等应用的基础，构建于 WASND 基础之上，提供了和 J2EE 应用很好的集成功能；同时由于 WESB 是一个纯 Java 的应用服务器，在性能上也是相对较差一点的 ESB，可并发执行的 Mediation Flow 的数量级在几十个左右。WESB 适合使用于对性能要求不是很高，且遵循标准协议的 SOA 整合环境中。WESB 的优势是提供了和流程服务器 WPS 以及 J2EE 服务器 WAS 良好的整合。WESB 的应用场景见图 8：<br><a name="N10342"></a><strong> 图 8. WESB 的应用场景 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image019.gif" alt=""></p>
</li>
<li><p>WMB 是一款高级的 ESB，提供了比 WESB 多很多的传输协议，数据格式的支持，它所支持几乎大部分常用的数据格式和协议。并且 WMB 提供了良好的扩展功能，开发人员可以在 WMB 基础上开发自己的数据格式解析的节点。WMB 使用 C/C++ 编写，在处理性能上比 ESB 也要高出很多倍，可并发执行的流可以达到上百个或上千个。从图 9 可以看出 WESB 和 WMB 在支持的协议上的区别。<br><a name="N10356"></a><strong> 图 9. WESB 和 WMB 的比较 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image021.gif" alt=""></p>
</li>
</ul>
<p>WMB 应用于对性能要求相对较高，多种复杂协议存在的集成环境中。另外，WMB 构建于 WebSphere Message Queue（WMQ）之上。 WMQ 提供了对异步消息提供了可靠的传送机制，比较适合于信息传输量较大，信息交互频繁的场景中。如图 10 所示：<br><a name="N10368"></a><strong> 图 10. WMB 的使用场景 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image023.gif" alt=""></p>
<ul>
<li>Datapower 是 SOA 中的又一重要的 ESB，在 WESB 和 WMB 中都是用软件来实现 XML 解析和安全支持的，而 Datapower 使用硬件的 XML 解析和加速器，在性能上有了很大的提高。在很多 SOA 的环境里，安全和性能是天平的两端，增加安全势必要牺牲性能；而提高性能则需要牺牲安全。所以在安全和性能要求都比较高的环境中，Datapower 是一首选 ESB，因为 Datapower 可以在实现高性能的同时也保证安全。图 11 是一种 Datapower 的应用场景：<br><a name="N1037C"></a><strong> 图 11. Datapower 的使用场景 </strong><br><img src="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/image025.gif" alt=""></li>
</ul>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/0811_magy_esb/#ibm-pcon" target="_blank" rel="external">回页首</a></p>
<p><a name="N10388"></a><span class="atitle"> 总结 </span></p>
<p>基于上文对三款产品做了详细的比较，我们可以做如下总结，WESB 适用于 J2EE 环境下，对性能要求不是很高的，标遵循标准协议的 SOA 集成；WMB 应用更复杂的集成环境，表现为数据格式多种，传输协议多样，性能要求很高；而在安全和性能要求都很高的应用场景下，选择 Datapower 无疑是最好的选择。下面的图表再次对文中的描述进行总结。</p>
<table class="ibm-data-table" border="0" cellspacing="0" cellpadding="0"><br><tbody><br><tr><br><th scope="col">ESB 功能特点</th><br><th scope="col">WESB 的支持</th><br><th scope="col">MB 的支持</th><br><th scope="col">Datapower</th><br></tr><br><tr><br><td><strong> 消息转换 </strong></td><br><td>XML</td><br><td>XML、非 XML</td><br><td>XML、非 XML</td><br></tr><br><tr><br><td><strong> 支持的协议 </strong></td><br><td>HTTP,JMS, WMQ 等</td><br><td>多达上百种</td><br><td>介于前二者之间</td><br></tr><br><tr><br><td><strong> 消息路由 </strong></td><br><td>强大，灵活</td><br><td>功能强大，灵活</td><br><td>灵活度比前二者稍弱</td><br></tr><br><tr><br><td><strong>Web Service</strong></td><br><td>强大的支持</td><br><td>支持 WS 扩展</td><br><td>强大的支持</td><br></tr><br><tr><br><td><strong> 事件处理 </strong></td><br><td>CEI，可以和外部事件消费系统监控</td><br><td>Trace Service</td><br><td>用于调试 Probe</td><br></tr><br><tr><br><td><strong> 遗留系统的集成 </strong></td><br><td>Adapter</td><br><td>丰富的 SupportPac</td><br><td>特定的遗留系统</td><br></tr><br><tr><br><td><strong> 安全 </strong></td><br><td>依赖 WAS 的安全</td><br><td>部署和运行时两个级别的安全</td><br><td>超强的安全支持</td><br></tr><br><tr><br><td><strong> 性能 </strong></td><br><td>几十到几百每秒</td><br><td>几千到几万每秒</td><br><td>达到线速</td><br></tr><br><tr><br><td><strong> 开发和部署 </strong></td><br><td>WID 集成开发环境</td><br><td>WMB Toolkit</td><br><td>WebGUI</td><br></tr><br></tbody><br></table>]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IBM </tag>
            
            <tag> SOA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[websphere 忘记控制台用户名或是添加删除控制台用户]]></title>
      <url>http://www.ibmer.info/websphere-console-user.html</url>
      <content type="html"><![CDATA[<p>在手动创建was的节点后默认是本地系统认证，即用任何的用户名都可以登录</p>
<p>&nbsp;</p>
<p>如何取消was的控制台认证：</p>
<p>在was  node的安装目录下面</p>
<p>$WAS_Profile_HOME\config\cells</p>
<p>有个安全文件security.xml</p>
<p><span style="white-space: pre;"><a href="/images/wp-uploads/2014/10/wasconsole.jpg"><img src="/images/wp-uploads/2014/10/wasconsole.jpg" alt="wasconsole"></a></span></p>
<p><span style="white-space: pre;">将其</span>改为是false重新启动server</p>
<p>./stopServer server1</p>
<p>./startServer server1</p>
<p>再次访问既可以清除密码</p>
<p>也可以查找这个用户名和密码</p>
<p>&nbsp;</p>
<p>也可以更改$WAS_Profile_HOME\config\cells\security.xml这个文件</p>
<p>将false改为是true</p>
<p><span style="white-space: pre;">”&lt;authDataEntries xmi:id=”JAASAuthData_1238489272531″ alias=”myNode01/oracleDBA” userId=”oraadmin” password=”{xor}bm1sa2pp”/&gt;”，就是存放认证别名为oracleDBA的用户名和密码。</span></p>
<p><span style="white-space: pre;">可以看到在这里密码被重新编码（encode）了，编码的方式是 XOR（eXclusive OR异或），很明显这种并不是一种强加密的算法，仅仅是一种编码而已，所以准确来说WebSphere为了避免密码被明文记录，只是很简单地“编码” （encode）而不是“加密”（encrypt）。</span></p>
<p><span style="white-space: pre;">WebSphere</span>采用的<span style="white-space: pre;">这 种只是编码而不是加密的存放密码形式，就帮助了你了。当然如果你想干坏事的话，WebSphere也算是给自己留下了一个“后门”了 -_-b。嘿嘿嘿，不要以为IBM那帮老爷子就是这么懒，如果阁下真的是要对存放在WebSphere配置文件里面的密码要加密的话（对于广大客户肯定是 有这个诉求的），其实IBM也提供了一种自定义加密算法的插件形式去解决这个问题的</span></p>
<p>&nbsp;</p>
<p>WAS 6.0的编码：</p>
<p>&gt; cd $WAS_INSTALL_DIR/lib</p>
<p>&gt; ../java/bin/java -cp securityimpl.jar:iwsorb.jar::ras.jar:wsexception.jar:bootstrap.jar:emf.jar:ffdc.jar com.ibm.ws.security.util.PasswordEncoder 123456</p>
<p>WAS 6.0的反编码：</p>
<p>&gt; cd $WAS_INSTALL_DIR/lib</p>
<p>&gt; ../java/bin/java -cp securityimpl.jar:iwsorb.jar::ras.jar:wsexception.jar:bootstrap.jar:emf.jar:ffdc.jar com.ibm.ws.security.util.PasswordDecoder {xor}bm1sa2pp</p>
<p>WAS 6.1的编码：</p>
<p>&gt; cd $WAS_INSTALL_DIR/bin\ProfileManagement\plugins\com.ibm.websphere.v61_6.1.200</p>
<p>&gt; java -cp ws_runtime.jar com.ibm.ws.security.util.PasswordEncoder 123456</p>
<p>WAS 6.1的反编码：</p>
<p>&gt; cd $WAS_INSTALL_DIR/bin\ProfileManagement\plugins\com.ibm.websphere.v61_6.1.200</p>
<p>&gt; java -cp ws_runtime.jar com.ibm.ws.security.util.PasswordDecoder {xor}bm1sa2pp</p>
<p>&nbsp;</p>
<p>添加was的控制台认证</p>
<p>在控制台中添加认证<br><span style="white-space: pre;"></span></p>
<p><span style="white-space: pre;"><img src="http://hi.csdn.net/attachment/201202/14/0_1329190917bDmC.gif" alt=""></span></p>
<p><span style="white-space: pre;">添加</span>联合存储库进行设置</p>
<p><img src="http://hi.csdn.net/attachment/201202/14/0_1329190989Erv8.gif" alt=""></p>
<p>添加用户名和密码</p>
<p><img src="http://hi.csdn.net/attachment/201202/14/0_13291926257z39.gif" alt=""></p>
<p>重启server既可以</p>
<p>也可以选择本地的系统用户，这是我们需要在</p>
<p>本地的系统上面添加用户组和相应的用户名</p>
<p>groupadd -g 1002 wasadmin</p>
<p>useradd -g wasadmin wasadmin</p>
<p>passwd wasadmin设置密码</p>
<p>在上面选择联合存储库的时候我们选择本地的系统，</p>
<p>在<img src="http://hi.csdn.net/attachment/201202/14/0_1329193656i4NX.gif" alt=""></p>
<p>添加相应的组和角色</p>
<p>重新启动，再次访问即可。</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[精选面试题之二（线程、数据库、JDBC） ]]></title>
      <url>http://www.ibmer.info/it-test2.html</url>
      <content type="html"><![CDATA[<p><span style="font-size: 14px;"><span style="font-size: 24px; color: #e53333;"> —— </span><span style="color: #e53333; font-size: 24px;">线程编程、数据库理论和Jdbc部分内容 ——</span><br></span></p>
<p><span style="font-size: 14px;"><strong> 数据库的开发应用想必是我们日常所碰到最多的知识点了，大致可分为：oracle、MySQL、SQL Server、Hadoop、</strong></span></p>
<p><span style="font-size: 14px;"><strong>NoSQL、云计算等主流数据库，但随着科技水平的进步和日益紧张的技术追分，人们的节奏逐渐的走向大数据处理的当今时代，Hadoop和NoSQL等大数据的应用已经成为大企业从业人员必备的专业知识之一，Big Data的储备已必不可少。 </strong></span></p>
<p><span style="font-size: 14px;"> 本章主要分析 ：<span style="color: #e53333;"> 线程编程 、 数据库理论知识 和 JDBC 的简要内容</span><br></span></p>
<p><span style="font-size: 14px;"> 每天学一点，日积月累，四个月后的今天，你一定会有很大的收获！</span></p>
<p><span style="font-size: 14px;"><span style="color: #ee33ee;">线程编程部分 ★★★★★</span>：单独讲解线程概念、同异步实现方法及关系、线程锁等；</span></p>
<p><span style="font-size: 14px;"><span style="color: #ee33ee;">数据库理论归纳 ★★★★</span>： 总结PL/SQL语句，使用方法，归纳基本公式，深层次内容有待开发。</span></p>
<p><span style="font-size: 14px;"><span style="color: #ee33ee;">JDBC和XML部分 ★★★ </span>： 重点分析XML的技术构成、应用方面的形式和区别。</span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"> </span></p>
<p>&nbsp;</p>
<p><span style="font-size: 24px; font-family: verdana; color: #00d5ff;">线程编程方面:</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">1</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">sleep() </span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">和</span><span style="font-weight: bold; font-size: 14px; font-family: arial;"> wait() </span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">有什么区别</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">? </span><span style="font-weight: bold; font-size: 13px; font-family: arial;"><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><br></span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">答：</span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">sleep</span><span style="font-size: 14px;">是线程类（</span><span style="font-size: 14px;">Thread</span><span style="font-size: 14px;">）的方法，导致此线程暂停执行指定时间，给执行机会给其他线程，但是监控状态依然保持，</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">到时后会自动恢复。</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">调用</span><span style="font-size: 14px;">sleep</span><span style="font-size: 14px;">不会释放对象锁。</span></span><span style="font-size: 13px; font-family: 'times new roman';"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">wait</span><span style="font-size: 14px;">是</span><span style="font-size: 14px;">Object</span><span style="font-size: 14px;">类的方法，对此对象调用</span><span style="font-size: 14px;">wait</span><span style="font-size: 14px;">方法导致本线程放弃对象锁，进入等待此对象的等待锁定池，</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">只有针对此对象发出</span><span style="font-size: 14px;">notify</span><span style="font-size: 14px;">方法（或</span><span style="font-size: 14px;">notifyAll</span><span style="font-size: 14px;">）后本线程才进入对象锁定池准备获得对象锁进入运行状态。</span></span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">2</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、同步和异步有何异同，在什么情况下分别使用他们？举例说明。</span><span style="font-weight: bold; font-size: 12px; font-family: 'times new roman';"><br></span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">如果数据将在线程间共享。例如正在写的数据以后可能被另一个线程读到，或者正在读的数据可能已经被另一个线程写过了，</span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">那么这些数据就是共享数据，必须进行同步存取。</span><span style="font-size: 12px; font-family: 'times new roman';"><br></span><span style="font-size: 14px; font-family: 'times new roman';">当应用程序在对象上调用了一个需要花费很长时间来执行的方法，并且不希望让程序等待方法的返回时，就应该使用异步编程，</span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">在很多情况下采用异步途径往往更有效率。</span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">3</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、启动一个线程是用</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">run()</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">还是</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">start()?</span><span style="font-weight: bold; font-size: 13px; font-family: arial;"><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><span style="font-size: 14px;"><span style="color: #ee33ee;">★</span></span><br></span><span style="font-weight: bold; font-size: 14px; font-family: arial;">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">启动一个线程是调用</span><span style="font-size: 14px;">start()</span><span style="font-size: 14px;">方法，使线程所代表的虚拟处理机处于可运行状态，这意味着它可以由</span><span style="font-size: 14px;">JVM</span><span style="font-size: 14px;">调度并执行。</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">这并不意味着线程就会立即运行。</span><span style="font-size: 14px;">run()</span><span style="font-size: 14px;">方法可以产生必须退出的标志来停止一个线程。</span></span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">4</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、当一个线程进入一个对象的一个</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">synchronized</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">方法后，其它线程是否可进入此对象的其它方法</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">?</span><span style="font-weight: bold; font-size: 13px; font-family: arial;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: arial;">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">不能，一个对象的一个</span><span style="font-size: 14px;">synchronized</span><span style="font-size: 14px;">方法只能由一个线程访问。</span></span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">5</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、请说出你所知道的线程同步的方法。</span><span style="font-weight: bold; font-size: 12px; font-family: 'times new roman';"><br></span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">wait():</span><span style="font-size: 14px;">使一个线程处于等待状态，并且释放所持有的对象的</span><span style="font-size: 14px;">lock</span><span style="font-size: 14px;">。</span></span><span style="font-size: 13px; font-family: 'times new roman';"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">sleep():</span><span style="font-size: 14px;">使一个正在运行的线程处于睡眠状态，是一个静态方法，</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;"> 调用此方法要捕捉</span><span style="font-size: 14px;">InterruptedException</span><span style="font-size: 14px;">异常。</span></span><span style="font-size: 13px; font-family: 'times new roman';"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">notify():</span><span style="font-size: 14px;">唤醒一个处于等待状态的线程，注意的是在调用此方法的时候，</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;"> 并不能确切的唤醒某一个等待状态的线程，而是由</span><span style="font-size: 14px;">JVM</span><span style="font-size: 14px;">确定唤醒哪个线程，且不是按优先级。</span></span><span style="font-size: 13px; font-family: 'times new roman';"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">Allnotity():</span><span style="font-size: 14px;">唤醒所有处入等待状态的线程，注意并不是给所有唤醒线程一个对象的锁，而是让它们竞争。</span></span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">6</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、多线程有几种实现方法</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">,</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">都是什么</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">?</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">同步有几种实现方法</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">,</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">都是什么</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">? </span><span style="font-weight: bold; font-size: 13px; font-family: arial;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">答：</span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">多线程有两种实现方法，分别是继承</span><span style="font-size: 14px;">Thread</span><span style="font-size: 14px;">类与实现</span><span style="font-size: 14px;">Runnable</span><span style="font-size: 14px;">接口</span></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">。</span><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">同步的实现方面有两种，分别是</span><span style="font-size: 14px;">synchronized,wait</span><span style="font-size: 14px;">与</span><span style="font-size: 14px;">notify</span></span><span style="font-size: 14px;"> 。</span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">7</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、线程的基本概念、线程的基本状态以及状态之间的关系</span><span style="font-weight: bold; font-size: 12px; font-family: arial;"><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><br></span><span style="font-weight: bold; font-size: 14px; font-family: arial;">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">线程指在程序执行过程中，能够执行程序代码的一个执行单位，每个程序至少都有一个线程，也就是程序本身。</span><span style="font-size: 12px; font-family: arial;"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">Java</span><span style="font-size: 14px;">中的线程有五种状态分别是：创建、运行、就绪、阻塞、结束</span></span><span style="font-size: 14px; font-family: 'times new roman';">。</span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: arial;">8</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">、简述</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">synchronized</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">和</span><span style="font-weight: bold; font-size: 14px; font-family: arial;">java.util.concurrent.locks.Lock</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">的异同</span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">？</span><span style="font-weight: bold; font-size: 12px; font-family: arial;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: 'times new roman';">答：</span><span style="font-size: 13px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">主要相同点：</span><span style="font-size: 14px;">Lock</span><span style="font-size: 14px;">能完成</span><span style="font-size: 14px;">synchronized</span><span style="font-size: 14px;">所实现的所有功能</span></span><span style="font-size: 13px; font-family: 'times new roman';"><br></span><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">主要不同点：</span><span style="font-size: 14px;">Lock</span><span style="font-size: 14px;">有比</span><span style="font-size: 14px;">synchronized</span><span style="font-size: 14px;">更精确的线程语义和更好的性能。</span><span style="font-size: 14px;">synchronized</span><span style="font-size: 14px;">会自动释放锁，</span></span></p>
<p><span style="font-size: 13px; font-family: 'times new roman';"><span style="font-size: 14px;">而</span><span style="font-size: 14px;">Lock</span><span style="font-size: 14px;">一定要求程序员手工释放，并且必须在</span><span style="font-size: 14px;">finally</span><span style="font-size: 14px;">从句中释放。</span></span><span style="color: #333333; font-size: 14px;"><br></span></p>
<p><span style="font-size: 14px;"><strong>9、java中有几种方法可以实现一个线程？用什么关键字修饰同步方法? stop()和suspend()方法为何不推荐使用？</strong></span></p>
<p><span style="font-size: 14px;">答：有两种实现方法，分别是继承Thread类与实现Runnable接口；<br></span></p>
<p><span style="font-size: 14px;">用synchronized关键字修饰同步方法； 反对使用stop()，是因为它不安全。它会解除由线程获取的所有锁定，而且如果对象处于一种不连贯状态，那么其他线程能在那种状态下检查和修改它们。结果很难检查出真正的问题所在；</span></p>
<p>&nbsp;</p>
<p><span style="color: #00d5ff; font-size: 24px; font-family: '宋体';"><span style="font-family: verdana;">数据库理论归纳：</span></span></p>
<p><span style="font-size: 14px;"><strong>执行顺序：</strong></span></p>
<p><pre class="hide sh_java snippet-formatted sh_sourceCode">  select… from… where… group by… having …order by…的执行顺序<br></pre><br>（from）（where）（group by）（having）（select）（order by）</p>
<p>增、删、改、建 :</p>
<p>建：create table tabname(col1 , col2 …);</p>
<p>增：insert into tabname values (values);</p>
<p>改：update tabname set colname = values , colname = values where colname = values;</p>
<p>(注意，修改多列值的时候，要用 逗号 隔开，不可以用 and 连接)</p>
<p>删：delete from tabname where condition … delete tabname .</p>
<p>日期函数转换：</p>
<p>to_char 数值转换字符</p>
<p>to_number 字符转换数值</p>
<p>to_date 转换日期格式</p>
<p>非关联子查询： select … from …where ..in + (select语句</p>
<p>如：select id from account where …);</p>
<p>关联子查询 ： select … from …where …exists + (select语句</p>
<p>如：select 1 from account where …);</p>
<p>交叉连接 ： cross join 每个记录相互连接得出匹配和不匹配问题</p>
<p>内连接 ： (inner) join 解决匹配问题。</p>
<p>外连接 : (outer) join 解决不匹配问题。</p>
<p>拓展-&gt; 左连接 右连接 : left join ; right join 区分匹配表、驱动表的关系</p>
<p>集合运算符：</p>
<p>union/ union all 并集 （集合不重复／集合存在重复）</p>
<p>intersect 交集 (取两个表共同存在的集合元素)</p>
<p>minus 差值 (一个表是另一个表的子集)</p>
<p>排名分页 :</p>
<p>rownum 解决对结果集进行编号排列</p>
<p>(rowid) 通常和 index 索引 相提</p>
<p>约束（constraint）:</p>
<p>主键 : primary key 约束名可不写，不可为null和重复值</p>
<p>唯一键：unique key 理解联合唯一与联合主键的写法, 可为null值 外键 ：references …(表级约束)</p>
<p>列级约束：foreign key … references …</p>
<p>检查 ：check 理解联合检查的写法</p>
<p>非空 ：not null 只有列级约束的形式</p>
<p>事务： transaction</p>
<p>数据定义语言： Data Definition Language</p>
<p>数据操作语言： Data Manipulation Language</p>
<p>事务控制语言： Transaction Control Language</p>
<p>数据查询语言： Data Query Language</p>
<p>数据控制语言： Data Control Languageon</p>
<p>delete cascade 级联删除</p>
<p>on delete set null 删除值 置空</p>
<p><span style="font-size: 14px;"><strong>视图 </strong>：</span></p>
<p><span style="font-size: 14px;"> 创建： create or replace view view_name as/is + select 语句</span></p>
<p><span style="font-size: 14px;"> 视图恢复：alter view view_name compile</span></p>
<p><span style="font-size: 14px;"> 删除： drop view view_name</span></p>
<p><span style="font-size: 14px;">with check option 检查插入记录是否符合where条件</span></p>
<p><span style="font-size: 14px;">with read only 只能查询，不能做DML操作</span></p>
<p><span style="font-size: 14px;"><strong>索引</strong> ： create index ind_name on tabname(colname…).</span></p>
<p><span style="font-size: 14px;">对视图可以做 desc 和 select 操作 ,对索引则不可以。</span></p>
<p><span style="font-size: 14px;"> </span></p>
<p><span style="font-size: 14px;"><strong>序列号</strong>: create sequence seq_name</span></p>
<p><span style="font-size: 14px;"> start with …起始值 increment by …递增规则</span></p>
<p><span style="font-size: 14px;"> maxvalue …循环最大值 minvalue …循环最小值 </span></p>
<p><span style="font-size: 14px;"> cycle..循环 cache 20 数据缓冲数.</span></p>
<p><span style="font-size: 14px;">序列号循环的最后一个： select seq_name.currval from dual.</span></p>
<p><span style="font-size: 14px;">查询的下一个 ： select seq_name.nextval from dual.</span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"><strong>事务： <span style="color: #ee33ee;">★★</span><span style="color: #ee33ee;">★★</span></strong><br></span></p>
<p><span style="font-size: 14px;"> 四个特性：atomic(原子性) consitent(一致性) insulation(隔离性) duration(持久性)<br></span></p>
<p><span style="font-size: 14px;"> 理解 ：commit 提交 rollback 回滚 savepoint 保留点<br></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"><strong>PL/SQL</strong></span></p>
<p><span style="font-size: 14px;">打印格式： dbms_output.put_line(一个参数，类型为 字符);</span></p>
<p><span style="font-size: 14px;">set serveroutput on (在一个session里有效，重新连接需要重新设置）</span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"><strong>数据库上的并发连接</strong></span></p>
<p><span style="font-size: 14px;">统计server process (username) 的个数</span></p>
<p><span style="font-size: 14px;">1、 ps -ef|grep username|wc -l (在telnet/oracle环境下运行)</span></p>
<p><span style="font-size: 14px;">2、select count(*) from v$session where username is null. (在SQL环境下执行)</span></p>
<p><span style="font-size: 14px;"><strong>PL/SQL 书写格式<span style="color: #ee33ee;">★★</span><span style="color: #ee33ee;">★★</span></strong></span></p>
<p><span style="font-size: 14px;">declare 变量声明</span></p>
<p><span style="font-size: 14px;">… …</span></p>
<p><span style="font-size: 14px;">begin 执行部分</span></p>
<p><span style="font-size: 14px;">… …</span></p>
<p><span style="font-size: 14px;">exception 异常处理</span></p>
<p><span style="font-size: 14px;">… …</span></p>
<p><span style="font-size: 14px;">end; 结束块</span></p>
<p><span style="font-size: 14px;">理解 loop循环 if循环 while循环的写法</span></p>
<p><span style="font-size: 14px;">DDL语句 只能用本地动态SQL执行 execute immediate</span></p>
<p><span style="font-size: 14px;">DML语句 可静态写法和动态写法 （相对而言 静态写法效率更高）</span></p>
<p><span style="font-size: 14px;"> </span></p>
<p><span style="font-size: 14px;"><strong>游标</strong> : cursor cur_name is …</span></p>
<p><span style="font-size: 14px;">书写处理： declare(声明游标)… open(打开游标)… fetch(提取游标)… 判断部分… close(关闭游标)</span></p>
<p><span style="font-size: 14px;">关联记录; type type_name is record (… …)</span></p>
<p><span style="font-size: 14px;">关联数组： type type_name is table of element_type&lt;not null&gt; index by &lt;binary_integer / pls_integer / varchar2&gt;</span></p>
<p><span style="font-size: 14px;"><strong>过程</strong> procedure : 本身没有返回值 ／ 调用过程，一条语句</span></p>
<p><span style="font-size: 14px;">create or replace procedure XX…</span></p>
<p><span style="font-size: 14px;"><strong>函数</strong> function : 本身有返回值 ／ 调用函数，写表达式</span></p>
<p><span style="font-size: 14px;">create or replace function XX… return values </span></p>
<p><span style="font-size: 14px;"><strong>包和包体</strong> package / package body</span></p>
<p><span style="font-size: 14px;">create or replace package / package body XX…</span></p>
<p><span style="font-size: 14px;"> </span></p>
<p><span style="font-size: 14px;"><strong>异常部分</strong>： 预定义异常、非预定义异常 和 自定义异常</span></p>
<p><span style="font-size: 14px;">dbms_output.put_line(sqlcode) : 查询异常编号</span></p>
<p><span style="font-size: 14px;">dbms_output.put_line(sqlerrm) : 查询异常信息</span></p>
<p><span style="font-size: 12px; font-family: '宋体';"><span style="font-size: 14px;">在</span><span style="font-size: 14px;">ORACLE</span><span style="font-size: 14px;">大数据量下的分页解决方法。一般用截取</span><span style="font-size: 14px;">ID</span><span style="font-size: 14px;">方法，还有是三层嵌套方法。 </span></span><span style="font-size: 12px; font-family: '宋体';"><br></span><span style="font-size: 12px; font-family: '宋体';"><span style="font-size: 14px;">答</span><span style="font-size: 14px;">:</span><span style="font-size: 14px;">一种分页方法 </span></span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="color: #00d5ff; font-size: 24px; font-family: '宋体';"><span style="font-family: verdana;">JDBC/XML知识：</span></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"><strong>mysql数据库使用命令：<span style="color: #ee33ee;">★★</span><span style="color: #ee33ee;">★</span></strong></span></p>
<p><span style="font-size: 14px;">登录mysql数据库： mysql -uroot;</span></p>
<p><span style="font-size: 14px;">查询但前数据库信息： show databases;</span></p>
<p><span style="font-size: 14px;">创新新的数据库： create database 库名 default character set utf8;</span></p>
<p><span style="font-size: 14px;">使用数据库： use 库名；</span></p>
<p><span style="font-size: 14px;"><strong>注意： 必须要先敲 mysql -uroot 后 use 库名 方能执行接下来的命令，否则你会看到一系列的报错信息。</strong><br></span></p>
<p><span style="font-size: 14px;">查看当前数据库存在的表： show tables;</span></p>
<p><span style="font-size: 14px;">建表 : create table (<strong>c1…auto_increment**</strong> ,c2 …, c3…**) type = innodb;<br></span></p>
<p><span style="font-size: 14px;"> (type = innodb 支持事务 auto_increment 自增长列)</span></p>
<p><span style="font-size: 14px;">查询表 : 用户和oracle一样 select * from tabname ;</span></p>
<p><span style="font-size: 14px;">插入 : 用户和oracle一样 insert into tabname<strong>(c2…, c3…**</strong>)<strong> values(</strong>… …<strong>**)</strong>;<br></span></p>
<p><span style="font-size: 14px;"><strong>注：auto_increment **</strong>表明的列无须输入。**</span></p>
<p>&nbsp;</p>
<p><span style="font-size: 14px;"><strong>1、JDBC：如何控制事务？</strong></span></p>
<p><span style="font-size: 14px;"><strong>A： conn.setAutoCommit(false);</strong></span></p>
<p><span style="font-size: 14px;"> 当值为false时，表示禁止自动提交。 在默认情况下，JDBC驱动程序会在每一个更新操作语句之后</span></p>
<p><span style="font-size: 14px;">自动添加commit语句，如果调用了setAutoCommit(false),则驱动程序不再添加commit语句了。</span></p>
<p><span style="font-size: 14px;"><strong> B： conn.commit();
</strong></span></p>
<p><span style="font-size: 14px;">提交事务。即驱动程序会向数据库发送一个commit语句。</span></p>
<p><span style="font-size: 14px;"><strong>C： conn.rollback();</strong></span></p>
<p><span style="font-size: 14px;"> 回滚事务。即驱动程序会向数据库发送一个rollback语句。</span></p>
<p>&nbsp;</p>
<p><span style="font-weight: bold; font-size: 14px; font-family: verdana;">2</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">、</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">Class.forName</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">的作用</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';"><span style="font-family: 'times new roman';"><strong>如何使用jdbc的三个对象</strong></span></span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 12px; font-family: verdana;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">答：</span><span style="font-size: 14px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">调用该访问返回一个以字符串指定类名的类的对象。</span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">Connection: 负责建立连接，获得连接.(java程序与数据库之间的连接)<br>Statement:负责发送sql给数据库，创建statement.（子接口：preparedStatement）<br>ResultSet: 负责封装数据库返回的查询的结果. <strong>
</strong></span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';"> </span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: verdana;">3</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">、</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">Jdo</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">是什么</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">? </span><span style="font-weight: bold; font-size: 13px; font-family: verdana;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">答：</span><span style="font-size: 13px; font-family: arial;"><br></span></p>
<p><span style="font-size: 14px; font-family: arial;">JDO</span><span style="font-size: 14px; font-family: 'times new roman';">是</span><span style="font-size: 14px; font-family: arial;">Java</span><span style="font-size: 14px; font-family: 'times new roman';">对象持久化的新的规范，为</span><span style="font-size: 14px; font-family: arial;">java data object</span><span style="font-size: 14px; font-family: 'times new roman';">的简称</span><span style="font-size: 14px; font-family: arial;">,</span><span style="font-size: 14px; font-family: 'times new roman';">也是一个用于存取某种数据仓库中的对象的标准化</span><span style="font-size: 14px; font-family: arial;">API</span><span style="font-size: 14px; font-family: 'times new roman';">。</span></p>
<p><span style="font-size: 14px; font-family: arial;">JDO</span><span style="font-size: 14px; font-family: 'times new roman';">提供了透明的对象存储，因此对开发人员来说，存储数据对象完全不需要额外的代码（如</span><span style="font-size: 14px; font-family: arial;">JDBC API</span><span style="font-size: 14px; font-family: 'times new roman';">的使用）。</span><span style="font-size: 13px; font-family: 'times new roman';"><br></span></p>
<p><span style="font-size: 14px; font-family: 'times new roman';">另外，</span><span style="font-size: 14px; font-family: arial;">JDO</span><span style="font-size: 14px; font-family: 'times new roman';">很灵活，因为它可以在任何数据底层上运行。</span></p>
<p><span style="font-size: 14px; font-family: arial;">JDBC</span><span style="font-size: 14px; font-family: 'times new roman';">只是面向关系数据库（</span><span style="font-size: 14px; font-family: arial;">RDBMS</span><span style="font-size: 14px; font-family: 'times new roman';">）</span><span style="font-size: 14px; font-family: arial;">JDO</span><span style="font-size: 14px; font-family: 'times new roman';">更通用，提供到任何数据底层的存储功能，比如关系数据库、文件、</span><span style="font-size: 14px; font-family: arial;">XML</span><span style="font-size: 14px; font-family: 'times new roman';">以及对象数据库（</span><span style="font-size: 14px; font-family: arial;">ODBMS</span><span style="font-size: 14px; font-family: 'times new roman';">）等等，使得应用可移植性更强。</span></p>
<p><span style="color: #e53333;"><strong>课上讲解XML技术知识的很少，但是对于企业面试过程中这一方面的运用是很广泛的，大家一定要重视XML文本的运用操作。</strong></span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: verdana;">4</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">、</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">xml</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">有哪些解析技术</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">区别是什么</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 12px; font-family: verdana;"><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><br></span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">答：</span><span style="font-size: 13px; font-family: '宋体';"><br></span></p>
<p><span style="font-size: 14px; font-family: '宋体';">有</span><span style="font-size: 14px; font-family: verdana;">DOM,SAX,STAX</span><span style="font-size: 14px; font-family: '宋体';">等</span><span style="font-size: 12px; font-family: verdana;"><br></span><span style="font-size: 14px; font-family: verdana;">DOM:</span><span style="font-size: 14px; font-family: '宋体';">处理大型文件时其性能下降的非常厉害。这个问题是由</span><span style="font-size: 14px; font-family: verdana;">DOM</span><span style="font-size: 14px; font-family: '宋体';">的树结构所造成的，这种结构占用的内存较多，</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">而且</span><span style="font-size: 14px; font-family: verdana;">DOM</span><span style="font-size: 14px; font-family: '宋体';">必须在解析文件之前把整个文档装入内存</span><span style="font-size: 14px; font-family: verdana;">,</span><span style="font-size: 14px; font-family: '宋体';">适合对</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">的随机访问</span><span style="font-size: 14px; font-family: verdana;">SAX:</span><span style="font-size: 14px; font-family: '宋体';">不现于</span><span style="font-size: 14px; font-family: verdana;">DOM,SAX</span><span style="font-size: 14px; font-family: '宋体';">是事件驱动型的</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">解析方式。</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">它顺序读取</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件，不需要一次全部装载整个文件。</span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: verdana;">5</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">、你在项目中用到了</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">xml</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">技术的哪些方面</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">如何实现的</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">?</span><span style="font-weight: bold; font-size: 12px; font-family: verdana;"><br></span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">答：</span><span style="font-size: 13px; font-family: '宋体';"><br></span></p>
<p><span style="font-size: 14px; font-family: '宋体';">用到了数据存贮，信息配置两方面。</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">在做数据交换平台时，将不能数据源的数据组装成</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件，然后将</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件压缩打包加密后通过网络传送给接收者，</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">接收解密与解压缩后再同</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件中还原相关信息进行处理。在做软件配置时，利用</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">可以很方便的进行，</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">软件的各种配置参数都存贮在</span><span style="font-size: 14px; font-family: verdana;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件中。</span></p>
<p><span style="font-size: 12px; font-family: verdana;"> </span></p>
<p><span style="font-weight: bold; font-size: 14px; font-family: verdana;">6</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">、</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">XML</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">文档定义有几种形式？它们之间有何本质区别？解析</span><span style="font-weight: bold; font-size: 14px; font-family: verdana;">XML</span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">文档有哪几种方式？</span><span style="font-weight: bold; font-size: 13px; font-family: verdana;"><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><span style="font-size: 14px;"><span style="color: #ee33ee;">★★</span></span><br></span><span style="font-weight: bold; font-size: 14px; font-family: '宋体';">答：</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">两种形式</span><span style="font-size: 14px; font-family: arial;"> ：dtd schema</span><span style="font-size: 14px; font-family: '宋体';">。</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">本质区别 </span><span style="font-size: 14px; font-family: arial;">：schema</span><span style="font-size: 14px; font-family: '宋体';">本身是</span><span style="font-size: 14px; font-family: arial;">xml</span><span style="font-size: 14px; font-family: '宋体';">的，可以被</span><span style="font-size: 14px; font-family: arial;">XML</span><span style="font-size: 14px; font-family: '宋体';">解析器解析</span><span style="font-size: 14px; font-family: arial;">(</span><span style="font-size: 14px; font-family: '宋体';">这也是从</span><span style="font-size: 14px; font-family: arial;">DTD</span><span style="font-size: 14px; font-family: '宋体';">上发展</span><span style="font-size: 14px; font-family: arial;">schema</span><span style="font-size: 14px; font-family: '宋体';">的根本目的</span><span style="font-size: 14px; font-family: arial;">)</span><span style="font-size: 14px; font-family: '宋体';">。</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">解析文档方式：有</span><span style="font-size: 14px; font-family: arial;">DOM,SAX,STAX</span><span style="font-size: 14px; font-family: '宋体';">等</span><span style="font-size: 13px; font-family: arial;"><span style="font-size: 14px;">。</span><br></span><span style="font-size: 14px; font-family: arial;">DOM:</span><span style="font-size: 14px; font-family: '宋体';">处理大型文件时其性能下降的非常厉害。这个问题是由</span><span style="font-size: 14px; font-family: arial;">DOM</span><span style="font-size: 14px; font-family: '宋体';">的树结构所造成的，这种结构占用的内存较多，</span></p>
<p><span style="font-size: 14px; font-family: '宋体';">而且</span><span style="font-size: 14px; font-family: arial;">DOM</span><span style="font-size: 14px; font-family: '宋体';">必须在解析文件之前把整个文档装入内存</span><span style="font-size: 14px; font-family: arial;">,</span><span style="font-size: 14px; font-family: '宋体';">适合对</span><span style="font-size: 14px; font-family: arial;">XML</span><span style="font-size: 14px; font-family: '宋体';">的随机访问</span><span style="font-size: 12px; font-family: arial;"><span style="font-size: 14px;">。</span><br></span><span style="font-size: 14px; font-family: arial;">SAX:</span><span style="font-size: 14px; font-family: '宋体';">不现于</span><span style="font-size: 14px; font-family: arial;">DOM,SAX</span><span style="font-size: 14px; font-family: '宋体';">是事件驱动型的</span><span style="font-size: 14px; font-family: arial;">XML</span><span style="font-size: 14px; font-family: '宋体';">解析方式。它顺序读取</span><span style="font-size: 14px; font-family: arial;">XML</span><span style="font-size: 14px; font-family: '宋体';">文件，不需要一次全部装载整个文件。</span></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解读大型网站系统架构的演化]]></title>
      <url>http://www.ibmer.info/web-system-architecture.html</url>
      <content type="html"><![CDATA[<p><strong>前言</strong></p>
<p>一个成熟的大型网站（如淘宝、京东等）的系统架构并不是开始设计就具备完整的高性能、高可用、安全等特性，它总是随着用户量的增加，业务功能的扩展 逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。所以成熟的系统 架构是随业务扩展而完善出来的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如淘宝，要解决海量的商品信息的搜索、下单、支付，例如腾讯， 要解决数亿的用户实时消息传输，百度它要处理海量的搜索请求，他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景下， 找出其中共用的技术，这些技术和手段可以广泛运行在大型网站系统的架构中，下面就通过介绍大型网站系统的演化过程，来认识这些技术和手段。</p>
<p><strong>一、最开始的网站架构</strong></p>
<p>最初的架构，应用程序、数据库、文件都部署在一台服务器上，如图：</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/251844417179867.png" target="_blank" rel="external"><img src="http://s4.51cto.com/wyfs02/M02/4A/68/wKioL1QkyIWjxDo1AAAugwWJ8no127.jpg" alt="image" title="image"></a></p>
<p><strong>二、应用、数据、文件分离</strong></p>
<p>随着业务的扩展，一台服务器已经不能满足性能需求，故将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/251844429987826.png" target="_blank" rel="external"><img src="http://s2.51cto.com/wyfs02/M02/4A/67/wKiom1QkyGDRk94oAABCAhRoNtU753.jpg" alt="image" title="image"></a></p>
<p><strong>三、利用缓存改善网站性能</strong></p>
<p>在硬件优化性能的同时，同时也通过软件进行性能优化，在大部分的网站系统中，都会利用缓存技术改善系统的性能，使用缓存主要源于热点数据的存在，大 部分网站访问都遵循28原则（即80%的访问请求，最终落在20%的数据上），所以我们可以对热点数据进行缓存，减少这些数据的访问路径，提高用户体验。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/251844453265971.png" target="_blank" rel="external"><img src="http://s1.51cto.com/wyfs02/M00/4A/69/wKioL1QkyIXyP2K7AABwYv1TtBs474.jpg" alt="image" title="image"></a></p>
<p>缓存实现常见的方式是本地缓存、分布式缓存。当然还有CDN、反向代理等，这个后面再讲。本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存 在内存中，也可以存在文件，OSCache就是常用的本地缓存组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。分布式缓存的特点 是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Membercache、 Redis。</p>
<p><strong>四、使用集群改善应用服务器性能</strong></p>
<p>应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/251844466543242.png" target="_blank" rel="external"><img src="http://s3.51cto.com/wyfs02/M00/4A/69/wKioL1QkyIaR7C8XAACLfahuTnI156.jpg" alt="架构4" title="架构4"></a></p>
<p>常用的负载均衡技术硬件的有F5，价格比较贵，软件的有LVS、Nginx、HAProxy。LVS是四层负载均衡，根据目标地址和端口选择内部服 务器，Nginx和HAProxy是七层负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx和HAProxy，性能要高些，而 Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。</p>
<p><strong>五、数据库读写分离和分库分表</strong></p>
<p>随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分表，读写分离顾名思义就是将数据库分为读库和写库，通过主 备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切换则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务不同来切换，如用 户业务、商品业务相关的表放在不同的数据库中。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851195604361.png" target="_blank" rel="external"><img src="http://s6.51cto.com/wyfs02/M00/4A/67/wKiom1QkyGHwlv7QAABpN1zl2tQ141.jpg" alt="架构3" title="架构3"></a></p>
<p><strong>六、使用CDN和反向代理提高网站性能</strong></p>
<p>假如我们的服务器都部署在成都的机房，对于四川的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于四川和北京分别属于电信和联通的不 同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到成都的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用 CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、 网宿。</p>
<p>而反向代理，则是部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有没有缓存数据才会继续走应用服务器获取，也减少了获取数据的成本。反向代理有Squid，Nginx。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851235298806.png" target="_blank" rel="external"><img src="http://s4.51cto.com/wyfs02/M00/4A/67/wKiom1QkyGHTCuGlAABuWG8awrE443.jpg" alt="架构5" title="架构5"></a></p>
<p><strong>七、使用分布式文件系统</strong></p>
<p>用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求。需要分布式的文件系统支撑。常用的分布式文件系统有NFS。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851267487324.png" target="_blank" rel="external"><img src="http://s8.51cto.com/wyfs02/M01/4A/69/wKioL1QkyIaQzgI5AABsg8M1ffA790.jpg" alt="架构5.5" title="架构5.5"></a></p>
<p><strong>八、使用NoSql和搜索引擎</strong></p>
<p>对于海量数据的查询，我们使用nosql数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NOSQL有mongodb和redis，搜索引擎有lucene。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851300927412.png" target="_blank" rel="external"><img src="http://s1.51cto.com/wyfs02/M01/4A/69/wKioL1QkyIfAbMbWAAB_Voh59gU232.jpg" alt="架构6" title="架构6"></a></p>
<p><strong>九、将应用服务器进行业务拆分</strong></p>
<p>随着业务进一步扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者同享数据库来实现。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851337179286.png" target="_blank" rel="external"><img src="http://s9.51cto.com/wyfs02/M01/4A/67/wKiom1QkyGLxD04-AACPlogzq2o857.jpg" alt="架构7" title="架构7"></a></p>
<p><strong>十、搭建分布式服务</strong></p>
<p>这时我们发现各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分部式服务框架搭建分布式服务。淘宝的Dubbo是一个不错的选择。</p>
<p><a href="http://images.cnitblog.com/blog/352511/201409/260851374351189.png" target="_blank" rel="external"><img src="http://s2.51cto.com/wyfs02/M01/4A/67/wKiom1QkyGLBSovRAACiShSfWr8188.jpg" alt="架构8" title="架构8"></a></p>
<p><strong>小结</strong></p>
<p>大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些技术和手段。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java web开发 高并发处理]]></title>
      <url>http://www.ibmer.info/java-web-concurrent.html</url>
      <content type="html"><![CDATA[<p>ava处理高并发高负载类网站中数据库的设计方法（java教程,java处理大量数据，java高负载数据）</p>
<p><span style="color: #ff0000;"><strong>一：高并发高负载类网站关注点之数据库</strong> </span></p>
<p>没错,首先是数据库,这是大多数应用所面临的首个SPOF。尤其是Web2.0的应用，数据库的响应是首先要解决的。<br>一般来说MySQL是最常用的，可能最初是一个mysql主机，当数据增加到100万以上，那么，MySQL的效能急剧下降。常用的优化措施是 M-S（主-从）方式进行同步复制，将查询和操作和分别在不同的服务器上进行操作。我推荐的是M-M-Slaves方式，2个主Mysql，多个 Slaves，需要注意的是，虽然有2个Master，但是同时只有1个是Active，我们可以在一定时候切换。之所以用2个M，是保证M不会又成为系 统的SPOF。<br>Slaves可以进一步负载均衡，可以结合LVS,从而将select操作适当的平衡到不同的slaves上。<br>以上架构可以抗衡到一定量的负载，但是随着用户进一步增加，你的用户表数据超过1千万，这时那个M变成了SPOF。你不能任意扩充Slaves， 否则复制同步的开销将直线上升，怎么办？我的方法是表分区，从业务层面上进行分区。最简单的，以用户数据为例。根据一定的切分方式，比如id，切分到不同 的数据库集群去。</p>
<p>全局数据库用于meta数据的查询。缺点是每次查询，会增加一次，比如你要查一个用户nightsailer,你首先要到全局数据库群找到nightsailer对应的cluster id，然后再到指定的cluster找到nightsailer的实际数据。<br>每个cluster可以用m-m方式，或者m-m-slaves方式。这是一个可以扩展的结构，随着负载的增加，你可以简单的增加新的mysql cluster进去。</p>
<p>需要注意的是：<br>1、禁用全部auto_increment的字段<br>2、id需要采用通用的算法集中分配<br>3、要具有比较好的方法来监控mysql主机的负载和服务的运行状态。如果你有30台以上的mysql数据库在跑就明白我的意思了。<br>4、不要使用持久性链接（不要用pconnect）,相反，使用sqlrelay这种第三方的数据库链接池，或者干脆自己做，因为php4中mysql的链接池经常出问题。</p>
<p><span style="color: #ff0000;"><strong>二：高并发高负载网站的系统架构之HTML静态化</strong> </span></p>
<p>其实大家都知道，效率最高、消耗最小的就是纯静态化 的html页面，所以我们尽可能使我们的网站上的页面采 用静态页面来实现，这个最简单的方法其实也是 最有效的方法。但是对于大量内容并且频繁更新的网站，我们无法全部手动去挨个实现，于是出现了我们常见的信息发布系统CMS，像我们常访问的各个门户站点 的新闻频道，甚至他们的其他频道，都是通过信息发布系统来管理和实现的，信息发布系统可以实现最简单的信息录入自动生成静态页面，还能具备频道管理、权限 管理、自动抓取等功能，对于一个大型网站来说，拥有一套高效、可管理的CMS是必不可少的。</p>
<p>除了门户和信息发布类型的网站，对于交互性要求很高的社区类型网站来说，尽可能的静态化也是提高性能的必要手段，将社区内的帖子、文章进行实时的静态化，有更新的时候再重新静态化也是大量使用的策略，像Mop的大杂烩就是使用了这样的策略，网易社区等也是如此。</p>
<p>同时，html静态化也是某些缓存策略使用的手段，对于系统中频繁使用数据库查询但是内容更新很小的应用，可以考虑使用html静态化来实现，比如论坛 中论坛的公用设置信息，这些信息目前的主流论坛都可以进行后台管理并且存储再数据库中，这些信息其实大量被前台程序调用，但是更新频率很小，可以考虑将这 部分内容进行后台更新的时候进行静态化，这样避免了大量的数据库访问请求高并发。</p>
<p>网站HTML静态化解决方案<br>当一个Servlet资源请求到达WEB服务器之后我们会填充指定的JSP页面来响应请求:</p>
<p>HTTP请求—Web服务器—Servlet–业务逻辑处理–访问数据–填充JSP–响应请求</p>
<p>HTML静态化之后:</p>
<p>HTTP请求—Web服务器—Servlet–HTML–响应请求</p>
<p>静态访求如下</p>
<p>Servlet:</p>
<p>[java]<br>public void doGet(HttpServletRequest request, HttpServletResponse response)<br>throws ServletException, IOException {<br>if(request.getParameter(“chapterId”) != null){<br>String chapterFileName = “bookChapterRead_”+request.getParameter(“chapterId”)+”.html”;<br>String chapterFilePath = getServletContext().getRealPath(“/“) + chapterFileName;<br>File chapterFile = new File(chapterFilePath);<br>if(chapterFile.exists()){response.sendRedirect(chapterFileName);return;}//如果有这个文件就告诉浏览器转向<br>INovelChapterBiz novelChapterBiz = new NovelChapterBizImpl();<br>NovelChapter novelChapter = novelChapterBiz.searchNovelChapterById(Integer.parseInt(request.getParameter(“chapterId”)));// 章节信息<br>int lastPageId = novelChapterBiz.searchLastCHapterId(novelChapter.getNovelId().getId(), novelChapter.getId());<br>int nextPageId = novelChapterBiz.searchNextChapterId(novelChapter.getNovelId().getId(), novelChapter.getId());<br>request.setAttribute(“novelChapter”, novelChapter);<br>request.setAttribute(“lastPageId”, lastPageId);<br>request.setAttribute(“nextPageId”, nextPageId);<br>new CreateStaticHTMLPage().createStaticHTMLPage(request, response, getServletContext(),<br>chapterFileName, chapterFilePath, “/bookRead.jsp”);<br>}<br>}</p>
<p>[/java]<br>生成HTML静态页面的类:</p>
<p>[java]<br>package com.jb.y2t034.thefifth.web.servlet;<br>import java.io.ByteArrayOutputStream;<br>import java.io.FileOutputStream;<br>import java.io.IOException;<br>import java.io.OutputStreamWriter;<br>import java.io.PrintWriter;<br>import javax.servlet.RequestDispatcher;<br>import javax.servlet.ServletContext;<br>import javax.servlet.ServletException;<br>import javax.servlet.ServletOutputStream;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import javax.servlet.http.HttpServletResponseWrapper;<br>/**</p>
<ul>
<li>创建HTML静态页面</li>
<li>功能：创建HTML静态页面</li>
<li>时间：2009年1011日</li>
<li>地点：home</li>
<li>@author mavk<br><em>
</em>/<br>public class CreateStaticHTMLPage {<br>/**</li>
<li>生成静态HTML页面的方法</li>
<li>@param request 请求对象</li>
<li>@param response 响应对象</li>
<li>@param servletContext Servlet上下文</li>
<li>@param fileName 文件名称</li>
<li>@param fileFullPath 文件完整路径</li>
<li>@param jspPath 需要生成静态文件的JSP路径(相对即可)</li>
<li>@throws IOException</li>
<li>@throws ServletException<br>*/<br>public void createStaticHTMLPage(HttpServletRequest request, HttpServletResponse response,ServletContext servletContext,String fileName,String fileFullPath,String jspPath) throws ServletException, IOException{<br>response.setContentType(“text/html;charset=gb2312”);//设置HTML结果流编码(即HTML文件编码)<br>RequestDispatcher rd = servletContext.getRequestDispatcher(jspPath);//得到JSP资源<br>final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();//用于从ServletOutputStream中接收资源<br>final ServletOutputStream servletOuputStream = new ServletOutputStream(){//用于从HttpServletResponse中接收资源<br>public void write(byte[] b, int off,int len){<br>byteArrayOutputStream.write(b, off, len);<br>}<br>public void write(int b){<br>byteArrayOutputStream.write(b);<br>}<br>};<br>final PrintWriter printWriter = new PrintWriter(new OutputStreamWriter(byteArrayOutputStream));//把转换字节流转换成字符流<br>HttpServletResponse httpServletResponse = new HttpServletResponseWrapper(response){//用于从response获取结果流资源(重写了两个方法)<br>public ServletOutputStream getOutputStream(){<br>return servletOuputStream;<br>}<br>public PrintWriter getWriter(){<br>return printWriter;<br>}<br>};<br>rd.include(request, httpServletResponse);//发送结果流<br>printWriter.flush();//刷新缓冲区，把缓冲区的数据输出<br>FileOutputStream fileOutputStream = new FileOutputStream(fileFullPath);<br>byteArrayOutputStream.writeTo(fileOutputStream);//把byteArrayOuputStream中的资源全部写入到fileOuputStream中<br>fileOutputStream.close();//关闭输出流，并释放相关资源<br>response.sendRedirect(fileName);//发送指定文件流到客户端<br>}<br>}<br>[/java]</li>
</ul>
<p><span style="color: #ff0000;"><strong>三：高并发高负载类网站关注点之缓存、负载均衡、存储</strong> </span></p>
<p>缓存是另一个大问题，我一般用memcached来做缓存集群，一般来说部署10台左右就差不多（10g内存池）。需要注意一点，千万不能用使用<br>swap，最好关闭linux的swap。</p>
<p>负载均衡/加速</p>
<p>可能上面说缓存的时候，有人第一想的是页面静态化，所谓的静态html，我认为这是常识，不属于要点了。页面的静态化随之带来的是静态服务的<br>负载均衡和加速。我认为Lighttped+Squid是最好的方式了。<br>LVS &lt;——-&gt;lighttped====&gt;squid(s) ====lighttpd</p>
<p>上面是我经常用的。注意，我没有用apache，除非特定的需求，否则我不部署apache，因为我一般用php-fastcgi配合lighttpd,<br>性能比apache+mod_php要强很多。</p>
<p>squid的使用可以解决文件的同步等等问题，但是需要注意，你要很好的监控缓存的命中率，尽可能的提高的90%以上。<br>squid和lighttped也有很多的话题要讨论，这里不赘述。</p>
<p>存储<br>存储也是一个大问题，一种是小文件的存储，比如图片这类。另一种是大文件的存储，比如搜索引擎的索引，一般单文件都超过2g以上。<br>小文件的存储最简单的方法是结合lighttpd来进行分布。或者干脆使用Redhat的GFS，优点是应用透明，缺点是费用较高。我是指<br>你购买盘阵的问题。我的项目中，存储量是2-10Tb，我采用了分布式存储。这里要解决文件的复制和冗余。<br>这样每个文件有不同的冗余，这方面可以参考google的gfs的论文。<br>大文件的存储，可以参考nutch的方案，现在已经独立为hadoop子项目。(你可以google it)</p>
<p>其他：<br>此外，passport等也是考虑的，不过都属于比较简单的了。<br>四：高并发高负载网站的系统架构之图片服务器分离<br>大家知道，对于Web 服务器来说，不管是Apache、IIS还是其他容器，图片是最消耗资源的，于是我们有必要将图片与页面进行分离，这是基本上大型网站都会采用的策略，他 们都有独立的图片服务器，甚至很多台图片服务器。这样的架构可以降低提供页面访问请求的服务器系统压力，并且可以保证系统不会因为图片问题而崩溃，在应用 服务器和图片服务器上，可以进行不同的配置优化，比如apache在配置ContentType的时候可以尽量少支持，尽可能少的LoadModule， 保证更高的系统消耗和执行效率。</p>
<p><span style="color: #ff0000;"><strong>利用Apache实现图片服务器的分离</strong> </span><br>缘由：<br>起步阶段的应用，都可能部署在一台服务器上（费用上的原因）<br>第一个优先分离的，肯定是数据库和应用服务器。<br>第二个分离的，会是什么呢？各有各的考虑，我所在的项目组重点考虑的节约带宽，服务器性能再好，带宽再高，并发来了，也容易撑不住。因此，我这篇文章的重点在这里。这里重点是介绍实践，不一定符合所有情况，供看者参考吧，<br>环境介绍：<br>WEB应用服务器：4CPU双核2G, 内存4G<br>部署：Win2003/Apache Http Server 2.1/Tomcat6<br>数据库服务器：4CPU双核2G, 内存4G<br>部署：Win2003/MSSQL2000<br>步骤：<br>步骤一：增加2台配置为：2CPU双核2G，内存2G普通服务器，做资源服务器<br>部署：Tomcat6，跑了一个图片上传的简单应用，（记得指定web.xml的&lt;distributable/&gt;），并指定域名为res1.<strong><em>.com,res2.</em></strong>.com，采用ajp协议<br>步骤二：修改Apache httpd.conf配置<br>原来应用的文件上传功能网址为：<br>1、/fileupload.html<br>2、/otherupload.html<br>在httpd.conf中增加如下配置</p>
<p>&lt;VirtualHost <em>:80&gt;<br>ServerAdmin webmaster@**</em>.com<br>ProxyPass /fileupload.html balancer://rescluster/fileupload lbmethod=byrequests stickysession=JSESSIONID nofailover=Off timeout=5 maxattempts=3<br>ProxyPass /otherupload.html balancer://rescluster/otherupload.html lbmethod=byrequests stickysession=JSESSIONID nofailover=Off timeout=5 maxattempts=3</p>
<p>#&lt;!–负载均衡–&gt;<br>&lt;Proxy balancer://rescluster/&gt;<br>BalancerMember ajp://res1.<strong><em>.com:8009 smax=5 max=500 ttl=120 retry=300 loadfactor=100 route=tomcat1<br>BalancerMember ajp://res2.</em></strong>.com:8009 smax=5 max=500 ttl=120 retry=300 loadfactor=100 route=tomcat2<br>&lt;/Proxy&gt;</p>
<p>&lt;/VirtualHost&gt;<br>步骤三，修改业务逻辑：<br>所有上传文件在数据库中均采用全url的方式保存，例如产品图片路径存成：<a href="http://res1.***.com/upload/20090101/product120302005.jpg" target="_blank" rel="external">http://res1.***.com/upload/20090101/product120302005.jpg</a></p>
<p>现在，你可以高枕无忧了，带宽不够时，增加个几十台图片服务器，只需要稍微修改一下apache的配置文件，即可。</p>
<p><strong><span style="color: #ff0000;">五：高并发高负载网站的系统架构之数据库集群和库表散列</span> </strong></p>
<p>大型网站都有复杂的应用，这些应用必须使用数据库，那么在面对大量访问的时候，数据库的瓶颈很快就能显现出来，这时一台数据库将很快无法满足应用，于是我们需要使用数据库集群或者库表散列。</p>
<p>在数据库集群方面，很多数据库都有自己的解决方案，Oracle、Sybase等都有很好的方案，常用的MySQL提供的Master/Slave也是类似的方案，您使用了什么样的DB，就参考相应的解决方案来实施即可。</p>
<p>上面提到的数据库集群由于在架构、成本、扩张性方面都会受到所采用DB类型的限制，于是我们需要从应用程序的角度来考虑改善系统架构，库表散列是常用并 且最有效的解决方案。我们在应用程序中安装业务和应用或者功能模块将数据库进行分离，不同的模块对应不同的数据库或者表，再按照一定的策略对某个页面或者 功能进行更小的数据库散列，比如用户表，按照用户ID进行表散列，这样就能够低成本的提升系统的性能并且有很好的扩展性。sohu的论坛就是采用了这样的 架构，将论坛的用户、设置、帖子等信息进行数据库分离，然后对帖子、用户按照板块和ID进行散列数据库和表，最终可以在配置文件中进行简单的配置便能让系 统随时增加一台低成本的数据库进来补充系统性能。</p>
<p>集群软件的分类：<br>一般来讲，集群软件根据侧重的方向和试图解决的问题，分为三大类：高性能集群（High performance cluster，HPC）、负载均衡集群（Load balance cluster， LBC），高可用性集群（High availability cluster，HAC）。<br>高性能集群（High performance cluster，HPC），它是利用一个集群中的多台机器共同完成同一件任务，使得完成任务的速度和可靠性都远远高于单机运行的效果。弥补了单机性能上的 不足。该集群在天气预报、环境监控等数据量大，计算复杂的环境中应用比较多；<br>负载均衡集群（Load balance cluster， LBC），它是利用一个集群中的多台单机，完成许多并行的小的工作。一般情况下，如果一个应用使用的人多了，那么用户请求的响应时间就会增大，机器的性能 也会受到影响，如果使用负载均衡集群，那么集群中任意一台机器都能响应用户的请求，这样集群就会在用户发出服务请求之后，选择当时负载最小，能够提供最好 的服务的这台机器来接受请求并相应，这样就可用用集群来增加系统的可用性和稳定性。这类集群在网站中使用较多；<br>高可用性集群（High availability cluster，HAC），它是利用集群中系统 的冗余，当系统中某台机器发生损坏的时候，其他后备的机器可以迅速的接替它来启动服务，等待故障机的维修和返回。最大限度的保证集群中服务的可用性。这类 系统一般在银行，电信服务这类对系统可靠性有高的要求的领域有着广泛的应用。<br>2 数据库集群的现状<br>数据库集群是将计算机集群技术引入到数据库中来实现的，尽管各厂商宣称自己的架构如何的完美，但是始终不能改变Oracle当先，大家追逐的事 实，在集群的解决方案上Oracle RAC还是领先于包括微软在内的其它数据库厂商，它能满足客户高可用性、高性能、数据库负载均衡和方便扩展的需求。<br>Oracle’s Real Application Cluster (RAC)<br>Microsoft SQL Cluster Server (MSCS)<br>IBM’s DB2 UDB High Availability Cluster(UDB)<br>Sybase ASE High Availability Cluster (ASE)<br>MySQL High Availability Cluster (MySQL CS)<br>基于IO的第三方HA(高可用性)集群<br>当前主要的数据库集群技术有以上六大类，有数据库厂商自己开发的；也有第三方的集群公司开发的；还有数据库厂商与第三方集群公司合作开发的，各类集群实现的功能及架构也不尽相同。<br>RAC（Real Application Cluster，真正应用集群）是Oracle9i数据库中采用的一项新技术，也是Oracle数据库支持网格计算环境的核心技术。它的出现解决了传统数 据库应用中面临的一个重要问题：高性能、高可伸缩性与低价格之间的矛盾。在很长一段时间里，甲骨文都以其实时应用集群技术(Real Application Cluster，RAC)统治着集群数据库市场</p>
<p><strong><span style="color: #ff0000;">六：高并发高负载网站的系统架构之缓存</span> </strong></p>
<p>缓存一词搞技术的都接触过，很多地方用到缓存。网站架构和网站开发中的缓存也是非常重要。这里先讲述最基本的两种缓存。高级和分布式的缓存在后面讲述。<br>架构方面的缓存，对Apache比较熟悉的人都能知道Apache提供了自己的缓存模块，也可以使用外加的Squid模块进行缓存，这两种方式均可以有效的提高Apache的访问响应能力。<br>网站程序开发方面的缓存，Linux上提供的Memory Cache是常用的缓存接口，可以在web开发中使用，比如用Java开发的时候就可以调用MemoryCache对一些数据进行缓存和通讯共享，一些大 型社区使用了这样的架构。另外，在使用web语言开发的时候，各种语言基本都有自己的缓存模块和方法，PHP有Pear的Cache模块，Java就更多 了，.net不是很熟悉，相信也肯定有。</p>
<p>Java开源缓存框架<br>JBossCache/TreeCache JBossCache是一个复制的事务处理缓存，它允许你缓存企业级应用数据来更好的改善性能。缓存数据被自动复制，让你轻松进行Jboss服务器之间的 集群工作。JBossCache能够通过Jboss应用服务或其他J2EE容器来运行一个Mbean服务，当然，它也能独立运行。 JBossCache包括两个模块：TreeCache和TreeCacheAOP。 TreeCache –是一个树形结构复制的事务处理缓存。 TreeCacheAOP –是一个“面向对象”缓存，它使用AOP来动态管理POJO<br>OSCache OSCache标记库由OpenSymphony设计，它是一种开创性的JSP定制标记应用，提供了在现有JSP页面之内实现快速内存缓冲的功能。 OSCache是个一个广泛采用的高性能的J2EE缓存框架，OSCache能用于任何Java应用程序的普通的缓存解决方案。OSCache有以下特 点：缓存任何对象，你可以不受限制的缓存部分jsp页面或HTTP请求，任何java对象都可以缓存。 拥有全面的API–OSCache API给你全面的程序来控制所有的OSCache特性。 永久缓存–缓存能随意的写入硬盘，因此允许昂贵的创建（expensive-to-create）数据来保持缓存，甚至能让应用重启。 支持集群–集群缓存数据能被单个的进行参数配置，不需要修改代码。 缓存记录的过期–你可以有最大限度的控制缓存对象的过期，包括可插入式的刷新策略（如果默认性能不需要时）。<br>JCACHE JCACHE是一种即将公布的标准规范（JSR 107），说明了一种对Java对象临时在内存中进行缓存的方法，包括对象的创建、共享访问、假脱机（spooling）、失效、各JVM的一致性等。它 可被用于缓存JSP内最经常读取的数据，如产品目录和价格列表。利用JCACHE，多数查询的反应时间会因为有缓存的数据而加快（内部测试表明反应时间大 约快15倍）。<br>Ehcache Ehcache出自Hibernate，在Hibernate中使用它作为数据缓存的解决方案。<br>Java Caching System JCS是Jakarta的项目Turbine的子项目。它是一个复合式的缓冲工具。可以将对象缓冲到内存、硬盘。具有缓冲对象时间过期设定。还可以通过 JCS构建具有缓冲的分布式构架，以实现高性能的应用。 对于一些需要频繁访问而每访问一次都非常消耗资源的对象，可以临时存放在缓冲区中，这样可以提高服务的性能。而JCS正是一个很好的缓冲工具。缓冲工具对 于读操作远远多于写操作的应用性能提高非常显著。<br>SwarmCache SwarmCache是一个简单而功能强大的分布式缓存机制。它使用IP组播来有效地在缓存的实例之间进行通信。它是快速提高集群式Web应用程序的性能的理想选择。<br>ShiftOne ShiftOne Object Cache这个Java库提供了基本的对象缓存能力。实现的策略有先进先出（FIFO），最近使用（LRU），最不常使用（LFU）。所有的策略可以最大化元素的大小，最大化其生存时间。<br>WhirlyCache Whirlycache是一个快速的、可配置的、存在于内存中的对象的缓存。它能够通过缓存对象来加快网站或应用程序的速度，否则就必须通过查询数据库或其他代价较高的处理程序来建立。<br>Jofti Jofti可对在缓存层中(支持EHCache，JBossCache和OSCache)的对象或在支持Map接口的存储结构中的对象进行索引与搜索。这个框架还为对象在索引中的增删改提供透明的功能同样也为搜索提供易于使用的查询功能。<br>cache4j cache4j是一个有简单API与实现快速的Java对象缓存。它的特性包括：在内存中进行缓存，设计用于多线程环境，两种实现：同步与阻塞，多种缓存 清除策略：LFU, LRU, FIFO，可使用强引用(strong reference)与软引用(soft reference)存储对象。<br>Open Terracotta 一个JVM级的开源群集框架，提供：HTTP Session复制，分布式缓存，POJO群集，跨越群集的JVM来实现分布式应用程序协调(采用代码注入的方式，所以你不需要修改任何)。<br>sccache SHOP.COM使用的对象缓存系统。sccache是一个in-process cache和二级、共享缓存。它将缓存对象存储到磁盘上。支持关联Key，任意大小的Key和任意大小的数据。能够自动进行垃圾收集。<br>Shoal Shoal是一个基于Java可扩展的动态集群框架，能够为构建容错、可靠和可用的Java应用程序提供了基础架构支持。这个框架还可以集成到不希望绑定 到特定通信协议，但需要集群和分布式系统支持的任何Java产品中。Shoal是GlassFish和JonAS应用服务器的集群引擎。<br>Simple-Spring-Memcached Simple-Spring-Memcached，它封装了对MemCached的调用，使MemCached的客户端开发变得超乎寻常的简单。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jvm中堆空间划分]]></title>
      <url>http://www.ibmer.info/jvm-heap.html</url>
      <content type="html"><![CDATA[<p>在jvm中堆空间划分为三个代：年轻代（Young Generation）、年老代（Old Generation）和永久代（Permanent Generation）。年轻代和年老代是存储动态产生的对象。永久带主要是存储的是java的类信息，包括解析得到的方法、属性、字段等等。永久带基本 不参与垃圾回收。我们这里讨论的垃圾回收主要是针对年轻代和年老代。具体如下图。</p>
<p><a href="/images/wp-uploads/2014/10/jvm-heap.jpg"><img src="/images/wp-uploads/2014/10/jvm-heap.jpg" alt="jvm-heap"></a></p>
<p>年轻代又分成3个部分，一个eden区和两个相同的survior区。刚开始创建的对象都是放置在eden区的。分成这样3个部分，主要是为了生命 周期短的对象尽量留在年轻带。当eden区申请不到空间的时候，进行minorGC，把存活的对象拷贝到survior。年老代主要存放生命周期比较长的 对象，比如缓存对象。具体jvm内存回收过程描述如下（可以结合上图）：</p>
<p>1、对象在Eden区完成内存分配<br>2、当Eden区满了，再创建对象，会因为申请不到空间，触发minorGC，进行young(eden+1survivor)区的垃圾回收<br>3、minorGC时，Eden不能被回收的对象被放入到空的survivor（Eden肯定会被清空），另一个survivor里不能被GC回收的对象也会被放入这个survivor，始终保证一个survivor是空的<br>4、当做第3步的时候，如果发现survivor满了，则这些对象被copy到old区，或者survivor并没有满，但是有些对象已经足够Old，也被放入Old区 <wbr>XX:MaxTenuringThreshold<br>5、当Old区被放满的之后，进行fullGC</p>
<p>在知道垃圾回收机制以后，大家可以在对jvm中堆的各个参数进行优化设置，来提高性能。</p>
<p>=============</p>
<p><strong>当一个URL被访问时，内存申请过程如下：</strong></p>
<p>A.JVM会试图为相关Java对象在Eden中初始化一块内存区域</p>
<p>B.当Eden空间足够时，内存申请结束。否则到下一步</p>
<p>C.JVM试图释放在Eden中所有不活跃的对象（这属于1或更高级的JVM垃圾回收）；释放后若Eden空间仍然不足以放入新对象，则试图将部分</p>
<p>Eden中活跃对象放入Survivor区/OLD区</p>
<p>D.Survivor区被用来作为Eden及OLD的中间交换区域，当OLD区空间足够时，Survivor区的对象会被移到Old区，否则会被保留在Survivor区</p>
<p>E.当OLD区空间不够时，JVM会在OLD区进行完全的垃圾收集（0级）</p>
<p>F.完全垃圾收集后，若Survivor及OLD区仍然无法存放从Eden复制过来的部分对象，导致JVM无法在Eden区为新对象创建内存区域，则出现”outofmemory错误”。下面看一下JVM垃圾回收机制的Java堆的相关参数。</p>
<p><strong>Java堆相关参数：</strong></p>
<p>ms/mx：定义YOUNG+OLD段的总尺寸，ms为JVM启动时YOUNG+OLD的内存大小；mx为最大可占用的YOUNG+OLD内存大小。在用户生产环境上一般将这两个值设为相同，以减少运行期间系统在内存申请上所花的开销。</p>
<p>NewSize/MaxNewSize：定义YOUNG段的尺寸，NewSize为JVM启动时YOUNG的内存大小；MaxNewSize为最大可占用的YOUNG内存大小。在用户生产环境上一般将这两个值设为相同，以减少运行期间系统在内存申请上所花的开销。</p>
<p>PermSize/MaxPermSize：定义Perm段的尺寸，PermSize为JVM启动时Perm的内存大小；MaxPermSize为最大可占用的Perm内存大小。在用户生产环境上一般将这两个值设为相同，以减少运行期间系统在内存申请上所花的开销。</p>
<p>SurvivorRatio：设置Survivor空间和Eden空间的比例</p>
<p>例：</p>
<p>[java]</p>
<p>MEM_ARGS=”-Xms512m-Xmx512m<br>-XX:NewSize=256m-XX:MaxNewSize=256m<br>-XX:PermSize=128m-XX:MaxPermSize=128m<br>-XX:SurvivorRatio=6”</p>
<p>[/java]</p>
<p>在上面的例子中：</p>
<p>[java]</p>
<p>YOUNG+OLD:512M<br>YOUNG:256M<br>Perm:128M<br>Eden:YOUNG*6/(6+1+1)=192M<br>Survivor:YOUNG/(6+1+1)=32M</p>
<p>[/java]</p>
<p>Java堆的总尺寸=YOUNG+OLD+Perm=640M</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JVM基础：JVM内存组成及分配]]></title>
      <url>http://www.ibmer.info/jvm-memory.html</url>
      <content type="html"><![CDATA[<p><strong>java内存组成介绍：堆(Heap)和非堆(Non-heap)内存</strong></p>
<p>按照官方的说法：“Java 虚拟机具有一个堆，堆是运行时数据区域，所有类实例和数组的内存均从此处分配。堆是在 Java 虚拟机启动时创建的。”“在JVM中堆之外的内存称为非堆内存(Non-heap memory)”。可以看出JVM主要管理两种类型的内存：堆和非堆。简单来说堆就是Java代码可及的内存，是留给开发人员使用的；非堆就是JVM留给 自己用的，所以方法区、JVM内部处理或优化所需的内存(如JIT编译后的代码缓存)、每个类结构(如运行时常数池、字段和方法数据)以及方法和构造方法 的代码都在非堆内存中。</p>
<p><strong>组成图</strong></p>
<p><a href="http://images.51cto.com/files/uploadimg/20120111/1101540.png" target="_blank" rel="external"><img src="http://images.51cto.com/files/uploadimg/20120111/1101540.png" alt=""></a></p>
<p>◆  方法栈&amp;本地方法栈:</p>
<p>线程创建时产生,方法执行时生成栈帧</p>
<p>◆ 方法区</p>
<p>存储类的元数据信息 常量等</p>
<p>◆ 堆</p>
<p>java代码中所有的new操作</p>
<p>◆ native Memory(C heap)</p>
<p>Direct Bytebuffer JNI Compile GC;</p>
<p><strong>堆内存分配</strong></p>
<p>JVM初始分配的内存由-Xms指定，默认是物理内存的1/64；JVM最大分配的内存由-Xmx指 定，默认是物理内存的1/4。默认空余堆内存小于40%时，JVM就会增大堆直到-Xmx的最大限制；空余堆内存大于70%时，JVM会减少堆直到 -Xms的最小限制。因此服务器一般设置-Xms、-Xmx相等以避免在每次GC 后调整堆的大小。对象的堆内存由称为垃圾回收器的自动内存管理系统回收。</p>
<p><a href="http://images.51cto.com/files/uploadimg/20120111/1101541.png" target="_blank" rel="external"><img src="http://images.51cto.com/files/uploadimg/20120111/1101541.png" alt=""></a></p>
<p>&nbsp;</p>
<p><table border="1" width="537" cellspacing="0"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><th valign="top" width="202">组  成</th></p>
<p><th valign="top" width="333">详  解</th><br></p>
<p><tr></tr></p>
<p><td valign="top" width="203">Young Generation</td></p>
<p><td valign="top" width="332">即图中的Eden + From Space + To Space</td><br></p>
<p><tr></tr></p>
<p><td valign="top" width="204">Eden</td></p>
<p><td valign="top" width="331">存放新生的对象</td><br></p>
<p><tr></tr></p>
<p><td valign="top" width="205">Survivor Space</td></p>
<p><td valign="top" width="331">有两个，存放每次垃圾回收后存活的对象</td><br></p>
<p><tr></tr></p>
<p><td valign="top" width="205">Old Generation</td></p>
<p><td valign="top" width="331">Tenured Generation 即图中的Old Space<br>主要存放应用程序中生命周期长的存活对象</td><br><br><br><br>&nbsp;</p>
<p><strong>非堆内存分配</strong></p>
<p>JVM使用-XX:PermSize设置非堆内存初始值，默认是物理内存的1/64；由XX:MaxPermSize设置最大非堆内存的大小，默认是物理内存的1/4。</p>
<p>&nbsp;</p>
<p><table border="1" width="540" cellspacing="0"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><th valign="top" width="202">组  成</th></p>
<p><th valign="top" width="600">详  解</th><br></p>
<p><tr></tr></p>
<p><td valign="top" width="203">Permanent Generation</td></p>
<p><td valign="top" width="600">保存虚拟机自己的静态(refective)数据<br>主要存放加载的Class类级别静态对象如class本身，method，field等等<br>permanent generation空间不足会引发full GC(详见<a href="http://www.cnblogs.com/redcreen/archive/2011/05/04/2037029.html" target="_blank" rel="external">HotSpot VM GC种类</a>)</td><br></p>
<p><tr></tr></p>
<p><td valign="top" width="203">Code Cache</td></p>
<p><td valign="top" width="600">用于编译和保存本地代码（native code）的内存<br>JVM内部处理或优化</td><br><br><br><br>&nbsp;</p>
<p><strong>JVM内存限制(最大值)</strong></p>
<p>JVM内存的最大值跟操作系统有很大的关系。简单的说就32位处理器虽然 可控内存空间有4GB,但是具体的操作系统会给一个限制，这个限制一般是2GB-3GB（一般来说Windows系统下为1.5G-2G，Linux系统 下为2G-3G），而64bit以上的处理器就不会有限制了。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java内存分配 常量池详解(Constant Pool)]]></title>
      <url>http://www.ibmer.info/java-constant-pool.html</url>
      <content type="html"><![CDATA[<p>在class文件中，“常量池”是最复杂也最值得关注的内容。</p>
<p>Java是一种动态连接的语言，常量池的作用非常重要，常量池中除了包含代码中所定义的各种基本类型（如int、long等等）和对象型（如String及数组）的常量值还，还包含一些以文本形式出现的符号引用，比如：</p>
<p>类和接口的全限定名；</p>
<p>字段的名称和描述符；</p>
<p>方法和名称和描述符。</p>
<p>在C语言中，如果一个程序要调用其它库中的函数，在连接时，该函数在库中的位置（即相对于库文件开头的偏移量）会被写在程序中，在运行时，直接去这个地址调用函数；</p>
<p>而在Java语言中不是这样，一切都是动态的。编译时，如果发现对其它类方法的调用或者对其它类字段的引用的话，记录进class文件中的，只能是一个文本形式的符号引用，在连接过程中，虚拟机根据这个文本信息去查找对应的方法或字段。</p>
<p>所以，与Java语言中的所谓“常量”不同，class文件中的“常量”内容很非富，这些常量集中在class中的一个区域存放，一个紧接着一个，这里就称为“常量池”。</p>
<p>转: <a href="http://hi.baidu.com/rickmeteor/blog/item/f0be11dff578ba1662279848.html" target="_blank" rel="external">http://hi.baidu.com/rickmeteor/blog/item/f0be11dff578ba1662279848.html</a></p>
<p>java中的常量池技术，是为了方便快捷地创建某些对象而出现的，当需要一个对象时，就可以从池中取一个出来（如果池中没有则创建一个），则在需要重复重复创建相等变量时节省了很多时间。常量池其实也就是一个内存空间，不同于使用new关键字创建的对象所在的堆空间。本文只从java使用者的角度来探讨java常量池技术，并不涉及常量池的原理及实现方法。个人认为，如果是真的专注java,就必须对这些细节方面有一定的了解。但知道它的原理和具体的实现方法则不是必须的。</p>
<p>1,常量池中对象和堆中的对象</p>
<p>[java]</p>
<p>public class Test{</p>
<p>Integer i1=new Integer(1);<br>Integer i2=new Integer(1);<br>//i1,i2分别位于堆中不同的内存空间</p>
<p>System.out.println(i1==i2);//输出false<br>Integer i3=1;<br>Integer i4=1;<br>//i3,i4指向常量池中同一个内存空间</p>
<p>System.out.println(i3==i4);//输出true</p>
<p>//很显然，i1,i3位于不同的内存空间</p>
<p>System.out.println(i1==i3);//输出false</p>
<p>}</p>
<p>[/java]</p>
<p>2，8种基本类型的包装类和对象池</p>
<p>java中基本类型的包装类的大部分都实现了常量池技术，这些类是Byte,Short,Integer,Long,Character,Boolean,<span style="color: #ff0000;"><strong>另外两种浮点数类型的包装类则没有实现。</strong></span>另外Byte,Short,Integer,Long,Character这5种整型的包装类也只是在<span style="color: #ff0000;"><strong>对应值小于等于127时才可使用对象池，也即对象不负责创建和管理大于127的这些类的对象</strong></span>。以下是一些对应的测试代码：</p>
<p>[java]</p>
<p>public class Test{</p>
<p>public static void main(String[] args){</p>
<p>//5种整形的包装类Byte,Short,Integer,Long,Character的对象，</p>
<p>//在值小于127时可以使用常量池</p>
<p>Integer i1=127;</p>
<p>Integer i2=127;</p>
<p>System.out.println(i1==i2)//输出true</p>
<p>//值大于127时，不会从常量池中取对象</p>
<p>Integer i3=128;</p>
<p>Integer i4=128;</p>
<p>System.out.println(i3==i4)//输出false</p>
<p>//Boolean类也实现了常量池技术</p>
<p>Boolean bool1=true;</p>
<p>Boolean bool2=true;</p>
<p>System.out.println(bool1==bool2);//输出true</p>
<p>//浮点类型的包装类没有实现常量池技术</p>
<p>Double d1=1.0;</p>
<p>Double d2=1.0;</p>
<p>System.out.println(d1==d2)//输出false</p>
<p>&nbsp;</p>
<p>}</p>
<p>}</p>
<p>[/java]</p>
<p>3,String也实现了常量池技术</p>
<p>String类也是java中用得多的类，同样为了创建String对象的方便，也实现了常量池的技术,测试代码如下:</p>
<p>[java]</p>
<p>public class Test{</p>
<p>public static void main(String[] args){</p>
<p>//s1,s2分别位于堆中不同空间</p>
<p>String s1=new String(“hello”);</p>
<p>String s2=new String(“hello”);</p>
<p>System.out.println(s1==s2)//输出false</p>
<p>//s3,s4位于池中同一空间</p>
<p>String s3=”hello”;</p>
<p>String s4=”hello”;</p>
<p>System.out.println(s3==s4);//输出true</p>
<p>}</p>
<p>}</p>
<p>[/java]</p>
<p>最后:</p>
<p>细节决定成败，写代码更是如此。</p>
<p>对Integer对象的补充:<a href="http://hi.baidu.com/fandywang_jlu/blog/item/c5590b4eae053cc3d1c86a13.html" target="_blank" rel="external">http://hi.baidu.com/fandywang_jlu/blog/item/c5590b4eae053cc3d1c86a13.html</a></p>
<p>Integer的封装吧：</p>
<p>[java]</p>
<p>public static Integer valueOf(int i) {</p>
<p>final int offset = 128;</p>
<p>if (i &gt;= -128 &amp;&amp; i &lt;= 127) { // must cache</p>
<p>return IntegerCache.cache[i + offset];</p>
<p>}</p>
<p>return new Integer(i);<br>}</p>
<p>[/java]<br>当你直接给一个Integer对象一个int值的时候，其实它调用了valueOf方法，然后你赋的这个值很特别，是128，那么没有进行cache方法，相当于new了两个新对象。所以问题中定义a、b的两句代码就类似于：</p>
<pre><code>Integer a = new Integer(128);

Integer b = new Integer(128);
</code></pre><p>这个时候再问你，输出结果是什么？你就知道是false了。如果把这个数换成127，再执行：</p>
<pre><code>Integer a = 127;

Integer b = 127;

System.out.println(a == b);
</code></pre><p>结果就是：true</p>
<p>由上可知，我们进行对象比较时最好还是使用equals，便于按照自己的目的进行控制。</p>
<p>————————————————–补充———————————————————————–</p>
<p>   我们看一下IntegerCache这个类里面的内容：</p>
<p>[java]</p>
<p>private static class IntegerCache {</p>
<p>private IntegerCache() {</p>
<p>}</p>
<p>static final Integer cache[] = new Integer[-(-128) + 127 + 1];</p>
<p>static {</p>
<p>for (int i = 0; i &lt; cache.length; i++)</p>
<p>cache[i] = new Integer(i - 128);</p>
<p>}</p>
<p>}</p>
<p>[java]</p>
<p>由于cache[]在IntegerCache类中是静态数组，也就是只需要初始化一次，即static｛……｝部分，所以，如果Integer对象初始化时是-128~127的范围，就不需要再重新定义申请空间，都是同一个对象—在IntegerCache.cache中，这样可以在一定程度上提高效率。</p>
<p>//////////////////////////////////////////////////////////对String方面的补充///////////////////////////////////////////////////////////</p>
<p>来自SUN官方文档:</p>
<p>3.10.5 String Literals</p>
<p>A string literal consists of zero or more characters enclosed in double quotes. Each character may be represented by an escape sequence.</p>
<p>A string literal is always of type String (<a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#26992" target="_blank" rel="external">§4.3.3</a>. A string literal always refers to the same instance <a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#12028" target="_blank" rel="external">(§4.3.1)</a> of class String.</p>
<p>StringLiteral:</p>
<p> “ StringCharacters<sub>opt</sub> “</p>
<p>StringCharacters:</p>
<p> StringCharacter</p>
<p> StringCharacters StringCharacter</p>
<p>StringCharacter:</p>
<p> InputCharacter but not “ or \</p>
<p> EscapeSequence</p>
<p>The escape sequences are described in <a href="http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#101089" target="_blank" rel="external">§3.10.6</a>.</p>
<p>As specified in <a href="http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#231571" target="_blank" rel="external">§3.4</a>, neither of the characters CR and LF is ever considered to be an InputCharacter; each is recognized as constituting a LineTerminator.</p>
<p>It is a compile-time error for a line terminator to appear after the opening “ and before the closing matching “. A long string literal can always be broken up into shorter pieces and written as a (possibly parenthesized) expression using the string concatenation operator + <a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#39990" target="_blank" rel="external">(§15.18.1)</a>.</p>
<p>The following are examples of string literals:</p>
<p>“”    // the empty string</p>
<p>“\””    // a string containing “ alone</p>
<p>“This is a string”  // a string containing 16 characters</p>
<p>“This is a “ +   // actually a string-valued constant expression,</p>
<p> “two-line string” //  formed from two string literals</p>
<p>Because Unicode escapes are processed very early, it is not correct to write “\u000a” for a string literal containing a single linefeed (LF); the Unicode escape \u000a is transformed into an actual linefeed in translation step 1 <a href="http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#100850" target="_blank" rel="external">(§3.3)</a> and the linefeed becomes a LineTerminator in step 2 <a href="http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#231571" target="_blank" rel="external">(§3.4)</a>, and so the string literal is not valid in step 3. Instead, one should write “\n” <a href="http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#101089" target="_blank" rel="external">(§3.10.6)</a>. Similarly, it is not correct to write “\u000d” for a string literal containing a single carriage return (CR). Instead use “\r”.</p>
<p>Each string literal is a reference <a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#9317" target="_blank" rel="external">(§4.3)</a> to an instance (<a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#12028" target="_blank" rel="external">§4.3.1</a>, <a href="http://java.sun.com/docs/books/jls/second_edition/html/execution.doc.html#44670" target="_blank" rel="external">§12.5</a>) of class String (<a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#26992" target="_blank" rel="external">§4.3.3</a>). String objects have a constant value. String literals-or, more generally, strings that are the values of constant expressions <a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#5313" target="_blank" rel="external">(§15.28)</a>-are “interned” so as to share unique instances, using the method String.intern.</p>
<p>Thus, the test program consisting of the compilation unit <a href="http://java.sun.com/docs/books/jls/second_edition/html/packages.doc.html#40031" target="_blank" rel="external">(§7.3)</a>:</p>
<p>package testPackage;</p>
<p>class Test {</p>
<p> public static void main(String[] args) {</p>
<p>  String hello = “Hello”, lo = “lo”;</p>
<p>  System.out.print((hello == “Hello”) + “ “);</p>
<p>  System.out.print((Other.hello == hello) + “ “);</p>
<p>  System.out.print((other.Other.hello == hello) + “ “);</p>
<p>  System.out.print((hello == (“Hel”+”lo”)) + “ “);</p>
<p>  System.out.print((hello == (“Hel”+lo)) + “ “);</p>
<p>  System.out.println(hello == (“Hel”+lo).intern());</p>
<p> }</p>
<p>}</p>
<p>class Other { static String hello = “Hello”; }</p>
<p>and the compilation unit:</p>
<p>package other;</p>
<p>public class Other { static String hello = “Hello”; }</p>
<p>produces the output:</p>
<p>true true true true false true</p>
<p>This example illustrates six points:</p>
<ul>
<li>Literal strings within the same class <a href="http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#3857" target="_blank" rel="external">(§8)</a> in the same package <a href="http://java.sun.com/docs/books/jls/second_edition/html/packages.doc.html#34412" target="_blank" rel="external">(§7)</a> represent references to the same String object <a href="http://java.sun.com/docs/books/jls/second_edition/html/typesValues.doc.html#12028" target="_blank" rel="external">(§4.3.1)</a>.</li>
</ul>
<p><span style="text-decoration: underline;">在同包同类下,引用自同一String对象.</span></p>
<ul>
<li>Literal strings within different classes in the same package represent references to the same String object.</li>
</ul>
<p><span style="text-decoration: underline;">在同包不同类下,引用自同一String对象.</span></p>
<ul>
<li>Literal strings within different classes in different packages likewise represent references to the same String object.</li>
</ul>
<p><span style="text-decoration: underline;">在不同包不同类下,依然引用自同一String对象.</span></p>
<ul>
<li>Strings computed by constant expressions <a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#5313" target="_blank" rel="external">(§15.28)</a> are computed at compile time and then treated as if they were literals.</li>
</ul>
<p><span style="text-decoration: underline;">在编译成.class时能够识别为同一字符串的,自动优化成常量,所以也引用自同一String对象.</span></p>
<ul>
<li>Strings computed at run time are newly created and therefore distinct.</li>
</ul>
<p><span style="text-decoration: underline;">在运行时创建的字符串具有独立的内存地址,所以不引用自同一String对象.</span></p>
<ul>
<li>The result of explicitly interning a computed string is the same string as any pre-existing literal string with the same contents.</li>
</ul>
<p><span style="text-decoration: underline;">String的intern()方法会查找在常量池中是否存在一份equal相等的字符串,</span></p>
<p><span style="text-decoration: underline;">如果有则返回一个引用,没有则添加自己的字符串进进入常量池,</span></p>
<p><span style="text-decoration: underline;">注意,只是字符串部分,</span></p>
<p><span style="text-decoration: underline;">所以这时会存在2份拷贝,常量池的部分被String类私有持有并管理,自己的那份按对象生命周期继续使用.</span></p>
<p>API解释:</p>
<p>返回字符串对象的规范化表示形式。</p>
<p>一个初始时为空的字符串池，它由类 String 私有地维护。</p>
<p>当调用 intern 方法时，如果池已经包含一个等于此 String 对象的字符串（该对象由 <a href="mk:@MSITStore:F:%20API%20jdk150.ZH_cn.chm::/jdk150/api/java/lang/String.html#equals(java.lang.Object" target="_blank" rel="external">equals(Object)</a>) 方法确定），则返回池中的字符串。否则，将此 String 对象添加到池中，并且返回此 String 对象的引用。</p>
<p>它遵循对于任何两个字符串 s 和 t，当且仅当 s.equals(t) 为 true 时，s.intern() == t.intern() 才为 true。</p>
<p>所有字面值字符串和字符串赋值常量表达式都是内部的。字符串字面值在《<a href="http://java.sun.com/docs/books/jls/html/" target="_blank" rel="external">Java Language Specification</a>》的 §3.10.5 中已定义。</p>
<p>————————————代码演示补充————————————-</p>
<p>   String s0= “java”;</p>
<p>   String s1=new String(“java”);</p>
<p>   String s2=new String(“java”);</p>
<p>   s1.intern();</p>
<p>   s2=s2.intern(); //把常量池中“kvill”的引用赋给s2</p>
<p>   System.out.println( s0==s1);//false intern返回的引用没有引用变量接收~    s1.intern();等于废代码.</p>
<p>   System.out.println( s0==s1.intern() );//true</p>
<p>   System.out.println( s0==s2 );//true</p>
<p>————————————代码演示补充————————————-</p>
<p>   String s1=new String(“java”);<br>String s2=s1.intern();//s1 检查常量池 发现没有 就拷贝自己的字符串进去</p>
<p>//s2 引用该字符串常量池的地址</p>
<p>   System.out.println(s2 == s1);//false<br>System.out.println( s2==s1.intern());//true<br>System.out.println( s1==s1.intern());// false</p>
<p>最后引出equals()和==的故事</p>
<p>对于字符串比较,一定要切记使用equals,勿用==</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WAS连接MQ错误]]></title>
      <url>http://www.ibmer.info/was-mq-2009error.html</url>
      <content type="html"><![CDATA[<p>WAS连接MQ，出现了下面的错误</p>
<p>【A connection could not be made to WebSphere MQ for the following reason: CC=2;RC=2009】</p>
<p><a href="/images/wp-uploads/2014/10/WAS-MQ-2009err.jpg"><img src="/images/wp-uploads/2014/10/WAS-MQ-2009err.jpg" alt="WAS-MQ-2009err"></a></p>
<p>问题解决：1）查看OSGi，2）MQ Lib配置</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WAS相关资源信息]]></title>
      <url>http://www.ibmer.info/was-resource.html</url>
      <content type="html"><![CDATA[<p>===================WAS=================================</p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg27038624" target="_blank" rel="external">download WebSphere Application Server Network Deployment V8.5.5</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg27024154" target="_blank" rel="external">How to download WebSphere Application Server Network Deployment V8.5</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg27013045" target="_blank" rel="external">Download WebSphere Application Server Network Deployment Version 7.0</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/1012_dingsj_wascluster/1012_dingsj_wascluster.html" target="_blank" rel="external">在 WebSphere Application Server V7 集群环境中管理 HTTP session</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/tutorials/1107_chenzx_httpsession/" target="_blank" rel="external">HTTP Session 内存到内存复制的拓扑结构</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/1308_wangh_wasport/1308_wangh_wasport.html" target="_blank" rel="external">如何利用 Profile Port Checker 来解决 WebSphere Application Server 端口冲突问题</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/webservices/ws-soapojms/" target="_blank" rel="external">在 SOAP over JMS Web 服务中使用 WebSphere MQ，第 1 部分: 部署和配置 Web 服务</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg21231315&amp;acss=dakc" target="_blank" rel="external">WAS中配置MQ变量：<strong>MQ_INSTALL_ROOT</strong> and <strong>MQJMS_LIB_ROOT</strong>变量</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?rs=171&amp;uid=swg27016505" target="_blank" rel="external">Using WebSphere MQ V7 as JMS Provider for WebSphere Application Server V7, V8.0 and V8.5</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0912_wangzq_wasosgi/" target="_blank" rel="external">实现 WebSphere Application Server 上应用程序对 OSGi 的支持</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg21514310" target="_blank" rel="external">Fixes by version for IBM Security Access Manager for Web/Mobile</a></p>
<p>===================AIX=================================</p>
<p><a href="http://www.ibm.com/developerworks/cn/aix/library/au-powerhaintro/" target="_blank" rel="external">PowerHA 简介</a></p>
<p>===================DB2=================================</p>
<p><a href="http://my.oschina.net/chen106106/blog/45185" target="_blank" rel="external">Redhat Linux 5.3环境实施DB2 V9.7 HADR</a></p>
<p>===================MQ==================================</p>
<p><a href="http://www-01.ibm.com/software/integration/wmq/explorer/downloads/" target="_blank" rel="external">IBM WebSphere MQ Explorer</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0907_yangj_mq-oam/" target="_blank" rel="external">基于 OAM 实现 WebSphere MQ 对象访问控制</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/websphere/techjournal/0909_mismes/0909_mismes.html" target="_blank" rel="external">任务：消息: 不可或缺的十种 WebSphere MQ SupportPac</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?rs=171&amp;uid=swg27007197#1" target="_blank" rel="external">WebSphere MQ - SupportPacs by Product</a></p>
<p><a href="http://wenku.baidu.com/link?url=68DaMTK17Mw3WGgv-kFvrl2Aplz1p05B8BLHXvrMYQftmVC4EIpLtmdCfLrlI2Ics2HjbUXqdnpigUs6j9UPGwX0kGSiuFL5lka1AJ7RYZe" target="_blank" rel="external">IBM MQ入门</a></p>
<p>===================JAVA等其他===============================</p>
<p><a href="http://developer.51cto.com/art/200909/152190.htm" target="_blank" rel="external">OSGi是什么：Java语言的动态模块系统</a></p>
<p>&nbsp;</p>
<p>=======================================================</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 分布式 </tag>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WebSphere7: 修改端口，建立多端口应用]]></title>
      <url>http://www.ibmer.info/websphere7-multi-port.html</url>
      <content type="html"><![CDATA[<p>在websphere7上发布了一个简单的应用，模式使用的是概要建立时的端口号9080（每建立一个新的概要，次端口号会自动加1），希望能够改变这个端口号，于是开始试验。</p>
<p>1. 应用程序服务器 &gt; server1 &gt; Web 容器设置 &gt; Web 容器传输链可以查看到server1目前可以使用的端口。</p>
<p>WCInboundAdminSecure 为控制台访问端口；WCInboundDefault为应用访问端口；此时我们可以使用两个方法：</p>
<p>1）、修改WCInboundDefault的端口，点击此链接，进入后选择TCP 入站通道（TCP_2），发现端口处是选择项，于是可以使用右边的相关项-&gt;端口，查看并建立新的端口20099，端口建立后回到之前的TCP 入站通道（TCP_2），选择建立的端口即可。</p>
<p>2）、新建web容器传输链，在Web 容器传输链页面点击新建，录入传输链名称，并选择相应的模版，点击下一步；此时需要设置端口，可以选择已经存在的端口，或者直接在此处新建端口，主机可以使用*，端口录入20099，点击完成。建立多个传输链意味着可以通过多个端口访问web应用，例如<a href="http://localhost:9080/helloworld/，http://localhost:20099/helloworld/访问的是同一个应用。" target="_blank" rel="external">http://localhost:9080/helloworld/，http://localhost:20099/helloworld/访问的是同一个应用。</a></p>
<p>2. 修改此配置后需要重启服务器。重启后在浏览器中录入<a href="http://localhost:20099/helloworld/结果报错，显示如下：" target="_blank" rel="external">http://localhost:20099/helloworld/结果报错，显示如下：</a></p>
<p>SRVE0255E: 尚未定义要处理 /helloworld/ 的 Web 组/虚拟主机。</p>
<p>SRVE0255E: 尚未定义要处理 localhost:20099 的 Web 组/虚拟主机。</p>
<p>IBM WebSphere Application Server</p>
<p>经多方查证，最后得知：在was中建立的第一个服务，was会自动把该服务与系统端口及机器名关联，但是从第二个后就需要DNS别名手动绑定一下，需要将端口与虚拟主机进行绑定。</p>
<p>3. 绑定端口到虚拟主机，选择环境 &gt; 虚拟主机 &gt; default_host，并点击主机别名，可以看到已经设置的主机别名和端口号（例如：<a href="http://www.jack.com:9080，主机别名为www.jack.com，端口为9080，当然设置时可以使用&quot;*&quot;进行匹配）。" target="_blank" rel="external">http://www.jack.com:9080，主机别名为www.jack.com，端口为9080，当然设置时可以使用&quot;*&quot;进行匹配）。</a></p>
<p>点击新建，加入20099端口，主机别名设置为*，重新启动服务器。</p>
<p>4. 服务器启动后，在浏览器中输入<a href="http://localhost:20099/helloworld/发现可以正常显示了，当然如果是通过新建传输链方式添加的端口，则http://localhost:9080/helloworld/仍然能正确访问。" target="_blank" rel="external">http://localhost:20099/helloworld/发现可以正常显示了，当然如果是通过新建传输链方式添加的端口，则http://localhost:9080/helloworld/仍然能正确访问。</a></p>
<p>感言：websphere很强大，但也很简单，只是需要我们发现。</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[集群的可扩展性及其分布式体系结构（2）]]></title>
      <url>http://www.ibmer.info/cluster-tech2-2.html</url>
      <content type="html"><![CDATA[<h2 id="可扩展的并行计算体系结构"><a href="#可扩展的并行计算体系结构" class="headerlink" title="可扩展的并行计算体系结构"></a>可扩展的并行计算体系结构</h2><p>首先，我们先来看一下计算机系统体系结构发展的几个主要类型。每种体系结构的差别并不大，关键在于互联技术、结点的复杂度和耦合程度的不同。在集群计算和分布式系统中，以下这三种体系结构是比较具有代表性的。</p>
<ul>
<li><strong>无共享体系结构</strong><br><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig2.gif" alt="无共享体系结构"><br>无共享体系结构<br>（目前大多数集群采用的方式。每个节点都是独立的PC或者工作站）我们研究的集群系统大多数属于这一类的体系结构。集群的每一个结点都是完整独立的操作系统和硬件设备集合。结点之间通过局域网或者开关阵列以松耦合的方式 连接起来，彼此分享结点的部分甚至全部可用资源：CPU、内存、磁盘、IO设备等等，以形成一个对外单一、强大的计算机系统。这类系统对SSI的能力较 弱，需要特殊的中间件或者OS扩展加以支持。</li>
<li><strong>共享磁盘体系结构</strong><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig3.gif" alt="共享磁盘体系结构"><br><strong>共享磁盘体系结构<br>（结点基本上仍是独立的计算机，没有或者不使用本地的磁盘文件系统） </strong>分布式文件系统正是这类体系结构的应用体现。常见的NFS、AFS或者GFS都属于这个范畴。而硬件上的解决常常通过共享磁盘阵列或者SAN来实现。该体 系结构主要能够解决区域存储空间的容量问题，通过构造单一的虚拟的文件系统，提供给整个集群一个巨大的存储设备。尤其在一些高可用的场合，共享磁盘阵列常 常能够解决文件系统容错和数据一致等可靠性问题。</li>
<li><strong>共享存储器体系结构</strong><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig4.gif" alt="共享存储器体系结构（最不易实现，具有较强的SSI能力）"><br><strong>共享存储器体系结构（最不易实现，具有较强的SSI能力）</strong>从实现的难度上讲，不论是硬件制造的复杂性还是软件的实现难度，这种体系结构都大大超过其他几类体系结构的实现。实现这类体系结构的集群系统有DSM（分 布式共享存储集群）、NUMA、ccNUMA等技术。在这类体系结构中，可以将多个节点的计算资源集合在一起，形成一个内存空间一致的单一系统。在随后的 学习中我们知道，这样的系统具有最好的SSI（单一系统映像）能力。</li>
</ul>
<h2 id="可扩展与单一系统映象"><a href="#可扩展与单一系统映象" class="headerlink" title="可扩展与单一系统映象"></a>可扩展与单一系统映象</h2><p>我们最终希望，我们所面对的并行集群，不管适用于密集计算还是高可靠商用环境，都要有良好的可扩展性，可接受的单位计算成本，可预期的技术前景。因此，设计一个计算系统特别是并行环境下的集群系统，时时刻刻别忘了可扩展性这一核心的要求。</p>
<p>但我们从另外一个角度来看待并行计算集群的时候，就会有不同的结论了。其实，对于最终用户和编程人员来说，并行计算机模型的重点在于他们所看到的计算机是什么样的，也就是我们通常所称的SSI（单一系统映像）。</p>
<p>如果作为编程者，当然希望自己所面对的是一台机器而不是一堆机器，一台机器意味着单一的寻址空间，无须处理消息传递或者远程调用这样复杂的编程技术。那 么，在这样的观点下，具有单一地址空间的集群系统就具备了这个能力；或者使用者希望拥有一个巨大的一致的（只有一个根目录）的文件系统，那就需要在文件系 统层次上进行SSI的工作。</p>
<p>但从用户的角度来看，他并不关心你是如何处理诸如地址空间、消息传递这些看起来和他毫无关系的东西，用户只关心他用的是一台独立的计算机系统，这样可以减 少他使用的复杂度，不需要在多个系统之间来回切换，可以方便的管理他所面对的”一台机器”。那么，提供管理层次和使用层次的SSI就是必要的了。</p>
<p>所以，并行计算模型就是由使用者（包括程序员、用户）看到的一个抽象并行计算机，和冯氏结构计算机相似，能够进行顺序计算（其背后可能是并行的运算程序）和并行计算任务的计算机系统。</p>
<p>按照处理器、内存、OS以及互联方法来进行并行系统的分类，在参考彼此可扩展性和单一系统映像的这两个方面，我们能够得到下面的图形：</p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig5.gif" alt="集群、分布式系统、MPP、SMP的体系结构比较"></p>
<p>集群、分布式系统、MPP、SMP的体系结构比较</p>
<p>上图中，节点可以是一台PC、一台工作站或者SMP服务器。节点的复杂性指的是软件和硬件的能力。一般来说，集群节点要比MPP复杂一些，因为每个集群结点都有独立的操作系统和外围设备，而MPP中的结点可能仅仅是操作系统的一个微内核。</p>
<p>SMP服务器的节点复杂性和PC以及商用集群相比，相对高一些。拿最常见的x86构架SMP服务器来说吧，不但主板、总线技术都远远比PC复杂。而且为了 支持企业级应用环境，SMP还需要支持更多的高端外设，提供存储设备的热拔插能力，内存数据纠错等等高端技术，这些技术的应用势必增加SMP的复杂程度。</p>
<p>MPP通常是指采用无共享资源结构的大型并行处理系统，一般包括几百个处理器节点，节点一般运行一个不完整的OS（也叫微内核），结点之间通过高速开关互联。这样的专有系统往往具有比较好的可扩展能力，但是在技术换代上受限于专有系统本身。</p>
<p>SSI作为集群实现的一大要素，其范围包括了单一的应用层次、子系统，运行时系统、操作系统内核以及硬件层次。或者说，SSI不是绝对的，是一个相对的概 念，取决于用户从什么样的角度看待系统，是IP层面上还是内存空间上或者是文件系统的SSI，这都由最终的应用环境决定。</p>
<p>到了分布式系统的这个范畴，系统往往提供多个系统映象，呈现出一个多入口、多映象的系统集合，每个节点具有很高的自治能力。而MPP、SMP则以紧凑的方 式提供相对单一的计算资源，如同一个巨大的工作站。在分布式系统中，除了使用同构结点外，还根据需要常常使用异构的平台，这势必增加分布式系统的设计难度 和管理复杂性。其他特性见下表：</p>
<p><table class="ibm-data-table" border="1" width="100%" cellspacing="0" cellpadding="5"></table></p>
<p><thead></thead></p>
<p><tr></tr></p>
<p><th>特征</th></p>
<p><th>MPP</th></p>
<p><th>SMP</th></p>
<p><th>集群</th></p>
<p><th>分布式系统</th><br><br></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td><strong>结点个数</strong></td></p>
<p><td>100~1000数量级</td></p>
<p><td>10～100数量级</td></p>
<p><td>100左右的数量级</td></p>
<p><td>10～1000以上数量级</td><br></p>
<p><tr></tr></p>
<p><td><strong>结点复杂性</strong></td></p>
<p><td>细粒度到中粒度</td></p>
<p><td>中或粗粒度</td></p>
<p><td>中粒度</td></p>
<p><td>大范围</td><br></p>
<p><tr></tr></p>
<p><td><strong>结点间通信</strong></td></p>
<p><td>消息传递或者共享变量</td></p>
<p><td>共享存储器</td></p>
<p><td>消息传递</td></p>
<p><td>共享文件、RPC、消息传递</td><br></p>
<p><tr></tr></p>
<p><td><strong>任务调度</strong></td></p>
<p><td>主机单一队列</td></p>
<p><td>单一运行队列</td></p>
<p><td>多队列协同运行</td></p>
<p><td>独立的运行队列</td><br></p>
<p><tr></tr></p>
<p><td><strong>单一系统映像</strong></td></p>
<p><td>部分支持</td></p>
<p><td>支持完全的SSI</td></p>
<p><td>某一层次支持</td></p>
<p><td>目前不支持</td><br></p>
<p><tr></tr></p>
<p><td><strong>结点操作系统</strong></td></p>
<p><td>一个主要的内核和多个微内核</td></p>
<p><td>独立的完整的OS</td></p>
<p><td>N个同类OS</td></p>
<p><td>同类OS或异构OS</td><br></p>
<p><tr></tr></p>
<p><td><strong>地址空间</strong></td></p>
<p><td>多/单地址空间（分布式共享内存）</td></p>
<p><td>单一</td></p>
<p><td>多</td></p>
<p><td>多</td><br></p>
<p><tr></tr></p>
<p><td><strong>系统可用性</strong></td></p>
<p><td>低或中</td></p>
<p><td>低</td></p>
<p><td>高或者容错</td></p>
<p><td>中等</td><br></p>
<p><tr></tr></p>
<p><td><strong>归属单位</strong></td></p>
<p><td>一个组织</td></p>
<p><td>一个组织</td></p>
<p><td>可以多个组织（复用）</td></p>
<p><td>多组织</td><br></p>
<p><tr></tr></p>
<p><td><strong>连接距离</strong></td></p>
<p><td>紧耦合，在一个物理空间内</td></p>
<p><td>紧耦合，在一个机箱内</td></p>
<p><td>松耦合，楼区范围（依赖于连接介质）</td></p>
<p><td>松耦合，跨地域（地区或国家）</td><br><br><br><br><strong>各类并行系统的比较</strong></p>
<p>对于这四类系统来说，SMP的SSI程度最高，它是在所有的层次上提供SSI，即共享一切系统资源：单一地址空间、单一的文件系统、单一的操作系统内核等 等，看起来和一台单独的单CPU没什么两样。MPP仅仅在某些应用层和系统层支持SSI。集群提供的SSI程度更低，一般只能满足某一两个方面的SSI要 求。而对于分布式系统，比如网格，其SSI的实现程度就低的多了。通过类似JAVA这样的跨平台工具，分布式系统或许可以提供某一定义下的SSI能力，比 如单一的JAVA运行空间。</p>
<h2 id="集群的重要指标"><a href="#集群的重要指标" class="headerlink" title="集群的重要指标"></a>集群的重要指标</h2><p>对 于集群，我们可以得到这样的一个简单的概念：集群是全体计算机（也叫节点）的集合，这些计算机由高性能网络或者LAN物理的相连。典型的情况下，每个计算 机结点可以是一台SMP一台工作站或者是最普通不过的PC。最重要的是，这些各自独立的计算机要能够同心协力一起工作，而且在”外”看上去是单一的集成的 计算机资源。</p>
<p>如果只是简单的用LAN把集群连接起来，就称之为集群，是不可能具备实用价值的。考察集群很重要的是看待集群的几个性能、功能指标。</p>
<p><strong>能用性：</strong>由于集群中的每个节点都是运行传统平台，故用户能在熟悉和成熟的环境中开发 和运行他们的程序。通用平台提供编程环境、操作界面、控制监控系统的工具甚至是GUI，允许用户们运行他们原来在工作站上的大量程序而无需修改。所以，我们可以把集群系统看作一个大型的工作站，作为使用者，和平时操作没什么两样，只是性能提高了许多。</p>
<p><strong>可用性：</strong>可用性是指一个系统从事生产性使用的时间百分比（MTBF平均无故障时间）。传统的整体系统，比如主机系统和容错系统依靠昂贵的定制设计来实现高可用性。集群不使用定制组件，而使用廉价的商品化组件以提供高可用性，而高度的设备冗余则是集群最常使用的方式：</p>
<ul>
<li>处理器和存储器：集群有多个处理器和存储器部件，当某个部件失效时，其他的仍然可以使用，不影响集群整体的运行。与此相反，在SMP中，由于处理器通过共享存储器和总线通信，所以存储器一旦失效将会导致系统崩溃。存储器就成了SMP的”单点失效”。</li>
<li>磁 盘阵列：我们常见的RAID 0或者5，都能够满足计算机的磁盘冗余容错需求。在集群中，往往使用多个局部磁盘，通过标准的共享协议（NFS，IFS等）以支持容错需求。当某个节点的 本地磁盘失效时，可以通过远程磁盘继续运行。常见的有NAS设备，一种专用于集群网络存储的磁盘设备。或者借助分布式文件系统软件，实现多个集群节点之间 的磁盘容错。</li>
<li>操作系统：一般的说，集群在某一层次上体能够实现单一系统映像。但是多个操作系统映像还是存在的，每个节点都有一个独立的操作系统。当某个节点因为软件或 硬件故障而崩溃，其他的节点仍然不受影响继续工作，而整个集群也和原先没有什么两样。我们有时也把这一特性叫做”节点容错能力”。</li>
<li>通信网络：好的集群设计充分考虑了各种可能出现的故障情况，并采取一切可行的措施加以避免。集群结点的通信故障也是必须考虑的。在一个大型的复杂的集群 中，一段通信链路的故障可能导致不止一个的节点失效，甚至会使得整个集群变得不可用。因此，在集群的关键点之间采取合适的冗余链路就非常必要了。一般考虑 到集群的入口节点、主控结点、或者监视节点比较容易成为单点失效，那么在这些节点的接入策略中，使用备份链路可以达到比较好的效果。<br><strong>可扩展性：</strong>一个集群的计算能力随结点增多而增加。其次，集群的可扩展性是群体可扩展性。因为是松耦合的结构，集群能扩展至几百个结点，而对于SMP来讲，要超过几十个结点就非常困难。</li>
</ul>
<p>在SMP中，共享存储器以及存储器总线是系统性能的瓶颈。相同的程序集运行于集群时，不存在存储器瓶颈。每个结点可在一个结点上执行，充分使用局部存储 器。对于这类应用，集群可提供更高的总体存储器带宽和减少存储器时延。集群的局部磁盘也聚集为大磁盘空间，可容易地超过集中式RAID磁盘空间。增强的处 理、存储和I/O能力使得集群只要使用经良好开发的、如PVM或MPI那样的并行软件包，就可求解大型应用问题。</p>
<p>SMP不具有高可扩展能力，因为它使用竞争总线和集中式共享存储器。单操作系统映像及共享存储器是两个潜在的单失效点，会降低SMP的可用性。</p>
<p>容错系统有极高的可用性，但扩展的代价昂贵。而MPP的扩展能力要更强一些，而且可以保持比较好的SSI能力。目前，集群处于相对折衷的位置，将向着更高性能更高可用性的方向扩展。</p>
<p><strong>性能价格比：</strong>集群能成本有效的获取上述优点。传统的超级计算机以及MPP的成本很易达到几千万美元。与此相比，具有相同峰值性能的集群价格则要低1到2个数量级。集群大量的采用商品化部件，他们的性能和价格遵循摩尔定律，从而使集群的性能/成本比的增长速率远快于MPP。</p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig6.gif" alt="可用性与可伸缩性的综合比较"></p>
<p>可用性与可伸缩性的综合比较</p>
<p>设计一个具有良好的扩展集群系统，就要兼顾上述的方方面面。</p>
<p>首先尽量使集群的各个组成部件相互独立，以使独立的局部扩展成为可能，并且保证向后兼容的特性。还要尽可能采用商品化的组件，包括OS、互联网络、主机系统甚至是应用编程环境。最终实现：算法独立于体系结构、应用独立于平台、语言独立于机器、结点独立于网络。</p>
<p>其次就是选择合适的实现模型来进行集群系统的设计任务，尽量使用流行的开放的标准件，以降低单位成本。</p>
<p>最后，在设计的时候还要尽量平衡性能，避免系统里出现的”木桶原理”（众所周知，木桶的装水量受限于木桶最短的那块木板）；此外在考虑可用性的时候也要注意单点失效的问题，以免实际应用中因为小的错误导致整个系统不可用。</p>
<p>那么，让我们来看一下经过一番讨论之后，我们所期望的集群是什么样子的。</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>我们之所以花费大量的篇幅介绍集群的几个重要的体系结构概念，是因为这些概念构成了集群的最终整体。最后就让我们来看一下，综合了上述的方方面面后，我们可以得到以下几点关于集群的要素：</p>
<ul>
<li>独立的结点：每个节点是一台完整的计算机，一般是单一的系统。</li>
<li>单一系统映像能力：一个集群是一个单一的计算资源。集群将结点作为单独的资源，借助于单一系统映像技术，实现统一资源单一入口的概念。SSI使得集群更加易于使用和管理。</li>
<li>有效的结点间连接：集群中的结点，通常使用商品化网络，如以太网、FDDI或者光纤、ATM等等。此外，还使用标准的网络协议以建立进行节点间的通讯机制。这些都保证集群通信的有效进行。</li>
<li>增强的可用性：集群化提供了一个成本有效的方法以增加一个系统的可用性，比起主流的部件级容错产品，集群往往能够提供更合理的花费以达到效果。商用领域多数以加强系统的可用性为设计目标，因此可以使用集群中的技术加以实现。</li>
<li>更好的性能：平心而论，集群的诞生多少是因为性能驱动所促成的。在科学计算、工程应用、远程虚拟现实仿真等服务领域中，集群应该能够提供更高的性能，允许 将集群作为超级服务器使用，在最短的时间内完成原本单机系统无法顺利完成的任务，或者是提供巨大的磁盘和内存空间，实现那些”不可能的任务”。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[集群的可扩展性及其分布式体系结构（2）－上]]></title>
      <url>http://www.ibmer.info/cluster-tech2-1.html</url>
      <content type="html"><![CDATA[<h2 id="体系结构的发展"><a href="#体系结构的发展" class="headerlink" title="体系结构的发展"></a>体系结构的发展</h2><p>过去的几十年里，计算机的发展经历了几代变更。从第一代的真空电子管和继电器存储器计算机到近年以ULSI（超大规模集成电路）为代表的第五代计算机。计 算机系统的速度在不断提高，造价和体积却不断减小。系统软件的发展虽然没有硬件系统那么令人瞩目，却也从汇编、机器语言的荒莽时代逐渐步入以跨平台、可扩 展、适合分布式计算的第五代编程语言体系。其最主要的代表就是Java，而最有前景的操作系统就是Linux和开放源码运动。今后的计算机系统将是具有更 强的能力，更友好的操作界面并借助互联网的分布式超级计算平台。</p>
<p>过去，人们普遍认为计算机性能的提高主要是因为生产出了更快更有效的处理器。这种观念受到了并行处理概念的挑战。分而治之的方法使得聚集（Cluster 的由来）的计算系统能够实现令人咂舌的计算能力。近年来昂贵而特制的并行超级计算机向集群的转换趋势越来越强，而高性能工作站标准化组件和网络部件的快速 发展成为促成这种转换的驱动因素。</p>
<h2 id="并行与可扩展"><a href="#并行与可扩展" class="headerlink" title="并行与可扩展"></a>并行与可扩展</h2><p>现代计算机的一个公共特点是并行性。不论是计算机的体系结构还是微处理器的发展方向来看，并行性逐渐体现在每一个可能见到的每一个角落。</p>
<p>x86体系微处理器的发展就是并行技术发展的一个很好的体现：多流水线、超标量设计都是提高CPU的并行能力的关键。而在集群的体系结构中，更是充分利用 了并行性这一特点。我们创建和使用并行计算机主要是为了解决单处理器的速度瓶颈，利用并行技术来提高应用性能（通过优化串行程序）。</p>
<p>另一个角度来看，因为并行技术的发展，也大大促进了计算机系统的可扩展性，同时在单位成本控制上也有了可喜的进步，使得基于集群的并行计算系统的性能价格比明显优于独立的计算机系统，比如小型机、和一般的大型主机</p>
<h2 id="何谓可扩展性"><a href="#何谓可扩展性" class="headerlink" title="何谓可扩展性"></a>何谓可扩展性</h2><p>如果能够通过增加资源以满足不断增长的对性能和功能的要求，或者是通过缩减资源，以降低成本，从涵盖硬件和软件的角度上讲，我们可以把符合这种特性的计算机系统称作是可扩展的。</p>
<p>可扩展并不是仅仅意味着体积的扩大、数量的增加，它也涵盖了缩减能力。目前日益多见的嵌入式系统就是很好的一个例子，它既是硬件体积、计算能力的缩减，又是软件的缩减（许多嵌入式操作系统往往通过剪裁而来）。因此，看待扩展问题需要从下面的几个观点入手：</p>
<ul>
<li><strong>功能性和性能：</strong>一个可扩展的系统应该能够提供更好的性能、更多的功能。系统的总体计算能力应该随着资源的增加而按照比例增展。理想的情况是，增长的速度是线性的。</li>
<li><strong>成本伸缩：</strong>另一方面讲，系统扩展的代价必须是合理的。粗略的标准是，成本的增加应该小于n或者nlogn的一个线性系数。但是结果往往不尽人意。因为在扩展计算系统的时候，不仅仅要做性能的考虑，而且还要考虑系统的可用性、稳定性等等，这些因素都会导致系统的总成本上升。</li>
<li><strong>可兼容性：</strong>包括硬件、系统软件和应用软件在内的组成部分。我们希望用户原有的程序 在不作变动或只作少量的变动后仍可以使用，要求用户购买一套全新的操作系统和重新开发他们的应用代码是不合适的。从部件上看，伸缩通常只涉及到系统的一部 分，如果添加更多的处理器或者是将现有的处理器升级到新的一代。新增加的部分应能够与系统的其余部分相兼容。这就是说，原有的存储器、磁盘、互联设备以及 外设仍然可以使用。</li>
</ul>
<h2 id="可扩展系统的意义"><a href="#可扩展系统的意义" class="headerlink" title="可扩展系统的意义"></a>可扩展系统的意义</h2><p>研究可扩展的系统，其主要动机在于寻求一个灵活的、成本可伸缩的计算系统架构方案。如这里的图所展示的，计算机种类在由销售量及性能和成本组成的坐标系统 中，形成一座金字塔。金字塔的顶部是那些能够提供万亿次以上性能的超级系统，他们把许多资源集成在一个看上去”单一”的系统中，采用顶尖的技术构造并行系 统，具有最高的性能。</p>
<h5 id="计算机分类金字塔"><a href="#计算机分类金字塔" class="headerlink" title="计算机分类金字塔"></a>计算机分类金字塔</h5><p><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part2/fig1.gif" alt="计算机分类金字塔"></p>
<p>可扩展性通过它所提倡的公共的开放系统结构，包括了所有的计算机类。研究集群的可扩展体系结构，目的就是寻求一种可扩展的框架技术，使得上图中大型系统的高端技术能够不断应用于中低端的产品中，从而不断提高计算机的性能价格比水平。</p>
<p>像早期的Cray巨型机，当时在超级计算领域具有无可匹敌的地位，但是随着可扩展并行技术和商品化组件的发展，当年巨型机的地位逐渐被并行计算集群代替。 由于大部分集群都采用了标准化的商品组件，一方面可以充分享受部件性能的增长（CPU、网络、磁盘容量等都以近似摩尔定律的速度增长）；另一方面，在构架 上也具有很强的灵活性。比起专有的并行平台，以下的好处就显而易见了：</p>
<ul>
<li>因为单个工作站越来越强大，集群节点的计算能力也日益增强。而个人用户对于工作站的使用率往往很低，这样就有大量的闲置计算资源可以利用。</li>
<li>能够满足对不同性能和成本的要求。比如，用户可以在起初购买一个低端系统。当他对性能地要求增加时，他可以扩展此系统，而原有的软件和硬件部分仍然可以使用，充分保护了他原有的投资。</li>
<li>高端机可以使用低端机的部件以降低成本。例如，由于批量大、PC机使用的是低价的、市场销售的标准件。因为采用的是可扩展系统结构，故超级计算机也能使用 这些部件，从而可以降低系统成本。事实上，使用商品化部件：处理器、存储芯片、磁盘、I/O控制器等，已经成为高性能系统开发的趋势。</li>
<li>如果成本有效性能够随着生产技术的改进而增加的话，则为高端系统而开发的顶尖技术可能最终向金字塔下方移动，从而改进低端系统的性能。</li>
</ul>
<h2 id="可扩展性的三个考量"><a href="#可扩展性的三个考量" class="headerlink" title="可扩展性的三个考量"></a>可扩展性的三个考量</h2><p>可扩展性其本身是一个多方面的概念集合。包括了对计算资源可扩展的考量、对应用规模可扩展的考虑以及对技术换代可扩展三个方面的考虑。</p>
<h3 id="一、资源的可扩展性"><a href="#一、资源的可扩展性" class="headerlink" title="一、资源的可扩展性"></a>一、资源的可扩展性</h3><p>考虑资源可扩展性之前，首先要确定资源的真实含义是什么。</p>
<p>我们一般的都会把计算机硬件设备当作资源，比如CPU的数量、存储设备、IO设备等等。但从广义的角度理解，资源还应该包括软件，比如操作系统、应用软件等等。甚至，在日益复杂的互联网应用时代，资源的概念延伸到了用户需求的层次上。</p>
<p>因此对于提供服务的计算机系统来说，其支持为用户提供服务的一切软、硬件和其他配套的结构，都可以看作资源。因此如果我们从资源角度来考量可扩展性，就可 以把目标定义为：通过增加机器规模（既处理器数量）、投入更多的存储部件、升级软件甚至是改变系统的体系结构，从而使系统具有更好的性能或者功能。</p>
<p>扩展很容易让人联想到加强硬件设备，其中最明显的方法就是增加机器的处理器的数量。但是不是所有的机器都具备相同的可扩展能力。一个x86的SMP系统最多就只能扩展到64个CPU，；而一台IBM的SP2却可以扩展到最多512个CPU。</p>
<p>因此，扩大规模并不是简单的增加部件的数量就能解决问题的。通常，随着CPU数量的增加，包括RAM、总线带宽、网络等子系统也需要随之增加。所以，我们 常常看到，由于资源扩展所带来的技术上的障碍，仅仅是增加几个CPU或者其他部件，所花费的代价却远远高于增加的那些CPU本身的价值。那么，谨慎考虑扩 展规模所带来的性能价格比的增加，如何有效的利用更大并行性就是非常必要的了。这时，通过RAM的数量，扩展I/O速度，升级网络速度或者改造网络拓扑结 构反而能带来意想不到的效果。</p>
<p>另一方面，把软件也看作系统资源的话，就要涵盖很广的范围：可以升级新版本的操作系统，使他具有更多功能，支持更多线程、更大的地址空间，有更高效的内 核，能够识别更多的新硬件；也可以安装功能强大的中间件以扩展系统的特殊能力；还可以利用运行库来支持诸如消息传递、分布式事务处理等特性。扩展的方法不 一而足，也是在研究集群技术时主要考虑的问题。</p>
<h3 id="二、应用的可扩展性"><a href="#二、应用的可扩展性" class="headerlink" title="二、应用的可扩展性"></a>二、应用的可扩展性</h3><p>要充分扩展集群计算系统的能力，不仅资源是要可扩展的，应用程序也必须是可扩展的。这就是说，相同程序在一个可扩展系统上运行时，其性能随规模的扩大成正比例的改进。两个重要的考量是机器规模的可扩展性和问题规模的可扩展性。</p>
<p>首先从硬件的角度来考虑机器规模可扩展性这个问题。如果增加处理机的数量，我们系统的性能也会随之成比例地提高吗？假设有一个数据库服务器，处理银行每天 几十万的交易和1000万个用户的存款数据库，这样的情况下每秒钟该系统能够处理1000个在线事务。如果系统的处理器增加为原来的两倍，其他前提条件不 变，它能够提升到每秒2000个在线事务的处理速度吗？如果可以或者是接近的话，我们应当庆幸，该系统具有良好的可扩展性。当然，除了增加处理器的数量， 还可以是存储器或者I/O设备等等。</p>
<p>而考虑问题规模可扩展性这个角度则是以硬件环境的相对不变为基础的。如果仅仅是改变应用环境的工作负载，求解更大问题时，系统的性能表现又会如何。仍然以 上述的情况为例，如果数据库里的储户数据达到1亿个，每日处理的交易再上升一个数量级，那系统还能够保持每秒1000TPS的性能吗？</p>
<p>在研究应用可扩展问题的时候，我们将会发现：应用的限制最终无法通过简单的增加机器资源的方法加以突破。只有对应用程序本身和系统体系结构进行重大修改后，才能使用更多处理器和处理更多的问题。</p>
<p>我们应该将在一台特定机器上求解一个问题作为组合来加以考虑。有时将这种应用 / 机器对视为一个系统。如果更换应用或者更换软、硬件系统的体系结构，考虑可扩展的标准和角度就有很大的不同。</p>
<p>应用可扩展性不只依赖于处理器规模和问题规模。它也依赖于机器的存储器容量、I/O能力、以及通信能力。所有这些因素一起影响着可扩展性。我们将在今后的篇章讨论这些问题。</p>
<p>总的来说，考虑应用可扩展问题，需要从更加广义的角度上看，而不仅仅是上述的两个方面。那么我们就来看一下可扩展的另一个重要的方面–技术换代的可扩展性。</p>
<h3 id="三、技术换代的可扩展性"><a href="#三、技术换代的可扩展性" class="headerlink" title="三、技术换代的可扩展性"></a>三、技术换代的可扩展性</h3><p>技术换代可扩展性是局部概念而非全局概念。这里主要是指计算机系统能够随着技术的变更、换代，在保持原有的可用性基础上，通过”升级”部件的手段提高系统 的性能或者功能。这里的升级可能是我们常见的更换更高主频的CPU，也可能是增加系统的内存数量，还可能是升级操作系统到更新的版本。</p>
<p>其实这种事我们在WinTel时代常干，时不时换一下CPU或者内存什么的，但是不影响原来的系统应用，而且往往性能有很大的提升。</p>
<p>总的看来，计算机系统中CPU的发展速度最快，而内存的速度和单位容量的提升就慢一些，硬盘就会更慢（受到机械的限制），而最慢的就数程序设计语言了，到现在为止，我们都还在用类C编写关键的大型系统特别是集群系统应用。</p>
<p>并行系统的空间也是在扩展集群系统时的一个重要考量因素。新的设备是否能够容入原有的机箱内，扩展的需求是否能通过现有的互联技术得到满足，跨地域分布式技术的发展是否能给我们带来更大更强的系统，这些问题都缠绕在技术换代的思考过程中。</p>
<p>并行技术发展初期，系统大都是同构的，像具有完全一致内核的MPP系统，而集群也都是先在同构的框架下实现。而为了更好利用给各类的异构计算资源，势必需 要充分支持异构的并行集群。那么，异构可扩展性这一性质就反映了一个系统通过集成由不同设计者和厂商所提供的硬件和软件部分而进行扩展的能力。</p>
<p>异构扩展提倡使用具有标准、开放系统结构和接口的部件。在软件领域，我们也将它称为可移植性。追求异构可扩展性的代价是巨大的。除了借助标准协议和通讯平 台消除不同硬件系统之间的巨大差异，还要花费更多的资源处理现有应用的平滑移植。早期的COBOL应用在进行移植的时候就遇到很多问题，以至于现有的系统 中还存留大量的这种老式语言，也许Java集群出现会是解决这一问题的一个契机。</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[集群的可扩展性及其分布式体系结构(1)]]></title>
      <url>http://www.ibmer.info/cluster-tech1.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>“话说天下大势，分久必合，合久必分”高端计算的体系结构发展正是遵循着这样一个规律。从金融、电信等大行业的数据集中处理到分布计算处理，再到二次集中和海量计算，趋势和应用显然是在变化，作为技术本身，分区和群集技术正是为适应不断变化的需要而产生的。</p>
<h3 id="分而治之"><a href="#分而治之" class="headerlink" title="分而治之"></a>分而治之</h3><p>分 区技术初始于大型主机时代。企业级用户在购买大机后，许多应用都只使用大机的一小部分资源。这时，如果一个企业的生产部门只需要使用这台机器的10%的资 源，而且需要比较好的安全性，那么分区技术就能够满足它的要求，将主机的部分处理器和系统资源隔离出来，只利用这些资源组织计算系统，供生产部门使用，其 他的计算资源不受任何影响。这是早期的物理分区的概念。分区技术发展到今天，并不只为大型主机服务，因为分布式计算的应用在不断地扩展，在许多方面，高性 能的UNIX服务器和IA架构服务器已经在慢慢地取代大机的位置，分区这项技术在这些领域中也有着重要的作用。</p>
<p>分区带给人们的是更高的投资回报率和使用率，更加灵活的应用水平，以及动态地使用和分配资源。这些特点通过不同的分区种类来实现，目前分区的种类越来越 多，而且越来越细致，更倾向于客户的应用。最典型的分区技术就数我们在PC上使用的多操作系统了，这属于本地物理分区的范畴。而在多机环境中，通过分区可 以将不同”种群”的计算机分割开来（即使几台计算机位于同一个物理位置也可能服务于不同的”种群”），被分区的计算机还可以在不同的层面上复用，以提高计 算机系统的利用率。最常见的情况莫如VPN了，借助安全协议，VPN可以把分散的远程的计算机系统集合成一个逻辑上的”局域网”，协同完成复杂任务并保证 远程通信的安全；而这些计算机可能同那些物理上相近的计算机（比如同一个办公室）再次合并为一个机群，利用空闲时间完成另外一些实时性不高的计算任务。</p>
<h3 id="现在来讲讲”合”"><a href="#现在来讲讲”合”" class="headerlink" title="现在来讲讲”合”"></a>现在来讲讲”合”</h3><p>集 群技术是一种计算机系统之间连接的方式，运用它可以将分散的计算系统连接起来完成原来单独节点的计算系统无法完成的任务，最早的集群系统就是出于这样的并 行处理的目的出现的。但是随着计算机性能的发展和网络不安全因素的出现，系统的稳定性和可靠性是人们主要面临解决的问题。人们开始使用集群方式将两台以上 的设备连接起来，当整个集群系统中发生单点或者局部多点故障时，集群中其他的计算机将自动来接替出故障设备。最典型的例子就是实现双机热备份。两台一样的 计算机系统，使用集群软件连接起来，其中一台作为另一台的备份，当主机系统崩溃时，另一台来接替它的任务。除此以外，利用集群系统的高并行性能进行复杂的 科学、工程计算，也是非常有经济价值的做法。</p>
<p>对于集群系统来说，计算机的架构是一个非常重要的问题。同种架构的计算机之间，可以比较容易实现集群连接，一般来讲都是由厂商提供的集群软件。对于异构的 计算机系统，一般没有特别多的选择，目前类似JAVA的中间件技术可以解决部分跨平台的问题。集群技术可以有效地解决开放系统的稳定、抗压和负载平衡问 题。</p>
<h2 id="为什么需要集群"><a href="#为什么需要集群" class="headerlink" title="为什么需要集群"></a>为什么需要集群</h2><p>以往，企业用户在构建信息应用系统时只能在两种计算体系中进行选择，一是基于主机的计算体系，大体上采用的就是我们上面描述的分区方式；另一就是基于客户 机/服务器的群集型计算体系。基于主机的计算体系具有良好的系统可伸缩性、可靠性和高性能，但它昂贵的价格迫使用户在系统建设之初就在硬件系统上投入巨大 资源，而用户花费巨额资金购买的主机系统也许包含了不少并不需要的功能，造成资源浪费。基于客户机/服务器的群集型计算体系允许用户根据实际需要逐步增加 硬件系统，但这种体系的系统毕竟不是真正意义上的集群，缺乏必要的可用性和可管理性，在应用升级和管理方面都需要用户付出巨大的代价，每增加一个服务器/ 客户端的连接就要同时增加两端的管理负担。</p>
<p>因此，未来对计算速度、系统可靠性和成本实效性的要求必将促使发展另外的计算机模型来替代上述的计算模型。随着计算机网络的出现，一个新的具有更高性能/ 价格比的体系逐渐成为应用主流–分布式集群计算体系。当用户需要完成任何任务时，分布式集群计算提供了尽可能多的计算机处理能力和数据的透明访问能力， 同时实现高性能与高可靠性的目标。</p>
<p>集群计算模式是最经济的计算模式。集群系统允许用户把普通商用硬件系统组成机群，并根据需要随时在机群中增加新的硬件，提高系统的伸缩性和可用性，从而能 够在价格相对低廉的中低端平台上享用过去只有高端系统才具备的高可伸缩性和高可用性，既提高了系统的性能，同时也降低了成本,实现了更多的计算机=更快速 度的目标。</p>
<p>人们对集群计算的兴趣日益增加。集群计算的主题是多种多样的，许多研究人员正在研究有关分布式硬件体系结构和分布式系统软件设计的各方面问题以开发利用潜在的集群并行性和集群可用性。</p>
<p>集群计算系统（或叫做分布式系统）多种多样并涉及不同的系统体系结构。对一些用户来说，一个集群系统是为解决单个问题而紧密结合在一起工作的多处理机的集 合。对另一些用户来说，一个集群系统可能意味着一个由地理上分散的各自独立的处理机组成的计算机网络，这些处理机连接在一起以实现对不同资源的共享。</p>
<p>然而，集群这个词在计算机系统中被如此广泛应用以至于它的使用变得有点贬值。许多这方面的混乱来源于缺乏对物理的分布和逻辑的分布的区分。通过区分这两个概念，就可以更准确地描述一个分布式系统的属性。</p>
<p>对于分布式集群系统，我们使用以下 <strong>定义</strong>：在用户看来，一个集群系统是一个单一的普通系统，然而运行在一系列自治处理单元（PE也叫节 点）上的系统，每个处理单元（结点）有各自的物理内存空间并且并且通过高速链路或者标准商品化网络连接。结点间通过紧密的合作实现对同一任务的协同计算。 系统必须支持任意数量的进程和结点的动态扩展。</p>
<p>建立一个集群系统的主要目的在于：</p>
<ul>
<li>固有的应用得以保障。集群系统以一种很自然的方式开始存在，例如，在我们的社会中，人们常常以群体的形式出现并彼此共享信息，公司、社团、班级等等都是这 样的概念。在从个人计算向集群分布式计算迁移的时候，往往可以保留原有在个人计算系统上的应用，直接将原有的应用重新在新的集群系统中运行，并获得性能的 提升。这也是集群出现的一大原因。</li>
<li>性能/成本。集群系统的并行性降低了处理的瓶颈，提供了全面改进的性能，也就是说，集群系统提供了更好的性能价格比。</li>
<li>资源共享。集群系统能有效地支持不同位置的用户对信息和资源（硬件和软件）的共享。</li>
<li>灵活性和可扩展性。集群系统可以增量扩展，并能方便地修改或扩展系统以适应变化的环境而无需中断其运行。</li>
<li>实用性和容错性。依靠存储单元和处理单元的多重性，集群系统具有在系统出现故障的情况下继续运行的潜力。</li>
<li>可伸缩性。集群系统能容易地扩大以包括更多的资源（硬件和软件）。<br>最近，我们注意到，除了原有的以生产商用专有集群系统为主的厂商仍在发展自己的专有平台集群系统外，几个主要的硬件厂商都在研制并有计划推出基于 Linux的开放源码的集群产品，比如IBM、HP、SGI等等。开放源码界的迅猛发展为集群的出现提供良好的技术舞台，而向TurboLinux、 VALinux等老牌的Linux厂商更是把Linux集群这一高端应用领域作为自己的战略发展方向，不遗余力的加入激烈的市场产品竞争中。涌现在我们面 前的则是多种多样的可供选择的集群解决方案，有硬件的也有软件的。那么，如何借助开放源码届丰富的技术资源，实现一个优秀的集群系统呢？首先可以肯定的 是：一个优秀的集群系统不可能是一蹴而就的，需要仔细考虑用户的应用环境、业务需求、所能投入的成本还有技术的后继支援。下面，我们从集群技术方面一些比 较重要的功能来探讨一个优秀集群系统所应该具备的一些根本性的因素。而在此之前，我们先来看一个可能是最常见的小故事。</li>
</ul>
<h2 id="管理员的故事"><a href="#管理员的故事" class="headerlink" title="管理员的故事"></a>管理员的故事</h2><p>对于用户来说，怎样看待计算机系统和计算资源是因人而异的。特别是在群集应用环境中，不同的用户需求对资源的要求和侧重点也有所不同。</p>
<p>这里有一个故事，发生在一个被频繁访问的小门户站点。网站刚开始运行了一段时间后，情况良好，但是不久后管理员发现用户抱怨响应速度很低。于是，他升级了 服务器的CPU和磁盘系统，又加了512M的内存。心想，这会总不会有人再说什么了吧。可是，过了没多久，（当然，我们的这位站点很幸运的又吸引了大量的 用户，现在用户数量变成了原来的5倍），情况更糟糕了，在高峰期间有的访问甚至被站点拒绝。这是怎么回事呢？再升级吧，可硬件的升级似乎走到了尽头，我们 的管理员再次陷入困境。</p>
<p>这里，不幸的管理员遇到了系统瓶颈问题。通过查看日志，我们发现服务器CPU的负荷基本保持在10％左右（占用率），但是却有很多请求等待处理。是CPU 不够快吗，显然不是；是磁盘太慢吗，已经用了最快的RAID阵列，平均寻道时间到达5ms，不能再快了；内存不够大吗，主板所能支持的只有4G，已经到了 上限。所有的一切已经是极限，再升级下去只好更换到大型机了（那又会是一个无休止的投入）。站点每天仍要接受上百万次甚至上千万次的页面访问，怎么样才能 既控制服务器硬件成本又能大幅度提高性能呢？</p>
<p>固然，添加高速磁盘阵列可以减少寻道时间，提高响应的速度，或者，使用Cache技术能够加快页面访问效率。但是，一味地依靠扩展单一系统的硬件终究会有 上限，磁盘、内存、网络代宽的发展速度远远低于CPU的摩尔定律速度，造成彼此性能的互相牵制。而且，在单机系统种，越到高端的硬件，成本与性能比越是成 指数下降（见下图）。解决这样的问题，就有必要从体系结构入手，而不是简单的升级机器。</p>
<h5 id="单机系统性能-价格曲线"><a href="#单机系统性能-价格曲线" class="headerlink" title="单机系统性能/价格曲线"></a>单机系统性能/价格曲线</h5><p><img src="http://www.ibm.com/developerworks/cn/linux/cluster/cluster_system/base/part1/fig1.gif" alt="单机系统性能/价格曲线"></p>
<p>在上面的故事里。对于用户而言（指的是系统管理员和网站用户），服务器是提供web服务的资源，是若干计算、存储、数据的资源集合（查找数据、提供空 间）。用户关心的是你的站点的响应速度而非你用了多快的CPU多大的内存。因此，我们从用户的角度出发，不难发现，如何看待你的计算资源，是紧紧和使用者 的需求联系在一起的。那么，解决问题的关键就不是一些简单的数字层面上的思考了。沿着用户的需求–提高站点的响应速度，更确切的说缩短web站点响应每 个HTTP请求的时间�D�D是管理员首要解决的问题。</p>
<p>我们并不否认升级硬件的作用，但是我们知道，这样的情况下，仅仅依赖硬件的局部更换是不经济的做法。CPU由500MHz变成1GHz，web的性能不会就提升两倍，甚至毫不夸张的说，这种升级只能提高web性能10％左右。喔，太令人沮丧了～～。</p>
<p>那我们能不能反过来想呢，既然量变没有实质作用，那干脆就来个大改革。彻底改变服务器的体系结构。当然，要把花费的钞票控制在BOSS可以承受的范围内，钱是用来花的不是用来烧的。方案可能有：</p>
<ol>
<li>替换原有的系统，购买64位元服务器，比如SUN的Enterprise2000 ，不但CPU够劲，总线带宽也足够支撑严酷的应用环境考研，而且，千百万用户证实了：SUN就是我们”.COM”的那个至关重要的”点”。软硬件都没话说，那我们就买吧！</li>
</ol>
<p>呃～，等等，什么，你再说一遍，一台Enterprise要我XX万大洋！？原有的ASP要重写！！？？请一个管理员维护费要~~！！！</p>
<p>我已经听不下去了，更何况掏腰包的人。更换系统就意味着投资、投资、再投资，更要命的是，原来的东西怎么办？扔掉？留着也没用。</p>
<p>更换系统的硬件平台显然不是解决问题的好办法，那么，在原有的基础上扩展系统呢？于是，有了下面的这种方法：</p>
<ol>
<li>利用免费的集群软件，在保留原有的硬件投资基础上，添加几台新的PC设备，组建负载均衡集群系统。既然一台机器解决不了问题，那就让多台机器一起分担吧。怎么做呢？</li>
</ol>
<p>第一步：安装Linux或者BSD操作系统，由于拥有广大的开放源码届的大力支持，你无须担心缺少优秀应用程序。无论你是在怎样应用环境中，开放源码团体总能为你提供合适的稳定的软件。</p>
<p>第二步：安装相应的Kernel和有关的系统补丁。并且安装和你的kernel匹配的集群软件包。比较常见的有LVS、LSF、MOSIX等。都可以很好 满足负载均衡的要求。其中LVS由于其基于Netfilter技术，具有很好的可扩展性和性能表现，受到广大开发者的青睐。</p>
<p>第三步：配置你的负载均衡集群系统。无非就是配置一些脚本文件。大多数的集群配置文件都是直接可编辑的，文法简单，编好即用，非常方便。</p>
<p>第四步：配置你的集群服务软件。这里的服务软件特指那些提供实际网络服务的应用程序。其实一般都是WEB SERVER或者Mail Server。故事中是一个Web站点，我们就弄个Apache吧。不管你是静态文本还是CGI，Apache都能够帮助你实现平滑的Web移植。如果你 不幸使用了ASP这样的专有技术，你还可以考虑诸iASP这样的第三方插件来实现移植。一般来说，对于PHP、JSP和CGI，Apache都能支持的很 好。</p>
<p>第五步：适当设定你的数据中心。其实这一步对于集群系统来说非常重要。因为由单台服务器转向分布式的集群结构，数据的存储一致问题就凸现而出。如果WEB 应用集中于数据库访问，那么可以使用集中的数据库服务器，Progresql或者Mysql甚至是Oracle都行，其本身对于数据的一致、安全、性能都 有保障。或者，可以考虑使用NFS、AFS等分布式文件系统来共享集群各结点的存储空间和应用数据。</p>
<p>最后一步：写一份报告。告诉你的BOSS你不但顺利解决了站点的瓶颈问题，而且大大大减轻了他花钱升级的痛苦（实际上，除了购买廉价服务器的费用，其他基本上没有什么花费）。说不定吝啬的BOSS还会涨你的工资呢～嘿嘿。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>故事讲完，不知各位看官有何感想。其实集群技术并不是实验室的阳春白雪，也不是老教授闭门造车的产物。集群技术”和我们的国计民生，老百姓的生活有密切的关系” ；）。我们看到，适当的应用集群技术，不但具有明显的经济效益（很多用户就是冲着省钱而来），而且在性能、可用性、稳定性等诸多方面，具有很强的可扩展性。是计算体系近年来发展的主要方向。</p>
<p>研究集群技术，需要从多个方面着手，多角度的考虑集群系统。如果从上述的资源的角度考虑集群，就要注意用户是需要什么样的计算资源，是计算能力呢还是响应 速度，或者是可用性；如果从硬件构架看，就有工作站集群（COW）、大规模并行处理机（MPP）、对称多处理机（SMP）、分布式异构计算集群（典型是 GRID）；如果从应用领域看，既有侧重于科学和工程计算的并行计算集群，也有侧重于作业负载的负载平衡集群，或者是广泛应用于严格商用环境的高可用容错 集群；还有考虑集群的时候重点研究的几个方面：可用性、单一系统映像（SSI）、作业管理、调度、 通信等等。可以说，孤立的从某一个角度或者某一个方面看集群，是无法真正了解集群的原理，准确的评估集群的各方面能力、性能，更别说为应用需求选择合适的 集群环境了。了解集群，就得先从体系结构的设计和可扩展性开始。</p>
<p>&nbsp;</p>
<p>作者：林凡</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java synchronized详解]]></title>
      <url>http://www.ibmer.info/java-synchronized.html</url>
      <content type="html"><![CDATA[<p># </p>
<div id="cnblogs_post_body"><br><br><span style="font-size: 14pt;"><strong><span style="color: #0000ff;">第一篇：</span></strong></span><br><br><strong><span style="color: #0000ff;">使用synchronized</span>
</strong><br><br>在编写一个类时，如果该类中的代码可能运行于多线程环境下，那么就要考虑同步的问题。在Java中内置了语言级的同步原语 －－synchronized，这也大大简化了Java中多线程同步的使用。我们首先编写一个非常简单的多线程的程序，是模拟银行中的多个线程同时对同一 个储蓄账户进行存款、取款操作的。<br>在程序中我们使用了一个简化版本的Account类，代表了一个银行账户的信息。在主程序中我们首先生成了 1000个线程，然后启动它们，每一个线程都对John的账户进行存100元，然后马上又取出100元。这样，对于John的账户来说，最终账户的余额应 该是还是1000元才对。然而运行的结果却超出我们的想像，首先来看看我们的演示代码：<br><div><br><div><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">class Account {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    String name;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    float amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public Account(String name, float amount) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        this.name = name;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        this.amount = amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public  void deposit(float amt) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        float tmp = amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        tmp += amt;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        try {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            Thread.sleep(100);//模拟其它处理所需要的时间，比如刷新数据库等<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        } catch (InterruptedException e) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            // ignore<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        amount = tmp;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public  void withdraw(float amt) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        float tmp = amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        tmp -= amt;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        try {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            Thread.sleep(100);//模拟其它处理所需要的时间，比如刷新数据库等<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        } catch (InterruptedException e) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            // ignore<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        amount = tmp;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public float getBalance() {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        return amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">}<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">public class AccountTest{<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    private static int NUM_OF_THREAD = 1000;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    static Thread[] threads = new Thread[NUM_OF_THREAD];<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public static void main(String[] args){<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        final Account acc = new Account(“John”, 1000.0f);<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        for (int i = 0; i&lt; NUM_OF_THREAD; i++) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            threads[i] = new Thread(new Runnable() {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                public void run() {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                        acc.deposit(100.0f);<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                        acc.withdraw(100.0f);<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            });<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            threads[i].start();<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        for (int i=0; i&lt;NUM_OF_THREAD; i++){<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            try {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                threads[i].join(); //等待所有线程运行结束<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            } catch (InterruptedException e) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">                // ignore<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        System.out.println(“Finally, John’s balance is:” + acc.getBalance());<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">}<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""></div><br></div><br>注意，上面在Account的deposit和withdraw方法中之所以要把对amount的运算使用一个临时变量首先存 储，sleep一段时间，然后，再赋值给amount，是为了模拟真实运行时的情况。因为在真实系统中，账户信息肯定是存储在持久媒介中，比如RDBMS 中，此处的睡眠的时间相当于比较耗时的数据库操作，最后把临时变量tmp的值赋值给amount相当于把amount的改动写入数据库中。运行 AccountTest，结果如下（每一次结果都会不同）：<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:3900.0<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:4900.0<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:4700.0<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:3900.0<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:3900.0<br><br>E:\java\exer\bin&gt;java AccountTest<br>Finally, John’s balance is:5200.0<br><br>为 什么会出现这样的问题？这就是多线程中的同步的问题。在我们的程序中，Account中的amount会同时被多个线程所访问，这就是一个竞争资源，通常 称作竞态条件。对于这样的多个线程共享的资源我们必须进行同步，以避免一个线程的改动被另一个线程所覆盖。在我们这个程序中，Account中的 amount是一个竞态条件，所以所有对amount的修改访问都要进行同步，我们将deposit()和withdraw()方法进行同步，修改为：<br><div><br><div><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">  public synchronized void deposit(float amt) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        float tmp = amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        tmp += amt;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        try {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            Thread.sleep(1);//模拟其它处理所需要的时间，比如刷新数据库等<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        } catch (InterruptedException e) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            // ignore<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        amount = tmp;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    public synchronized void withdraw(float amt) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        float tmp = amount;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        tmp -= amt;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        try {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            Thread.sleep(1);//模拟其它处理所需要的时间，比如刷新数据库等<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        } catch (InterruptedException e) {<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">            // ignore<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""><br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">        amount = tmp;<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt="">    }<br><img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" alt=""></div><br></div><br>此时，再运行，我们就能够得到正确的结果了。Account中的getBalance()也访问了amount，为什么不对getBalance()同步呢？因为getBalance()并不会修改amount的值，所以，同时多个线程对它访问不会造成数据的混乱。<br><br>&nbsp;<br><br><strong><span style="color: #0000ff;">同步加锁的是对象，而不是代码。</span></strong><br><br>因此，如果你的类中有一个同步方法，这个方法可以被两个不同的线程同时执行，只要每个线程自己创建一个的该类的实例即可。<br><br>&nbsp;<br><br>参考下面的代码：<br><br>class Foo extends Thread<br>{<br>private int val;<br>public Foo(int v)<br>{<br>val = v;<br>}<br>public synchronized void printVal(int v)<br>{<br>while(true)<br>System.out.println(v);<br>}<br>public void run()<br>{<br>printVal(val);<br>}<br>}<br>class SyncTest<br>{<br>public static void main(String args[])<br>{<br>Foo f1 = new Foo(1);<br>f1.start();<br>Foo f2 = new Foo(3);<br>f2.start();<br>}<br>}<br><br>运行SyncTest产生的输出是1和3交叉的。如果printVal是断面，你看到的输出只能是1或者只能是3而不能是两者同时出现。程序运行的结果证明两个线程都在并发的执行printVal方法，即使该方法是同步的并且由于是一个无限循环而没有终止。<br><br><span style="color: #0000ff;"><strong>类的同步：</strong></span><br><br>要实现真正的断面，你必须同步一个全局对象或者对类进行同步。下面的代码给出了一个这样的范例。<br><br>class Foo extends Thread<br>{<br>private int val;<br>public Foo(int v)<br>{<br>val = v;<br>}<br>public void printVal(int v)<br>{<br>synchronized(Foo.class) {<br>while(true)<br>System.out.println(v);<br>}<br>}<br>public void run()<br>{<br>printVal(val);<br>}<br>}<br><br>上面的类不再对个别的类实例同步而是对类进行同步。对于类Foo而言，它只有唯一的类定义，两个线程在相同的锁上同步，因此只有一个线程可以执行printVal方法。<br><br>这个代码也可以通过对公共对象加锁。例如给Foo添加一个静态成员。两个方法都可以同步这个对象而达到线程安全。<br><br>面笔者给出一个参考实现，给出同步公共对象的两种通常方法：<br><br>1、<br><br>class Foo extends Thread<br>{<br>private int val;<br>private static Object lock=new Object();<br>public Foo(int v)<br>{<br>val = v;<br>}<br>public void printVal(int v)<br>{<br>synchronized(lock) {<br>while(true)<br>System.out.println(v);<br>}<br>}<br>public void run()<br>{<br>printVal(val);<br>}<br>}<br><br>上面的这个例子比原文给出的例子要好一些，因为原文中的加锁是针对类定义的，一个类只能有一个类定义，而同步的一般原理是应该尽量减小同步的粒度以到达更好的性能。笔者给出的范例的同步粒度比原文的要小。<br><br>2、<br><br>class Foo extends Thread<br>{<br>private String name;<br>private String val;<br>public Foo(String name,String v)<br>{<br>this.name=name;<br>val = v;<br>}<br>public void printVal()<br>{<br>synchronized(val) {<br>while(true) System.out.println(name+val);<br>}<br>}<br>public void run()<br>{<br>printVal();<br>}<br>}<br>public class SyncMethodTest<br>{<br>public static void main(String args[])<br>{<br>Foo f1 = new Foo(“Foo 1:”,”printVal”);<br>f1.start();<br>Foo f2 = new Foo(“Foo 2:”,”printVal”);<br>f2.start();<br>}<br>}<br><br>上面这个代码需要进行一些额外的说明，因为JVM有一种优化机制，因为String类型的对象是不可变的，因此当你使用””的形式引用字符串 时，如果JVM发现内存已经有一个这样的对象，那么它就使用那个对象而不再生成一个新的String对象，这样是为了减小内存的使用。<br><br>上面的main方法其实等同于：<br><br>public static void main(String args[])<br>{<br>String value=”printVal”;<br>Foo f1 = new Foo(“Foo 1:”,value);<br>f1.start();<br>Foo f2 = new Foo(“Foo 2:”,value);<br>f2.start();<br>}<br><br><span style="color: #0000ff;"><strong> </strong></span><br><br><strong><span style="color: #0000ff;">总结：</span></strong><br><br>1、synchronized关键字的作用域有二种：<br>1）是某个对象实例内，synchronized aMethod(){}可以防止多个线程同时访问这个对象的synchronized方法（如果一个对象有多个synchronized方法，只要一个线 程访问了其中的一个synchronized方法，其它线程不能同时访问这个对象中任何一个synchronized方法）。这时，不同的对象实例的 synchronized方法是不相干扰的。也就是说，其它线程照样可以同时访问相同类的另一个对象实例中的synchronized方法；<br>2）是某个类的范围，synchronized static aStaticMethod{}防止多个线程同时访问这个类中的synchronized static 方法。它可以对类的所有对象实例起作用。<br><br>2、除了方法前用synchronized关键字，synchronized关键字还可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。用法是: synchronized(this){/<em>区块</em>/}，它的作用域是当前对象；<br><br>3、synchronized关键字是不能继承的，也就是说，基类的方法synchronized f(){} 在继承类中并不自动是synchronized f(){}，而是变成了f(){}。继承类需要你显式的指定它的某个方法为synchronized方法；<br><br>Java语言的关键字，当它用来修饰一个方法或者一个代码块的时候，能够保证在同一时刻最多只有一个线程执行该段代码。<br><br>一、当两个并发线程访问同一个对象object中的这个synchronized(this)同步代码块时，一个时间内只能有一个线程得到执行。另一个线程必须等待当前线程执行完这个代码块以后才能执行该代码块。<br><br>二、然而，当一个线程访问object的一个synchronized(this)同步代码块时，另一个线程仍然可以访问该object中的非synchronized(this)同步代码块。<br><br>三、尤其关键的是，当一个线程访问object的一个synchronized(this)同步代码块时，其他线程对object中所有其它synchronized(this)同步代码块的访问将被阻塞。<br><br>四、第三个例子同样适用其它同步代码块。也就是说，当一个线程访问object的一个synchronized(this)同步代码块时，它就获得了这个object的对象锁。结果，其它线程对该object对象所有同步代码部分的访问都被暂时阻塞。<br><br>五、以上规则对其它对象锁同样适用.<br><br>&nbsp;<br><br><strong><span style="font-size: 14pt; color: #0000ff;">第二篇：</span></strong><br><br>synchronized 关键字，它包括两种用法：synchronized 方法和 synchronized 块。<br>1. synchronized 方法：通过在方法声明中加入 synchronized关键字来声明 synchronized 方法。如：<br>public synchronized void accessVal(int newVal);<br>synchronized 方法控制对类成员变量的访问：每个类实例对应一把锁，每个 synchronized 方法都必须获得调用该方法的类实例的锁方能<br><br>执行，否则所属线程阻塞，方法一旦执行，就独占该锁，直到从该方法返回时才将锁释放，此后被阻塞的线程方能获得该锁，重新进入可执行<br><br>状态。这种机制确保了同一时刻对于每一个类实例，其所有声明为 synchronized 的成员函数中至多只有一个处于可执行状态（因为至多只有<br><br>一个能够获得该类实例对应的锁），从而有效避免了类成员变量的访问冲突（只要所有可能访问类成员变量的方法均被声明为 synchronized）<br><br>。<br>在 Java 中，不光是类实例，每一个类也对应一把锁，这样我们也可将类的静态成员函数声明为 synchronized ，以控制其对类的静态成<br><br>员变量的访问。<br>synchronized 方法的缺陷：若将一个大的方法声明为synchronized 将会大大影响效率，典型地，若将线程类的方法 run() 声明为<br><br>synchronized ，由于在线程的整个生命期内它一直在运行，因此将导致它对本类任何 synchronized 方法的调用都永远不会成功。当然我们可<br><br>以通过将访问类成员变量的代码放到专门的方法中，将其声明为 synchronized ，并在主方法中调用来解决这一问题，但是 Java 为我们提供<br><br>了更好的解决办法，那就是 synchronized 块。<br>2. synchronized 块：通过 synchronized关键字来声明synchronized 块。语法如下：<br>synchronized(syncObject) {<br>//允许访问控制的代码<br>}<br>synchronized 块是这样一个代码块，其中的代码必须获得对象 syncObject （如前所述，可以是类实例或类）的锁方能执行，具体机<br><br>制同前所述。由于可以针对任意代码块，且可任意指定上锁的对象，故灵活性较高。<br>对synchronized(this)的一些理解<br>一、当两个并发线程访问同一个对象object中的这个synchronized(this)同步代码块时，一个时间内只能有一个线程得到执行。另一个线<br><br>程必须等待当前线程执行完这个代码块以后才能执行该代码块。<br>二、然而，当一个线程访问object的一个synchronized(this)同步代码块时，另一个线程仍然可以访问该object中的非synchronized<br><br>(this)同步代码块。<br>三、尤其关键的是，当一个线程访问object的一个synchronized(this)同步代码块时，其他线程对object中所有其它synchronized(this)<br><br>同步代码块的访问将被阻塞。<br>四、第三个例子同样适用其它同步代码块。也就是说，当一个线程访问object的一个synchronized(this)同步代码块时，它就获得了这个<br><br>object的对象锁。结果，其它线程对该object对象所有同步代码部分的访问都被暂时阻塞。<br>五、以上规则对其它对象锁同样适用<br><span style="font-size: 14pt; color: #0000ff;"><strong>第三篇：</strong></span><br><br>打个比方：一个object就像一个大房子，大门永远打开。房子里有 很多房间（也就是方法）。<br><br>这些房间有上锁的（synchronized方法）， 和不上锁之分（普通方法）。房门口放着一把钥匙（key），这把钥匙可以打开所有上锁的房间。<br><br>另外我把所有想调用该对象方法的线程比喻成想进入这房子某个 房间的人。所有的东西就这么多了，下面我们看看这些东西之间如何作用的。<br><br>在此我们先来明确一下我们的前提条件。该对象至少有一个synchronized方法，否则这个key还有啥意义。当然也就不会有我们的这个主题了。<br><br>一个人想进入某间上了锁的房间，他来到房子门口，看见钥匙在那儿（说明暂时还没有其他人要使用上锁的 房间）。于是他走上去拿到了钥匙<br><br>，并且按照自己 的计划使用那些房间。注意一点，他每次使用完一次上锁的房间后会马上把钥匙还回去。即使他要连续使用两间上锁的房间，<br><br>中间他也要把钥匙还回去，再取回来。<br><br>因此，普通情况下钥匙的使用原则是：“随用随借，用完即还。”<br><br>这时其他人可以不受限制的使用那些不上锁的房间，一个人用一间可以，两个人用一间也可以，没限制。但是如果当某个人想要进入上锁的房<br><br>间，他就要跑到大门口去看看了。有钥匙当然拿了就走，没有的话，就只能等了。<br><br>要是很多人在等这把钥匙，等钥匙还回来以后，谁会优先得到钥匙？Not guaranteed。象前面例子里那个想连续使用两个上锁房间的家伙，他<br><br>中间还钥匙的时候如果还有其他人在等钥匙，那么没有任何保证这家伙能再次拿到。 （JAVA规范在很多地方都明确说明不保证，象<br><br>Thread.sleep()休息后多久会返回运行，相同优先权的线程那个首先被执行，当要访问对象的锁被 释放后处于等待池的多个线程哪个会优先得<br><br>到，等等。我想最终的决定权是在JVM，之所以不保证，就是因为JVM在做出上述决定的时候，绝不是简简单单根据 一个条件来做出判断，而是<br><br>根据很多条。而由于判断条件太多，如果说出来可能会影响JAVA的推广，也可能是因为知识产权保护的原因吧。SUN给了个不保证 就混过去了<br><br>。无可厚非。但我相信这些不确定，并非完全不确定。因为计算机这东西本身就是按指令运行的。即使看起来很随机的现象，其实都是有规律<br><br>可寻。学过 计算机的都知道，计算机里随机数的学名是伪随机数，是人运用一定的方法写出来的，看上去随机罢了。另外，或许是因为要想弄<br><br>的确定太费事，也没多大意义，所 以不确定就不确定了吧。）<br><br>再来看看同步代码块。和同步方法有小小的不同。<br><br>1.从尺寸上讲，同步代码块比同步方法小。你可以把同步代码块看成是没上锁房间里的一块用带锁的屏风隔开的空间。<br><br>2.同步代码块还可以人为的指定获得某个其它对象的key。就像是指定用哪一把钥匙才能开这个屏风的锁，你可以用本房的钥匙；你也可以指定<br><br>用另一个房子的钥匙才能开，这样的话，你要跑到另一栋房子那儿把那个钥匙拿来，并用那个房子的钥匙来打开这个房子的带锁的屏风。<br><br>记住你获得的那另一栋房子的钥匙，并不影响其他人进入那栋房子没有锁的房间。<br><br>为什么要使用同步代码块呢？我想应该是这样的：首先对程序来讲同步的部分很影响运行效率，而一个方法通常是先创建一些局部变<br><br>量，再对这些变量做一些 操作，如运算，显示等等；而同步所覆盖的代码越多，对效率的影响就越严重。因此我们通常尽量缩小其影响范围。<br><br>如何做？同步代码块。我们只把一个方法中该同 步的地方同步，比如运算。<br><br>另外，同步代码块可以指定钥匙这一特点有个额外的好处，是可以在一定时期内霸占某个对象的key。还记得前面说过普通情况下钥<br><br>匙的使用原则吗。现在不是普通情况了。你所取得的那把钥匙不是永远不还，而是在退出同步代码块时才还。<br><br>还用前面那个想连续用两个上锁房间的家伙打比方。怎样才能在用完一间以后，继续使用另一间呢。用同步代码块吧。先创建另外<br><br>一个线程，做一个同步代码 块，把那个代码块的锁指向这个房子的钥匙。然后启动那个线程。只要你能在进入那个代码块时抓到这房子的钥匙<br><br>，你就可以一直保留到退出那个代码块。也就是说 你甚至可以对本房内所有上锁的房间遍历，甚至再sleep(10<em>60</em>1000)，而房门口却还有<br><br>1000个线程在等这把钥匙呢。很过瘾吧。<br><br>在此对sleep()方法和钥匙的关联性讲一下。一个线程在拿到key后，且没有完成同步的内容时，如果被强制sleep()了，那key还一<br><br>直在 它那儿。直到它再次运行，做完所有同步内容，才会归还key。记住，那家伙只是干活干累了，去休息一下，他并没干完他要干的事。为<br><br>了避免别人进入那个房间 把里面搞的一团糟，即使在睡觉的时候他也要把那唯一的钥匙戴在身上。<br><br>最后，也许有人会问，为什么要一把钥匙通开，而不是一个钥匙一个门呢？我想这纯粹是因为复杂性问题。一个钥匙一个门当然更<br><br>安全，但是会牵扯好多问题。钥匙 的产生，保管，获得，归还等等。其复杂性有可能随同步方法的增加呈几何级数增加，严重影响效率。这也<br><br>算是一个权衡的问题吧。为了增加一点点安全性，导致效 率大大降低，是多么不可取啊。<br><br>synchronized的一个简单例子<br><br>public class TextThread {<br><br>public static void main(String[] args) {<br>TxtThread tt = new TxtThread();<br>new Thread(tt).start();<br>new Thread(tt).start();<br>new Thread(tt).start();<br>new Thread(tt).start();<br>}<br>}<br><br>class TxtThread implements Runnable {<br>int num = 100;<br>String str = new String();<br><br>public void run() {<br>synchronized (str) {<br>while (num &gt; 0) {<br><br>try {<br>Thread.sleep(1);<br>} catch (Exception e) {<br>e.getMessage();<br>}<br>System.out.println(Thread.currentThread().getName()<br>+ “this is “ + num–);<br>}<br>}<br>}<br>}<br><br>上面的例子中为了制造一个时间差,也就是出错的机会,使用了Thread.sleep(10)<br><br>Java对多线程的支持与同步机制深受大家的喜爱，似乎看起来使用了synchronized关键字就可以轻松地解决多线程共享数据同步问题。到底如<br><br>何？――还得对synchronized关键字的作用进行深入了解才可定论。<br><br>总的说来，synchronized关键字可以作为函数的修饰符，也可作为函数内的语句，也就是平时说的同步方法和同步语句块。如果再细的分类，<br><br>synchronized可作用于instance变量、object reference（对象引用）、static函数和class literals(类名称字面常量)身上。<br><br>在进一步阐述之前，我们需要明确几点：<br><br>A．无论synchronized关键字加在方法上还是对象上，它取得的锁都是对象，而不是把一段代码或函数当作锁――而且同步方法很可能还会被其<br><br>他线程的对象访问。<br><br>B．每个对象只有一个锁（lock）与之相关联。<br><br>C．实现同步是要很大的系统开销作为代价的，甚至可能造成死锁，所以尽量避免无谓的同步控制。<br><br>接着来讨论synchronized用到不同地方对代码产生的影响：<br><br>假设P1、P2是同一个类的不同对象，这个类中定义了以下几种情况的同步块或同步方法，P1、P2就都可以调用它们。<br><br>1． 把synchronized当作函数修饰符时，示例代码如下：<br><br>Public synchronized void methodAAA()<br><br>{<br><br>//….<br><br>}<br><br>这也就是同步方法，那这时synchronized锁定的是哪个对象呢？它锁定的是调用这个同步方法对象。也就是说，当一个对象P1在不同的线程中<br><br>执行这个同步方法时，它们之间会形成互斥，达到同步的效果。但是这个对象所属的Class所产生的另一对象P2却可以任意调用这个被加了<br><br>synchronized关键字的方法。<br><br>上边的示例代码等同于如下代码：<br><br>public void methodAAA()<br><br>{<br><br>synchronized (this)      // (1)<br><br>{<br><br>//…..<br><br>}<br><br>}<br><br>(1)处的this指的是什么呢？它指的就是调用这个方法的对象，如P1。可见同步方法实质是将synchronized作用于object reference。――那个<br><br>拿到了P1对象锁的线程，才可以调用P1的同步方法，而对P2而言，P1这个锁与它毫不相干，程序也可能在这种情形下摆脱同步机制的控制，造<br><br>成数据混乱：（<br><br>2．同步块，示例代码如下：<br><br>public void method3(SomeObject so)<br><br>{<br><br>synchronized(so)<br><br>{<br>//…..<br>}<br><br>}<br><br>这时，锁就是so这个对象，谁拿到这个锁谁就可以运行它所控制的那段代码。当有一个明确的对象作为锁时，就可以这样写程序，但当没有明<br><br>确的对象作为锁，只是想让一段代码同步时，可以创建一个特殊的instance变量（它得是一个对象）来充当锁：<br><br>class Foo implements Runnable<br><br>{<br><br>private byte[] lock = new byte[0]; // 特殊的instance变量<br><br>Public void methodA()<br>{<br><br>synchronized(lock) { //… }<br><br>}<br><br>//…..<br><br>}<br><br>注：零长度的byte数组对象创建起来将比任何对象都经济――查看编译后的字节码：生成零长度的byte[]对象只需3条操作码，而Object lock<br><br>= new Object()则需要7行操作码。<br><br>3．将synchronized作用于static 函数，示例代码如下：<br><br>Class Foo<br>{<br><br>public synchronized static void methodAAA()   // 同步的static 函数<br>{<br>//….<br>}<br><br>public void methodBBB()<br>{<br><br>synchronized(Foo.class)   // class literal(类名称字面常量)<br><br>}<br>}<br><br>代码中的methodBBB()方法是把class literal作为锁的情况，它和同步的static函数产生的效果是一样的，取得的锁很特别，是当前调用这<br><br>个方法的对象所属的类（Class，而不再是由这个Class产生的某个具体对象了）。<br><br>记得在《Effective Java》一书中看到过将 Foo.class和 P1.getClass()用于作同步锁还不一样，不能用P1.getClass()来达到锁这个Class的<br><br>目的。P1指的是由Foo类产生的对象。<br><br>可以推断：如果一个类中定义了一个synchronized的static函数A，也定义了一个synchronized 的instance函数B，那么这个类的同一对象Obj<br><br>在多线程中分别访问A和B两个方法时，不会构成同步，因为它们的锁都不一样。A方法的锁是Obj这个对象，而B的锁是Obj所属的那个Class。<br><br>小结如下：<br><br>搞清楚synchronized锁定的是哪个对象，就能帮助我们设计更安全的多线程程序。<br><br>还有一些技巧可以让我们对共享资源的同步访问更加安全：<br><br>1． 定义private 的instance变量+它的 get方法，而不要定义public/protected的instance变量。如果将变量定义为public，对象在外界可以<br><br>绕过同步方法的控制而直接取得它，并改动它。这也是JavaBean的标准实现方式之一。<br><br>2． 如果instance变量是一个对象，如数组或ArrayList什么的，那上述方法仍然不安全，因为当外界对象通过get方法拿到这个instance对象<br><br>的引用后，又将其指向另一个对象，那么这个private变量也就变了，岂不是很危险。 这个时候就需要将get方法也加上synchronized同步，并<br><br>且，只返回这个private对象的clone()――这样，调用端得到的就是对象副本的引用了<br><br></div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于Session的分布式存储和容灾问题]]></title>
      <url>http://www.ibmer.info/session-distribute.html</url>
      <content type="html"><![CDATA[<div>引子：一般对session的分布式管理常用的有以下3中方式，当然必须是当访问用户达到一定的量级以后才有分布式Session的概念</div><br><div>1）集群分组</div><br><div>2）一致性哈希</div><br><div>3）放置前端cookie中</div><br><div></div><br><div><strong>首先说说集群分组：</strong></div><br><div><br><br><em>   一般一组memcache支持3000个并发，如果10组就是30000个并发， 你想瞬间30000个并发是什么感念，每天几亿的Pv不是问题。
</em>   组内memcached服务器数量可配（一般2~4台）通过内存共享的方式对client来说就是一块内存，其实是几台memcached服务台的合集。<br></div><br><div>容灾备份：重要的东西可以在memcached攒够了一个阀值，统一备份一次放到文件中或者数据库中，这样在一台服务器死掉后可以去数据库拿数据放在另外一台服务器上（这个有点耗时）</div><br><div>对于这个备份有比较成熟的解决方案，比如靠sina的开源插件，memcachedb这个 可以把 memcached数据缓存到 伯克利db里面  ）</div><br><div></div><br><div><strong>一致性哈希：</strong></div><br><div>这个比较普遍了，我以前的公司采用的就是这个办法。具体算法如下：</div><br><div></div><br><div>解释：其实是这样的，我们把所有的sessionId从前端用户请求cookie中拿到 做getHashCode（sessionId）=key1，多个sessionId就是keyn。。。。，在用一直的哈希算法后得到的key永远在一个 0~2的32次方内的定值，sessionID不同，这个key也就不同，这样在0到2的32次方的数可以组成一个闭环，在把我们的memcached服 务器也采用统一的hash算法一般是getHashCode（memcached ID地址）这样是不是服务器的key也落到这个闭环里面了，呵呵，从0开始向右，或者向左都行，一般是向右开始找key找到一个key就放到离他最近的一 个服务器的key中，这样在2个node之间的key就可以放在右侧的node服务器中。怎么知道key是sessionID算出来的，还是 memcached IP地址算出来的呢，哈哈，大家自己想想，别想的太复杂啊。</div><br><div></div><br><div><strong>放置前端cookie中：</strong></div><br><div>这个也比较简单，就是将用户的登陆成功信息放在cookie中，并设置一个失效时间，当用户请求web服务器时，这个请求会经过一个策略，这个策略会看cookie里面的信息，</div><br><div>如果发现已经登陆了，则将cookie里面的信息提出来用户用户基本信息展示，并给出已登录界面。</div><br><div>如果发现未登陆，直接给出登录界面。</div><br><div>这个方法就是有些浏览器对cookie的大小是有限制的，所有要将你放入cookie尽可能的小，bool型的用0,1表示，字符串编码成数字最好。</div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jvm的内部体系结构浅析]]></title>
      <url>http://www.ibmer.info/jvm-structure.html</url>
      <content type="html"><![CDATA[<p>jvm全称是Java Virtual Machine(java虚拟机)。它之所以被称之为是“虚拟”的，就是因为它仅仅是由一个规范来定义的抽象计算机。我们平时经常使用的Sun HotSpot虚拟机只是其中一个具体的实现(另外还有BEA JRockit、IBM J9等等虚拟机)。在实际的计算机上通过软件来实现一个虚拟计算机。与VMWare等类似软件不同，你是看不到jvm的，它存在于内存。</p>
<p>当启动一个Java程序时，一个虚拟机实例也就诞生了。当该程序关闭退出，这个虚拟机实例也就随之消亡。如果在同一台计算机上同时运行三个Java程序，将得到三个Java虚拟机实例。每个Java程序都运行于它自己的Java虚拟机实例中。</p>
<p>Java虚拟机在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域。根据《Java虚拟机规范（第2版）》的规定，Java虚拟机所管理的内存将会包括以下几个运行时数据区域，如下图1所示。</p>
<p><a href="/images/wp-uploads/2014/10/jvm-struct.jpg"><img src="/images/wp-uploads/2014/10/jvm-struct.jpg" alt="jvm-struct"></a></p>
<p>&nbsp;</p>
<p>下面先对图中各部分做个简单的说明：</p>
<p>1.class文件：虚拟机并不关心Class的来源是什么语言，只要它符合Java class文件格式就可以在Java虚拟机中运行。使用Java编译器可以把Java代码编译为存储字节码的Class文件，使用JRuby等其他语言的 编译器一样可以把程序代码编译成Class文件。</p>
<p>2.类装载器子系统：负责查找并装载Class 文件到内存，最终形成可以被虚拟机直接使用的Java类型。</p>
<p>3.方法区：在类装载器加载class文件到内存的过程中，虚拟机会提取其中的类型信息，并 将这些信息存储到方法区。方法区用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。由于所有线程都共享方法区，因此它们对 方法区数据的访问必须被设计为是线程安全的。</p>
<p>4.堆：存储Java程序创建的类实例。所有线程共享，因此设计程序时也要考虑到多线程访问对象(堆数据)的同步问题。</p>
<p>5.Java栈：Java栈是线程私有的。每当启动一个新线程时，Java虚拟机都会为它分 配一个Java栈。Java栈以帧为单位保存线程的运行状态。虚拟机只会直接对Java栈执行两种操作：以帧为单位的压栈或出栈。当线程调用java方法 时，虚拟机压入一个新的栈帧到该线程的java栈中。当方法返回时，这个栈帧被从java栈中弹出并抛弃。一个栈帧包含一个java方法的调用状态，它存 储有局部变量表、操作栈、动态链接、方法出口等信息。</p>
<p> 6.程序计数器：一个运行中的Java程序，每当启动一个新线程时，都会为这个新线程创建 一个自己的PC(程序计数器)寄存器。程序计数器的作用可以看做是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变这个计数器的值来 选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。如果线程正在执行的是一个Java方法， 这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Natvie方法，这个计数器值则为空(Undefined)。</p>
<p>7.本地方法栈：本地方法栈与虚拟机栈所发挥的作用是非常相似的，其区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则是为虚拟机使用到的Native方法服务。<span style="font-family: SimSun;">任何本地方法接口都会使用某种本地方法栈。当线程调用</span>Java<span style="font-family: SimSun;">方法时，虚拟机会创建一个新的栈帧并压入</span>Java<span style="font-family: SimSun;">栈。然而当它调用的是本地方法时，虚拟机会保持</span>Java<span style="font-family: SimSun;">栈不变，不再在线程的</span>Java<span style="font-family: SimSun;">栈中压入新的帧，虚拟机只是简单地动态链接并直接调用指定的本地方法。</span><span style="font-family: SimSun;">如果某个虚拟机实现的本地方法接口是使用</span>C<span style="font-family: SimSun;">连接模型的话，那么它的本地方法栈就是</span>C<span style="font-family: SimSun;">栈。</span></p>
<p><span style="font-family: SimSun;">8.<span style="font-family: SimSun;">执行引擎</span>： 负责执行字节码。方法的字节码是由Java虚拟机的指令序列构成的。每一条指令包含一个单字节的操作码，后面跟随0个或多个操作数。执行引擎执行字节码 时，首先取得一个操作码，如果操作码有操作数，取得它的操作数。它执行操作码和跟随的操作数规定的动作，然后再取得下一个操作码。这个执行字节码的过程在 线程完成前将一直持续。<br></span></p>
<p>&nbsp;</p>
<p>相关的参考资料:</p>
<p>1.深入Java虚拟机(原书第2版)</p>
<p>2.深入理解Java虚拟机:JVM高级特性与最佳实践</p>
<p>3.互联网相关的文章</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jvm的工作原理]]></title>
      <url>http://www.ibmer.info/jvm-theory.html</url>
      <content type="html"><![CDATA[<p>JVM在整个jdk中处于最底层,负责于操作系统的交互,用来屏蔽操作系统环境,提供一个完整的Java运行环境,因此也就虚拟计算机. 操作系统装入JVM是通过jdk中Java.exe来完成,通过下面4步来完成JVM环境.</p>
<p>1.创建JVM装载环境和配置</p>
<p>2.装载JVM.dll</p>
<p>3.初始化JVM.dll并挂界到JNIENV(JNI调用接口)实例</p>
<p>4.调用JNIEnv实例装载并处理class类。</p>
<p>&nbsp;</p>
<p><strong>一．JVM装入环境，JVM提供的方式是操作系统的动态连接文件．</strong>既然是文件那就一个装入路径的问题，Java 是怎么找这个路径的呢？当你在调用Java test的时候，操作系统会在path下在你的Java.exe程序，Java.exe就通过下面一个过程来确定JVM的路径和相关的参数配置了．下面基 于Windows的实现的分析．</p>
<p>首先查找jre路径，Java是通过GetApplicationHome api来获得当前的Java.exe绝对路径，c:\j2sdk1.4.2_09\bin\Java.exe,那么它会截取到绝对路径c: \j2sdk1.4.2_09\，判断c:\j2sdk1.4.2_09\bin\Java.dll文件是否存在，如果存在就把c: \j2sdk1.4.2_09\作为jre路径，如果不存在则判断c:\j2sdk1.4.2_09\jre\bin\Java.dll是否存在，如果存 在这c:\j2sdk1.4.2_09\jre作为jre路径．如果不存在调用GetPublicJREHome查HKEY_LOCAL_MACHINE \Software\JavaSoft\Java Runtime Environment\“当前JRE版本号”\JavaHome的路径为jre路径。</p>
<p>然后装载JVM.cfg文件JRE路径+\lib+\ARCH（CPU构架）+\JVM.cfgARCH（CPU构架）的判断是通过 Java_md.c中GetArch函数判断的，该函数中windows平台只有两种情况：WIN64的‘ia64’，其他情况都为‘i386’。以我的 为例：C:\j2sdk1.4.2_09\jre\lib\i386\JVM.cfg.主要的内容如下：</p>
<ol>
<li>-client KNOWN</li>
<li>-server KNOWN</li>
<li>-hotspot ALIASED_TO -client</li>
<li>-classic WARN</li>
<li>-native ERROR</li>
<li>-green ERROR<br>在我们的jdk目录中jre\bin\server和jre\bin\client都有JVM.dll文件存在，而Java正是通过JVM.cfg 配置文件来管理这些不同版本的JVM.dll的．通过文件我们可以定义目前jdk中支持那些JVM,前面部分（client）是JVM名称，后面是参 数，KNOWN表示JVM存在，ALIASED_TO表示给别的JVM取一个别名，WARN表示不存在时找一个JVM替代，ERROR表示不存在抛出异 常．在运行Java XXX是，Java.exe会通过CheckJVMType来检查当前的JVM类型，Java可以通过两种参数的方式来指定具体的JVM类型，一种按照 JVM.cfg文件中的JVM名称指定，第二种方法是直接指定，它们执行的方法分别是“Java -J”、“Java -XXaltJVM=”或“Java -J-XXaltJVM=”。如果是第一种参数传递方式，CheckJVMType函数会取参数‘-J’后面的JVM名称，然后从已知的JVM配置参数中 查找如果找到同名的则去掉该JVM名称前的‘-’直接返回该值；而第二种方法，会直接返回“-XXaltJVM=”或“-J-XXaltJVM=”后面的 JVM类型名称；如果在运行Java时未指定上面两种方法中的任一一种参数，CheckJVMType会取配置文件中第一个配置中的JVM名称，去掉名称 前面的‘-’返回该值。CheckJVMType函数的这个返回值会在下面的函数中汇同jre路径组合成JVM.dll的绝对路径。如果没有指定这会使用 JVM.cfg中第一个定义的JVM.可以通过set _Java_LAUNCHER_DEBUG=1在控制台上测试．</li>
</ol>
<p>最后获得JVM.dll的路径，JRE路径+\bin+\JVM类型字符串+\JVM.dll就是JVM的文件路径了，但是如果在调用Java程序时用-XXaltJVM=参数指定的路径path,就直接用path+\JVM.dll文件做为JVM.dll的文件路径．</p>
<p><strong>二：装载JVM.dll</strong></p>
<p>通过第一步已经找到了JVM的路径，Java通过LoadJavaVM来装入JVM.dll文件．装入工作很简单就是调用Windows API函数：</p>
<p>LoadLibrary装载JVM.dll动态连接库．然后把JVM.dll中的导出函数JNI_CreateJavaVM和 JNI_GetDefaultJavaVMInitArgs挂接到InvocationFunctions变量的CreateJavaVM和 GetDefaultJavaVMInitArgs函数指针变量上。JVM.dll的装载工作宣告完成。</p>
<p><strong>三：初始化JVM，获得本地调用接口，</strong>这样就可以在Java中调用JVM的函数了．调用InvocationFunctions－&gt;CreateJavaVM也就是JVM中JNI_CreateJavaVM方法获得JNIEnv结构的实例．</p>
<p><strong>四：运行Java程序．</strong></p>
<p>Java程序有两种方式一种是jar包，一种是class. 运行jar,Java -jar XXX.jar运行的时候，Java.exe调用GetMainClassName函数，该函数先获得JNIEnv实例然后调用Java类 Java.util.jar.JarFileJNIEnv中方法getManifest()并从返回的Manifest对象中取 getAttributes(“Main-Class”)的值即jar包中文件：META-INF/MANIFEST.MF指定的Main-Class的 主类名作为运行的主类。之后main函数会调用Java.c中LoadClass方法装载该主类（使用JNIEnv实例的FindClass）。main 函数直接调用Java.c中LoadClass方法装载该类。如果是执行class方法。main函数直接调用Java.c中LoadClass方法装载 该类。</p>
<p>然后main函数调用JNIEnv实例的GetStaticMethodID方法查找装载的class主类中</p>
<p>“public static void main(String[] args)”方法，并判断该方法是否为public方法，然后调用JNIEnv实例的</p>
<p>CallStaticVoidMethod方法调用该Java类的main方法。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring的事务配置]]></title>
      <url>http://www.ibmer.info/spring-transaction.html</url>
      <content type="html"><![CDATA[<p>Spring配置文件中关于事务配置总是由三个组成部分，分别是DataSource、TransactionManager和代理机制这三部分，无论哪种配置方式，一般变化的只是代理机制这部分。</p>
<p>DataSource、TransactionManager这两部分只是会根据数据访问方式有所变化，比如使用Hibernate进行数据访问 时，DataSource实际为SessionFactory，TransactionManager的实现为 HibernateTransactionManager。</p>
<p><a href="/images/wp-uploads/2014/10/spring-transaction.jpg"><img src="/images/wp-uploads/2014/10/spring-transaction.jpg" alt="spring-transaction"></a></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[12306铁路购票系统设计的思考]]></title>
      <url>http://www.ibmer.info/12306.html</url>
      <content type="html"><![CDATA[<p>1 今年春节期间铁路客流量据说有31亿<br>2 目前12306 pv是14亿，而高峰期就在8点到10点，那么也就是有可能在这两个小时里有5亿访问量，而每秒的并发量估计在最高峰时能达到几千万<br>3 目前Ngix能处理在线1万，但是实际值一般是8000左右<br>4 一台IBM大型机要几千万美元，估计加上DB2，交易中间件，得小1亿了<br>5 腾讯，淘宝等拥有总在线人数4亿规模或者事务处理达到亿级别的规模耗时七八年，总投资估计上百亿 （腾讯资料：1亿在线背后的技术挑战）</p>
<p>6 绝对不能两个人订到同一张票，而看到有票，而点击了下订单又说没票了这种失误是可以容忍的。</p>
<p>&nbsp;</p>
<p>假设一个车次能坐1000人，有10万个人想订这车次的这个时间的票，那么意味着这10万人要被分别负载到10台机器上，这10台机器要共同去维护这1000张票的余量。简单的分库分表大家都会，但是可能是有成千上万台机器来处理这些用户，而且这些用户还可以订全国的火车票。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>我想到了一些机制来处理，或者说先简化再处理问题：</p>
<p>总原则：不需要所有的人</p>
<p>1 职责分离，将登录，订票（查询，填表，下定单），支付，查订单，查车票等都分成不同的服务，采用不同的集群（服务）去处理。</p>
<p>2 登录系统，只要有足够的服务器，大家都可以登录进来，这个十分简单</p>
<p>3 订票，总原则是 让能够进入订票流程的人，快速无障碍的进入系统，设定15分钟为一个阀值，15分钟内成功下订单，则将其踢出订票系统，用户可以拿着订单号通过电话或者登录支付系统进行支付（Apple的网上商店即这样），超过15分钟没搞定的也被踢出，提示操作超时。点击订票之后，进入前置分析机，分析机负责计算背后的机器能负载多少用户下订单。比如目前有1百万人同时点击了订票，而背后只能负载10万人，那么出现一个随机摇号程序，摇出10万人，其他人返回 “系统繁忙，稍后重试”的提示。这10万人被负载在10台机器上，可以进行查询，当点击指定车票（标记为ClickSelectedTicket）后，根据车票被分散到不同的机器上（其实是MapRe<span style="text-decoration: underline;">du</span>ce的思想）。比如有1万人被定位到要订票T1，系统扔出900张T1票，留100张容错（随着系统逐步稳定，可减少容错票数），然后大家抢锁，采用乐观离线锁。在最终提交订单时检测</p>
<p>4 可以采用地铁高峰限流的方式（其实Apple购买iphone时也类似），就是增加到达ClickSelectedTicket之后的页面的路径，可以多绕几圈，最终减少并发可能性。</p>
<p>5 采用token机制保障页面必须从第一步点击订票开始进入，不可以绕过中间步骤。以免刷票机器人对系统造成冲击（当然还要做IP限定）</p>
<p>6 将票分到几台服务器上，将购买到该车次该时间车票则将身份证+车次+座位+时间作为key，这样验证是否此人已经订过该票一步搞定，然后异步统计余票。某台机器的票没有了，这台机器就被移除（类似于负载均衡原理，票没了就相当于机器挂了，目前常用的技术是心跳，还是异步统计）</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>还需考虑的问题是：一个座位分段卖出问题。各个铁路局分布式提供车票的问题。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[分布式系统开发常见问题-1. session的复制与共享 2. 分布式缓存的设计]]></title>
      <url>http://www.ibmer.info/session-memcached.html</url>
      <content type="html"><![CDATA[<ol>
<li>session的复制与共享</li>
</ol>
<p>在web应用中，为了应对大规模访问,必须实现应用的集群部署.要实现集群部署主要需要实现session共享机制,使得多台应用服务器之间会话统一, tomcat等多数主流web服务器都采用了session复制以及实现session的共享. 但问题还是很明显的：</p>
<p>在节点持续增多的情况下,session复制带来的性能损失会快速增加.特别是当session中保存了较大的对象,而且对象变化较快时,性能下降更加显著.这种特性使得web应用的水平扩展受到了限制.</p>
<p>&nbsp;</p>
<p>session共享的另一种思路就是把session集中起来管理,首先想到的是采用数据库来集中存储session,但数据库是文件存储相对内存慢了一个数量级,同时这势必加大数据库系统的负担.所以需要一种既速度快又能远程集中存储的服务：memcached</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>使用memcached来存储session有两种方案:</p>
<p>(1)直接通过tomcat6的扩展机制实现.</p>
<p>Reference: <a href="http://www.javaeye.com/topic/81641" target="_blank" rel="external"><span style="color: #108ac6;">http://www.javaeye.com/topic/81641</span></a></p>
<p>(2)通过自己编写filter实现.</p>
<p>考虑到系统的扩展,我们采用这种方案.这样可以使session共享机制和中间件脱钩.</p>
<p>Reference: <a href="http://www.javaeye.com/topic/82565" target="_blank" rel="external"><span style="color: #108ac6;">http://www.javaeye.com/topic/82565</span></a></p>
<p>主要思路:</p>
<p>1)继承重构<strong>HttpServletRequestWrapper</strong>,<strong>HttpSessionWrapper</strong>类,覆盖原来和session存取相关的方法呢,都通过SessionService类来实现.</p>
<p>2)使用filter拦截cookie中的sessionId,通过sessionId构造新的HttpServletRequestWrapper对象,传给后面的应用.</p>
<p>3)SessionService连接memcached服务,以sessionId作为key,存取的对象是一个map.map的内容即为session的内容.</p>
<p>&nbsp;</p>
<p>使用过程注意几个问题和改进思路：<br>1、memcache的内存应该足够大，这样不会出现用户session从Cache中被清除的问题(可以关闭memcached的对象退出机制)。<br>2、如果session的读取比写入要多很多，可以在memcache前再加一个Oscache等本地缓存，减少对memcache的读操作，从而减小网络开销，提高性能。<br>3、如果用户非常多，可以使用memcached组，通过set方法中带hashCode，插入到某个memcached服务器</p>
<p>&nbsp;</p>
<p>(3)使用memcached-session-manager管理session</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sed,awk,grep,cut,find 实例]]></title>
      <url>http://www.ibmer.info/sed-example.html</url>
      <content type="html"><![CDATA[<p>1.find / -type f -user logread -ls &gt;/dev/null<br>查找用户logread所有的普通文件并输出至屏幕；<br>2.find . -name “<em>.java” -mtime -2<br>查找当前目录下最近2天修改的java文件；<br>3.grep -in exp file<br>在file文件中搜索exp字符串，不区分大小写并显示行号(-c,只显示行数；-l,只显示文件名)；<br>4.grep -e “^0” file(grep -e “g$” file)<br>在file文件中搜索以0开头的行，或者以g结束的行。grep命令支持ERE，如grep -E ‘(x1|x2)x3’ file，搜索匹配x1x3或x2x3模式的行；<br>5.sed -n ‘/exp1/, /exp2/p’ file<br>在file文件中搜索与exp1,exp2模式匹配的之间的行数据；<br>6.sed -n ‘/exp1/w file1<br>&gt; /exp2/w file2<br>&gt; ‘ file<br>在file文件中搜索与exp1匹配的行，写入到file1文件中，搜索与exp2匹配的行，写入到file2文件中。也可以指定行，如sed -n ‘1,7w file1<br>&gt; 8,$w file2’ file，将file文件的1-7行写入到file1中，8-末尾行写入到file2中；<br>7.sed ‘4i\<br>string1\<br>&gt; string2<br>&gt; ‘ file<br>在file文件中第4行前插入string1和string2两行；<br>8.sed ‘a\<br>exp1\<br>exp2<br>‘ file<br>在file文件中每行后追加两行exp1和exp2；<br>9.sed ‘/^[ ]</em>$/d’ file<br>在file文件中删除空行，[]中包含a space and a tab；<br>10.sed ‘s/exp1/exp2/g’ file<br>将file文件中所有匹配exp1模式的字符串替换为匹配exp2模式的字符串。sed ‘s/^/exp1/‘ file，sed ‘s/$/exp1/‘ file，将file文件每行开头或者结束的地方插入exp1。sed还支持记忆模式，支持IRE；<br>11.awk -F”|” ‘ { print $NF}’ file<br>输出file每行最后一个字段的内容<br>awk用于格式化报文或者从文件中抽取数据包．<br>1.$awk ‘{print $0}’ gefforey.txt | tee gefforey.doc<br>该命令将在屏幕输出gefforey.txt文件内容并将其内容复制到gefforey.doc文件中．<br>2.$awk -F: ‘{print $1}’ gefforey.log<br>该命令以:为单位读取gefforey.log文件中第一列内容．<br>３.$awk ‘BEGIN {print “Name   Belt\n————“} {print $1”\t”$3}’ gefforey.txt<br>该命令将在屏幕首先输出”Name   Belt”，第二行输出”————“，并在输出文件内容的时候，每列之间间隔一个TAB位．可以在print语句之后加上END {print “end of output”}，那么将会在文件内容输出结束的时候打印”end of output”．<br>4.$awk ‘$2 ~ /^baidu$/ {print $0}’ gefforey.txt<br>该命令显示gefforey.txt文件中以空格分隔的第二列字符串是”baidu”的所有行．<br>5.$awk ‘{if($2 ~ /^baidu$/) print $0}’ gefforey.txt<br>该命令判断如果某行第二列字符串为”baidu”,则打印出该行．<br>6.$awk ‘{if($2 &lt; $3) print $0}’ gefforey.txt<br>该命令显示判断如果某行第二列值小于第三列值，则打印该行．awk的条件操作符有：<br>&lt; 小于，&gt; = 大于等于，&lt; = 小于等于，~ 匹配正则表达式，= = 等于，!~ 不匹配正则表达式，!= 不等于<br>7.$awk ‘{if($2 ==”google1” &amp;&amp; $3==”google2”) print $0}’ gefforey.txt<br>该命令判断如果某行第二列值为”google1”并且第三列值为”google2”，则打印出该行．awk的逻辑表达式有：&amp;&amp; AND，|| O R，! 非．<br>8.$awk ‘{print NF,NR,$0} END{print FILENAME}’ gefforey.txt<br>该命令会输出浏览记录的域个数和已读的记录数，并在输出结尾打印文件名．awk内置的变量有：<br>A R G C 命令行参数个数<br>A R G V 命令行参数排列<br>E N V I R O N 支持队列中系统环境变量的使用<br>FILENAME a w k浏览的文件名<br>F N R 浏览文件的记录数<br>F S 设置输入域分隔符，等价于命令行- F选项<br>N F 浏览记录的域个数<br>N R 已读的记录数<br>O F S 输出域分隔符<br>O R S 输出记录分隔符<br>R S 控制记录分隔符<br>（附：1.N F的一个强大功能是将变量$ P W D的返回值传入a w k并显示其目录。这里需要指定域分隔<br>符/．命令为：echo $PWD | awk -F/ ‘{print $NF}’;<br>2.显示文件名，命令为：echo “/usr/local/etc/rc.sybase” | awk -F/ ‘{print $NF}’．<br>9.$awk ‘{name=$1; belt=$3;if(belt ~ /yellow/) print name “is belt” belt }’ gefforey.txt<br>该命令将第一列的值赋给变量name,第三行的值赋给变量belt，并打印语句．awk允许在语句中进行赋值操作，赋值操作符有：=， +=， *=， / =， %=， ^ = ．<br>10.$awk ‘gsub(/111/,222) {print $0}’ gefforey.txt<br>该命令将文件中所有包含111的数字替换为222，awk的内置函数有：<br>g s u b ( r, s ) 在整个$ 0中用s替代r<br>g s u b ( r, s , t ) 在整个t中用s替代r<br>i n d e x ( s , t ) 返回s中字符串t的第一位置<br>l e n g t h ( s ) 返回s长度<br>m a t c h ( s , r ) 测试s是否包含匹配r的字符串<br>s p l i t ( s , a , f s ) 在f s上将s分成序列a<br>s p r i n t ( f m t , e x p ) 返回经f m t格式化后的e x p<br>s u b ( r, s ) 用$ 0中最左边最长的子串代替s<br>s u b s t r ( s , p ) 返回字符串s中从p开始的后缀部分<br>s u b s t r ( s , p , n ) 返回字符串s中从p开始长度为n的后缀部分<br>g s u b函数有点类似于s e d查找和替换。它允许替换一个字符串或字符为另一个字符串或字<br>符，并以正则表达式的形式执行。第一个函数作用于记录$ 0，第二个g s u b函数允许指定目标，<br>然而，如果未指定目标，缺省为$ 0。<br>i n d e x（s，t）函数返回目标字符串s中查询字符串t的首位置。l e n g t h函数返回字符串s字符<br>长度。m a t c h函数测试字符串s是否包含一个正则表达式r定义的匹配。s p l i t使用域分隔符f s将<br>字符串s划分为指定序列a。s p r i n t函数类似于p r i n t f函数（以后涉及），返回基本输出格式f m t的<br>结果字符串e x p。s u b（r，s）函数将用s替代$ 0中最左边最长的子串，该子串被（ r）匹配。<br>s u b（s，p）返回字符串s在位置p后的后缀。s u b s t r（s，p，n）同上，并指定子串长度为n。<br>11.$echo “65” | awk ‘{printf “//%c\n”,$0}’<br>该命令管道输出65到awk，并观察其ASCII字符．awk的printf函数格式如下：<br>% c A S C I I字符<br>% d 整数<br>% e 浮点数，科学记数法<br>% f 浮点数，例如（1 2 3 . 4 4）<br>% g a w k决定使用哪种浮点数转换e或者f<br>% o 八进制数<br>% s 字符串<br>% x 十六进制数</p>
<p>awk命令也许是linux系统中最为复杂的命令，需要好好的练习！</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> aix </tag>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下sed,awk,grep,cut,find等常用命令介绍]]></title>
      <url>http://www.ibmer.info/sed-awk-grep-cut-find.html</url>
      <content type="html"><![CDATA[<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">Linux文件查找命令find,xargs</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">find命令的格式：</div><br><div style="margin: 10px 0px 20px; padding: 6px 8px; border: 1px dashed #788856; font-size: 14px; color: #000000; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 26.600000381469727px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; overflow: auto; background: #f5f5f5;"><br><pre style="font-family: 'Courier New', Courier, monospace; font-size: 12px;">find pathname -options [-print -exec -ok …]</pre><br></div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">find 命令的参数：</div>

<p><strong>-perm
</strong></p>
<p>按照文件权限模式查找<br>读权限：r:4 写权限：w:2 执行权限：x:1<br>文件属主具有读、写权限： rw：4+2=6<br>其他用户具有读权限：r:4</p>
<p><strong><br>-type
</strong></p>
<p>查找的文件类型<br>-type f 文件<br>-type d 目录<br>-type l 符号链接文件</p>
<p><strong><br>-exec
</strong></p>
<p>-exec 参数后面跟的是 command命令<br>command命令的终止，使用 ‘;’ (分号）来判定，在后面必须有一个 ‘;’<br>‘{}’，使用{}来表示文件名，也就是find前面处理过程中过滤出来的文件，用于command命令进行处理<br>对于不同的系统，直接使用分号可能会有不同的意义， 使用转义符 ‘\’在分号前明确说明</p>
<p><strong><br>xargs
</strong></p>
<p>find命令把匹配到的文件传递给xargs命令，而xargs命令每次只获取一部分文件而不是全部，不像-exec选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">sed</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">sed简介：</div>

<p>sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>
<p>sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">关于sed的hold space（内存缓冲区）和pattern space(模式空间)</div>

<p>sed在处理文件的时候，每一行都需要存放在一个叫“模式空间”的临时缓存区。每处理完一行，便清理一次(pattern space)，并把下一行再次放入该临时缓冲区。</p>
<p>而保留空间(hole space),是当sed用到h命令的时候，把匹配的模式放在一个叫做”hold buffer”的保留缓冲里，但需要使用G(sed的取得命令）的时候，sed 从这个保留空间(hold space)中取得。</p>
<p>sed 是以行为单位进行读取,读取后的内容存放在pattern space。</p>
<p>holding space是通过h,H,x,g,G命令和pattern space产生关连,利用这5个特性可以辅助pattern space解决问题。</p>
<p><strong><br>g
</strong></p>
<p>表示行内全面替换,当前处理行进行全局替换。</p>
<p><strong><br>G
</strong></p>
<p>获得内存缓冲区的内容，并追加到当前模板块文本的后面。<br>函数参数G 与g 唯一差别是, sed执行g 时, 数据盖掉(overwrite) pattern space 内原来的数据<br>而G , 数据则是”添加(append)” 在pattern space 原来数据后。</p>
<p><strong><br>‘;’号
</strong></p>
<p>如果在一行中有多个命令，要用分号隔开。</p>
<p><strong><br>s/re/string
</strong></p>
<p>用string替换正则表达式re。</p>
<p><strong><br>d
</strong></p>
<p>从模板块（Pattern space）位置删除行。</p>
<p>函数参数d 表示删除数据行, 其指令格式如下:<br>[address1[ ,address2]] d</p>
<p>对上述格式有下面几点说明:<br>函数参数d 最多与两个地址参数配合。</p>
<p>sed执行删除动作情况如下:<br>将pattern space 内符合地址参数的数据删除。<br>将下一笔资料读进pattern space 。<br>重新执行sedscript。<br><strong>n**</strong><br>**</p>
<p>读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</p>
<p>函数参数n 表示读入下一行资料。<br>其指令格式如下:<br>[address1[ ,address2]] n<br>对上述格式有下面几点说明:<br>函数参数n 最多配合两个地址参数。</p>
<p>sed执行读入下一行动作的情况如下:<br>输出在pattern space 的数据。<br>将下一笔资料读到pattern space。<br>执行下一个编辑指令。</p>
<p><strong><br>-n, –quiet, –silent
</strong></p>
<p>安静模式，取消默认输出。</p>
<p><strong><br>x
</strong></p>
<p>交换pattern和hold space</p>
<p><strong><br>p
</strong></p>
<p>打印模式空间的行，通常 p 会与参数 sed -n 一起使用</p>
<p><strong><br>N
</strong></p>
<p>追加下一行数据到模式空间，数据行间以换行字符(embedded newline character)分隔。</p>
<p>函数参数N 表示添加下一笔资料在pattern space 内。<br>其指令格式如下:<br>[address1 ,[address2]] N<br>对上述格式有下面几点说明:<br>函数参数N 最多配合两个地址参数。</p>
<p>sed执行时, 将下一行数据读入并添加在pattern space 内, 数据行间以换行字符(embedded newline character)分隔。<br>此外, 在替换时, 换行字符可用\n 来match。</p>
<p><strong><br>**</strong>=<strong>**
</strong></p>
<p>打印当前行号</p>
<p><strong><br>.
</strong></p>
<p>匹配一个非换行符的字符</p>
<p><strong><br>h
</strong></p>
<p>拷贝模板块的内容到内存中的缓冲区。</p>
<p><strong><br>!
</strong></p>
<p>表示后面的命令对所有没有被选定的行发生作用。</p>
<p><strong><br>$
</strong></p>
<p>锚定行的结束 如：/sed$/匹配所有以sed结尾的行。也可以表示文件最后一行。</p>
<p><strong><br>1
</strong></p>
<p>表示文件第一行</p>
<p><strong><br>-e
</strong></p>
<p>直接在指令列模式上进行 sed 的动作编辑，允许多台编辑。</p>
<p><strong><br>:label
</strong></p>
<p>表示建立一个标签label</p>
<p><strong><br>b
</strong></p>
<p>跳转命令，这个命令是无条件跳转<br>ba表示跳转到标签a处</p>
<p><strong><br>q
</strong></p>
<p>退出Sed。</p>
<p><strong><br>D
</strong></p>
<p>删除模板块的第一行。</p>
<p>函数参数D 与d 的比较如下:<br>当pattern space 内只有一数据行时, D 与d 作用相同。<br>当pattern space 内有多行资料行时D 表示只删除pattern space 内第一行资料; d 则全删除。<br>D 表示执行删除后, pattern space 内不添加下一笔数据, 而将剩下的数据重新执行sedscript ; d 则读入下一行后执行sedscript。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">grep</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">grep简介：</div>

<p>grep (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。Unix的grep家族包括grep、 egrep和fgrep。egrep和fgrep的命令只跟grep有很小不同。egrep是grep的扩展，支持更多的re元字符， fgrep就是 fixed grep或fast grep，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示回其自身的字面意义，不再特殊。linux 使用GNU版本的grep。它功能更强，可以通过-G、-E、-F命令行选项来使用egrep和fgrep的功能。</p>
<p><strong><br>-l
</strong></p>
<p>打印匹配模板的文件清单</p>
<p><strong><br>-r
</strong></p>
<p>递归地搜索目录。在缺省情况下，按照到目录的链接。</p>
<p><strong><br>^
</strong></p>
<p>锚定行的开始</p>
<p><strong><br>[^]
</strong></p>
<p>匹配一个不在指定范围内的字符</p>
<p><strong><br>\w
</strong></p>
<p>匹配文字和数字字符，也就是[A-Za-z0-9]</p>
<p><strong><br>x{m,}
</strong></p>
<p>重复字符x,至少m次，如：’o{5,}‘匹配至少有5个o的行。<br>‘\w{3,}‘即是至少有4个字符的已登录用户</p>
<p><strong><br>$
</strong></p>
<p>锚定行的结束 如：/sed$/匹配所有以sed结尾的行。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">awk</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">关于awk:</div>

<p>awk是一种用于处理文本的编程语言工具。AWK 实用工具的语言在很多方面类似于 shell 编程语言，尽管 AWK 具有完全属于其本身的语法。在最初创造 AWK 时，其目的是用于文本处理，并且这种语言的基础是，只要在输入数据中有模式匹配，就执行一系列指令。该实用工具扫描文件中的每一行，查找与命令行中所给定 内容相匹配的模式。如果发现匹配内容，则进行下一个编程步骤。如果找不到匹配内容，则继续处理下一行。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">awk命令的语法</div>

<p>awk ‘{pattern + action}’ {filenames}</p>
<p>其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号 ({}) 不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">$0，关于awk的字段</div>

<p>实用工具将每个输入行分为记录和字段。记录是单行的输入，而每条记录包含若干字段。默认的字段分隔符是空格或制表符，而记录的分隔符是换行。虽然在默认情况下将制表符和空格都看作字段分隔符（多个空格仍然作为一个分隔符），但是可以将分隔符从空格改为任何其它字符。</p>
<p>当 AWK 读取输入内容时，整条记录被分配给变量 $0。每个字段以字段分隔符分开，被分配给变量 $1、$2、$3 等等。一行在本质上可以包含无数个字段，通过字段号来访问每个字段。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">BEGIN和END</div>

<p>在awk 中两个特别的表达式，BEGIN和END，这两者都可用于pattern中，提供BEGIN和END的作用是给程序赋予初始状态和在程序结束之后执行一些扫尾的工作。任何在BEGIN之后列出的操作（在{}内）将在awk开始扫描输入之前执行，而END之后列出的操作将在扫描完全部的输入之后执行。因此，通常使用BEGIN来显示变量和预置（初始化）变量，使用END来输出最终结果。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">gsub（r，s，t）</div>

<p>在字符串t中用字符串s和正则表达式r匹配的所有字符串。返回值是替换的个数。如果没有给出t，默认是$0。</p>
<p><strong><br>NR
</strong></p>
<p>表示awk开始执行程序后所读取的数据行数.</p>
<p><strong><br>$0
</strong></p>
<p>表示当前处理的整行数据</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">Linux的cut命令</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">关于cut命令：</div>

<p>cut命令可以从一个文本文件或者文本流中提取文本列，具体的说就是在文件中负责剪切数据用的。cut是以每一行为一个处理对象的，这种机制和sed是一样的。</p>
<p>cut -d’分隔字元’ -f fields</p>
<p>参数∶<br>-d ∶后面接分隔字元。与 -f 一起使用；<br>-f ∶依据 -d 的分隔字元将一段讯息分割成为数段，用 -f 取出第几段的意思；<br>-c ∶以字元 (characters) 的单位取出固定字元区间；</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">Linux的wc命令</div><br><div style="margin: 10px 0px; padding: 0px 0px 0px 10px; border: 1px solid #eff1f1; font-size: 14px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #f6745a; font-weight: bold; line-height: 25px; text-shadow: #f1f1f1 0px 1px 0px; background: #fbfbfb;">关于WC命令：</div>

<p>该命令统计给定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所有指定文件的总统计数。字是由空格字符区分开的最大字符串。</p>
<p><strong><br>该命令各选项含义如下：
</strong></p>
<p>wc -m filename：显示一个文件的字符数<br>wc -l filename：显示一个文件的行数<br>wc -L filename：显示一个文件中的最长行的长度<br>wc -w filename：显示一个文件的字数</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">关于ls命令</div>

<p>ls 命令经常要使用，通过使用 ls 命令可以查看linux文件夹包含的文件，查看文件权限(包括目录、文件夹、文件权限)，查看目录信息等等，ls 命令在平常的linux操作中使用很频繁，所以这里介绍下 ls 命令的相关使用方法。</p>
<p><strong><br>选项说明：
</strong></p>
<p>-a 用于显示所有文件和子目录(保罗点文件)。<br>-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。<br>-r 将目录的内容清单以英文字母顺序的逆序显示。<br>-t 按文件修改时间进行排序，而不是按文件名进行排序。</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">关于sort命令</div>

<p>Sort命令的功能是对文件中的各行进行排序。Sort命令有许多非常实用的选项，这些选项最初是用来对数据库格式的文件内容进行各种排序操作的。实际上，Sort命令可以被认为是一个非常强大的数据管理工具，用来管理内容类似数据库记录的文件。<br>-n按照数字方式排序。不加-n参数时排序结果根据最左面的数字开始，等同于字母的比较方式。按算术值对数字字段排序。数字字段可包含前导空格、可选减号、十进制数字、千分位分隔符和可选基数符。对包含任何非数字字符的字段进行数字排序会出现无法预知的结果。</p>
<p>-r 颠倒指定排序的顺序。<br>-k作用是根据某个列来排序，默认是第1列（从1开始）。<br>-t表示分割符，以：分割，默认情况下以空格分割<br>-nrk 5即是按照数字方式倒序排序，根据文件属性的第5列即是文件大小排序</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">关于tr命令</div>

<p>通过使用 tr，可以非常容易地实现 sed 的许多最基本功能。可以将 tr 看作为 sed 的（极其）简化的变体。使用tr命令可以用一个字符来替换另一个字符，或者可以完全除去一些字符，也可以用它来除去重复字符。</p>
<p>tr的命令格式为：</p>
<p>tr -c -d -s [“string1_to_translate_from”] [“string2_to_translate_to”] &lt; input-file</p>
<p><strong><br>-c
</strong></p>
<p>用字符串1中字符集的补集替换此字符集，要求字符集为ASCII。</p>
<p><strong><br>-d
</strong></p>
<p>删除字符串1中所有输入字符。</p>
<p><strong><br>-s
</strong></p>
<p>删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。</p>
<p><strong><br>string1_to_translate_from
</strong></p>
<p>要转换的原字符串</p>
<p><strong><br>string2_to_translate_to
</strong></p>
<p>想要转换成的字符串</p>
<div style="margin: 10px 0px; padding: 0px 0px 0px 15px; border-width: 0px 0px 1px; border-bottom-style: outset; border-bottom-color: #e8e9e9; font-size: 15px; font-family: 'Courier New', 宋体, Consolas, 'YaHei Consolas Hybrid', 'Microsoft YaHei', Arial, Courier, monospace; font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: #3f3f3f; font-weight: bold; line-height: 30px; text-shadow: #f1f1f1 0px 1px 0px; background: #dedede;">关于mv命令</div>

<p>mv命令来为文件或目录改名或将文件由一个目录移入另一个目录中。该命令等同于DOS系统下的ren和move命令的组合。它的使用权限是所有用户。</p>
<p>mv [options] 源文件或目录 目标文件或目录。k</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> aix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HashMap和Hashtable的区别]]></title>
      <url>http://www.ibmer.info/hashmap-hashtable.html</url>
      <content type="html"><![CDATA[<p>1 HashMap不是线程安全的</p>
<p>&nbsp;</p>
<p>hastmap是一个接口 是map接口的子接口，是将键映射到值的对象，其中键和值都是对象，并且不能包含重复键，但可以包含重复值。HashMap允许null key和null value，而hashtable不允许。</p>
<p>&nbsp;</p>
<p>2   HashTable是线程安全的一个Collection。</p>
<p>&nbsp;</p>
<p>HashMap是Hashtable的轻量级实现（非线程安全的实现），他们都完成了Map接口，主要区别在于HashMap允许空（null）键值（key）,由于非线程安全，效率上可能高于Hashtable。<br>HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。<br>HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。因为contains方法容易让人引起误解。<br>Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Map interface的一个实现。<br>最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap 就必须为之提供外同步。<br>Hashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。</p>
<p>&nbsp;</p>
<p>public static void main(String args[])<br>{<br>HashTable h=new HashTable();<br>h.put(“用户1”,new Integer(90));<br>h.put(“用户2”,new Integer(50));<br>h.put(“用户3”,new Integer(60));<br>h.put(“用户4”,new Integer(70));<br>h.put(“用户5”,new Integer(80));<br>Enumeration e=h.elements();<br>while(e.hasMoreElements()){<br>System.out.println(e.nextElement());<br>}</p>
<p>&nbsp;</p>
<p>map 的方法：</p>
<p>&nbsp;</p>
<p>clear()从 Map 中删除所有映射</p>
<p>&nbsp;</p>
<p>remove(Object key)从 Map 中删除键和关联的值<br>put(Object key, Object value)将指定值与指定键相关联</p>
<p>get(Object key)返回与指定键关联的值<br>containsKey(Object key)如果 Map 包含指定键的映射，则返回 true</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>containsValue(Object value)如果此 Map 将一个或多个键映射到指定值，则返回 true</p>
<p>&nbsp;</p>
<p>isEmpty()如果 Map 不包含键-值映射，则返回 true size()返回 Map 中的键-值映射的数目</p>
<p>这些都代表了Java中的集合，这里主要从其元素是否有序，是否可重复来进行区别记忆，以便恰当地使用，当然还存在同步方面的差异，见上一篇相关文章。</p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td colspan="2" width="147"></td></p>
<p><td width="245"><br>有序否</td></p>
<p><td width="176"><br>允许元素重复否</td><br></p>
<p><tr></tr></p>
<p><td colspan="2" width="147"><br>Collection</td></p>
<p><td width="245"><br>否</td></p>
<p><td width="176"><br>是</td><br></p>
<p><tr></tr></p>
<p><td colspan="2" width="147"><br>List</td></p>
<p><td width="245"><br>是</td></p>
<p><td width="176"><br>是</td><br></p>
<p><tr></tr></p>
<p><td rowspan="3" width="56"><br>Set</td></p>
<p><td width="91"><br>AbstractSet</td></p>
<p><td rowspan="2" width="245"><br>否</td></p>
<p><td rowspan="3" width="176"><br>否</td><br></p>
<p><tr></tr></p>
<p><td width="91"><br>HashSet</td><br></p>
<p><tr></tr></p>
<p><td width="91"><br>TreeSet</td></p>
<p><td width="245"><br>是（用二叉树排序）</td><br></p>
<p><tr></tr></p>
<p><td rowspan="3" width="56"><br>Map</td></p>
<p><td width="91"><br>AbstractMap</td></p>
<p><td rowspan="2" width="245"><br>否</td></p>
<p><td rowspan="3" width="176"><br>使用key-value来映射和存储数据，Key必须惟一，value可以重复</td><br></p>
<p><tr></tr></p>
<p><td width="91"><br>HashMap</td><br></p>
<p><tr></tr></p>
<p><td width="91"><br>TreeMap</td></p>
<p><td width="245"><br>是（用二叉树排序）</td><br><br><br><br>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>List 接口对Collection进行了简单的扩充，它的具体实现类常用的有ArrayList和LinkedList。你可以将任何东西放到一个List容器中，并在需要时从中取出。ArrayList从其命名中可以看出它是一种类似数组的形式进行存储，因此它的随机访问速度极快，而LinkedList的内部实现是链表，它适合于在链表中间需要频繁进行插入和删除操作。在具体应用时可以根据需要自由选择。前面说的Iterator只能对容器进行向前遍历，而 ListIterator则继承了Iterator的思想，并提供了对List进行双向遍历的方法。</p>
<p>Set接口也是 Collection的一种扩展，而与List不同的时，在Set中的对象元素不能重复，也就是说你不能把同样的东西两次放入同一个Set容器中。它的常用具体实现有HashSet和TreeSet类。HashSet能快速定位一个元素，但是你放到HashSet中的对象需要实现hashCode()方法，它使用了前面说过的哈希码的算法。而TreeSet则将放入其中的元素按序存放，这就要求你放入其中的对象是可排序的，这就用到了集合框架提供的另外两个实用类Comparable和Comparator。一个类是可排序的，它就应该实现Comparable接口。有时多个类具有相同的排序算法，那就不需要在每分别重复定义相同的排序算法，只要实现Comparator接口即可。集合框架中还有两个很实用的公用类：Collections和 Arrays。Collections提供了对一个Collection容器进行诸如排序、复制、查找和填充等一些非常有用的方法，Arrays则是对一个数组进行类似的操作。</p>
<p>Map是一种把键对象和值对象进行关联的容器，而一个值对象又可以是一个Map，依次类推，这样就可形成一个多级映射。对于键对象来说，像Set一样，一个Map容器中的键对象不允许重复，这是为了保持查找结果的一致性;如果有两个键对象一样，那你想得到那个键对象所对应的值对象时就有问题了，可能你得到的并不是你想的那个值对象，结果会造成混乱，所以键的唯一性很重要，也是符合集合的性质的。当然在使用过程中，某个键所对应的值对象可能会发生变化，这时会按照最后一次修改的值对象与键对应。对于值对象则没有唯一性的要求。你可以将任意多个键都映射到一个值对象上，这不会发生任何问题（不过对你的使用却可能会造成不便，你不知道你得到的到底是那一个键所对应的值对象）。Map有两种比较常用的实现： HashMap和TreeMap。HashMap也用到了哈希码的算法，以便快速查找一个键，TreeMap则是对键按序存放，因此它便有一些扩展的方法，比如firstKey(),lastKey()等，你还可以从TreeMap中指定一个范围以取得其子Map。键和值的关联很简单，用pub (Object key,Object value)方法即可将一个键与一个值对象相关联。用get(Object key)可得到与此key对象所对应的值对象。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[进程与线程的区别]]></title>
      <url>http://www.ibmer.info/process-thread.html</url>
      <content type="html"><![CDATA[<p>线程是指进程内的一个执行单元,也是进程内的可调度实体.<br>与进程的区别:<br>(1)地址空间:进程内的一个执行单元;进程至少有一个线程;它们共享进程的地址空间;而进程有自己独立的地址空间;<br>(2)资源拥有:进程是资源分配和拥有的单位,同一个进程内的线程共享进程的资源<br>(3)线程是处理器调度的基本单位,但进程不是.<br>4)二者均可并发执行.</p>
<p>进程和线程都是由操作系统所体会的程序运行的基本单元，系统利用该基本单元实现系统对应用的并发性。进程和线程的区别在于：</p>
<p>简而言之,一个程序至少有一个进程,一个进程至少有一个线程.<br>线程的划分尺度小于进程，使得多线程程序的并发性高。<br>另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。<br>线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。<br>从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</p>
<p>进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动,进程是系统进行资源分配和调度的一个独立单位.<br>线程是进程的一个实体,是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源.<br>一个线程可以创建和撤销另一个线程;同一个进程中的多个线程之间可以并发执行.</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下的进程间通信-详解]]></title>
      <url>http://www.ibmer.info/linux-process.html</url>
      <content type="html"><![CDATA[<p>linux下的进程间通信-详解</p>
<p>详细的讲述进程间通信在这里绝对是不可能的事情，而且笔者很难有信心说自己对这一部分内容的认识达到了什么样的地步，所以在这一节的开头首先向大家推荐著 名作者Richard Stevens的著名作品：《Advanced Programming in the UNIX Environment》，它的中文译本《UNIX环境高级编程》已有机械工业出版社出版，原文精彩，译文同样地道，如果你的确对在Linux下编程有浓 厚的兴趣，那么赶紧将这本书摆到你的书桌上或计算机旁边来。说这么多实在是难抑心中的景仰之情，言归正传，在这一节里，我们将介绍进程间通信最最初步和最 最简单的一些知识和概念。<br>首先，进程间通信至少可以通过传送打开文件来实现，<span style="color: #993300;">不同的进程通过一个或多个文件来传递信息</span>，事实上，在很多应用系统里，都使用了这种方法。但一般说来， 进程间通信（IPC：InterProcess Communication）不包括这种似乎比较低级的通信方法。Unix系统中实现进程间通信的方法很多，而且不幸的是，极少方法能在所有的Unix系 统中进行移植（唯一一种是半双工的管道，这也是最原始的一种通信方式）。而Linux作为一种新兴的操作系统，几乎支持所有的Unix下常用的进程间通信 方法：管道、<span style="color: #993300;">消息队列</span>、共享内存、<span style="color: #993300;">信号量</span>、套接口等等。下面我们将逐一介绍。</p>
<p>2.3.1 管道<br>管道是进程间通信中最古老的方式，它包括<span style="color: #993300;">无名管</span>道和<span style="color: #0000ff;">有名管道</span>两种，前者<span style="color: #993300;">用于父进程和子进程间的通信</span>，后者用于<span style="color: #0000ff;">运行于同一台机器上的任意两个进程间的通信</span>。<br>无名管道由pipe（）函数创建：</p>
<p>#include &lt;unistd.h&gt;<br>int pipe(int filedis[2])；<br>参数filedis返回两个文件描述符：filedes[0]为读而打开，filedes[1]为写而打开。filedes[1]的输出是filedes[0]的输入。下面的例子示范了如何在父进程和子进程间实现通信。</p>
<p>#define INPUT 0</p>
<p>#define OUTPUT 1</p>
<p>void main() {<br>int file_descriptors[2];<br>/<em>定义子进程号 </em>/<br>pid_t pid;<br>char buf[256];<br>int returned_count;<br>/<em>创建无名管道</em>/<br>pipe(file_descriptors);<br>/<em>创建子进程</em>/<br>if((pid = fork()) == -1) {<br>printf(“Error in fork\n”);<br>exit(1);<br>}<br>/<em>执行子进程</em>/<br>if(pid == 0) {<br>printf(“in the spawned (child) process…\n”);<br>/<em>子进程向父进程写数据，关闭管道的读端</em>/<br>close(file_descriptors[INPUT]);<br>write(file_descriptors[OUTPUT], “test da<wbr>ta”, strlen(“test da<wbr>ta”));<br>exit(0);<br>} else {<br>/<em>执行父进程</em>/<br>printf(“in the spawning (parent) process…\n”);<br>/<em>父进程从管道读取子进程写的数据，关闭管道的写端</em>/<br>close(file_descriptors[OUTPUT]);<br>returned_count = read(file_descriptors[INPUT], buf, sizeof(buf));<br>printf(“%d bytes of da<wbr>ta received from spawned process: %s\n”,<br>returned_count, buf);<br>}<br>}<br>在Linux系统下，有名管道可由两种方式创建：<span style="color: #993300;">命令行方式mknod系统调用和函数mkfifo</span>。下面的两种途径都在当前目录下生成了一个名为myfifo的有名管道：<br>方式一：mkfifo(“myfifo”,”rw”);<br>方式二：mknod myfifo p<br><span style="color: #993300;">生成了有名管道后，就可以使用一般的文件I/O函数如open、close、read、write等来对它进行操作</span>。下面即是一个简单的例子，假设我们已经创建了一个名为myfifo的有名管道。<br>/<em> 进程一：读有名管道</em>/</p>
<p>#include &lt;stdio.h&gt;</p>
<p>#include &lt;unistd.h&gt;<br>void main() {<br>FILE <em> in_file;<br>int count = 1;<br>char buf[80];<br>in_file = fopen(“mypipe”, “r”);<br>if (in_file == NULL) {<br>printf(“Error in fdopen.\n”);<br>exit(1);<br>}<br>while ((count = fread(buf, 1, 80, in_file)) &gt; 0)<br>printf(“received from pipe: %s\n”, buf);<br>fclose(in_file);<br>}<br>/</em> 进程二：写有名管道*/</p>
<p>#include &lt;stdio.h&gt;</p>
<p>#include &lt;unistd.h&gt;<br>void main() {<br>FILE * out_file;<br>int count = 1;<br>char buf[80];<br>out_file = fopen(“mypipe”, “w”);<br>if (out_file == NULL) {<br>printf(“Error opening pipe.”);<br>exit(1);<br>}<br>sprintf(buf,”this is test da<wbr>ta for the named pipe example\n”);<br>fwrite(buf, 1, 80, out_file);<br>fclose(out_file);<br>}</p>
<p>2.3.2 消息队列<br>消息队列用于运行于同一台机器上的进程间通信，它和管道很相似，是一个在系统内核中用来保存消息的队列，它在系统内核中是以消息链表的形式出现。消息链表中节点的结构用msg声明。<br>事实上，它是一种<span style="color: #993300;">正逐渐被淘汰</span>的通信方式，我们可以用流管道或者套接口的方式来取代它，所以，我们对此方式也不再解释，也建议读者忽略这种方式。</p>
<p>2.3.3 共享内存<br>共享内存是运行在同一台机器上的<span style="color: #0000ff;">进程间通信最快的方式</span>，因为数据不需要在不同的进程间复制。通常由一个进程创建一块共享内存区，其余进程对这块内存区进行 读写。得到共享内存有两种方式：<span style="color: #993300;">映射/dev/mem设备</span>和<span style="color: #993300;">内存映像文件</span>。<span style="color: #993300;">前一种方式不给系统带来额外的开销，但在现实中并不常用，因为它控制存取的将是 实际的物理内存</span>，在Linux系统下，这只有通过限制Linux系统存取的内存才可以做到，这当然不太实际。常用的方式是通过shmXXX函数族来实现利 用共享内存进行存储的。<br>首先要用的函数是shmget，它获得一个共享存储标识符。</p>
<p>#include &lt;sys/types.h&gt;<br><span style="color: #993300;">#include &lt;sys/ipc.h&gt; </span><br><span style="color: #993300;">　　　　 #include &lt;sys/shm.h&gt;</span></p>
<p>　　　　　 int shmget(key_t key, int size, int flag);<br><span style="color: #ff6600;"> 这个函数有点类似大家熟悉的malloc函数，系统按照请求分配size大小的内存用作共享内存</span>。Linux系统内核中每个IPC结构都有的一个非负整数 的标识符，这样对一个消息队列发送消息时只要引用标识符就可以了。<span style="color: #000080;">这个标识符是内核由IPC结构的关键字得到的，这个关键字，就是上面第一个函数的 key。</span>数据类型key_t是在头文件sys/types.h中定义的，它是一个长整形的数据。在我们后面的章节中，还会碰到这个关键字。</p>
<p><span style="color: #993300;">当共享内存创建后，其余进程可以调用shmat（）将其连接到自身的地址空间中</span>。<br>void <em>shmat(int shmid, void </em>addr, int flag);<br>shmid为shmget函数返回的共享存储标识符，addr和flag参数决定了以什么方式来确定连接的地址，函数的返回值即是该进程数据段所连接的实际地址，进程可以对此进程进行读写操作。<br>使用共享存储来实现进程间通信的注意点是对数据存取的同步，必须确保当一个进程去读取数据时，它所想要的数据已经写好了。通常，<span style="color: #000080;">信号量被要来实现对共享存 储数据存取的同步</span>，另外，<span style="color: #000080;">可以通过使用shmctl函数设置共享存储内存的某些标志位如</span><span style="font-weight: bold; color: #000080;">SHM_LOCK、SHM_UNLOCK</span><span style="color: #000080;">等来实现</span>。</p>
<p>2.3.4 信号量<br>信号量又称为信号灯，它是用来协调不同进程间的数据对象的，而最主要的应用是前一节的共享内存方式的进程间通信。本质上，<span style="color: #000080;">信号量是一个计数器，它用来记录对某个资源（如共享内存）的存取状况</span>。一般说来，为了获得共享资源，进程需要执行下列操作：<br>（1） 测试控制该资源的信号量。<br>（2） 若此信号量的值为正，则允许进行使用该资源。<span style="color: #993300;">进程将信号量减1</span>。<br>（3） 若此信号量为0，则该资源目前不可用，进程进入睡眠状态，直至信号量值大于0，进程被唤醒，转入步骤（1）。<br>（4） 当进程不再使用一个信号量控制的资源时，信号量值加1。如果此时有进程正在睡眠等待此信号量，则唤醒此进程。<br><span style="color: #993300;"> 维护信号量状态的是Linux<span style="color: #0000ff;">内核</span>操作系统而不是用户进程</span>。我们可以从头文件/usr/src/linux/include　/linux　/sem.h 中看到内核用来维护信号量状态的各个结构的定义。<span style="color: #993300;">信号量是一个数据集合，用户可以单独使用这一集合的每个元素。</span>要调用的第一个函数是semget，用以获 得一个信号量ID。</p>
<p>struct sem {<br>short sempid;/<em> pid of last operaton </em>/<br>ushort semval;/<em> current value </em>/<br>ushort semncnt;/<em> num procs awaiting increase in semval </em>/<br>ushort semzcnt;/<em> num procs awaiting semval = 0 </em>/<br>}</p>
<p>#include &lt;sys/types.h&gt;</p>
<p>#include &lt;sys/ipc.h&gt;</p>
<p>#include &lt;sys/sem.h&gt;<br>int semget(key_t key, int nsems, int flag);</p>
<p><span style="color: #993300;">key是前面讲过的IPC结构的关键字，<span style="color: #000080;"><span style="color: #333333;">flag</span>将来决定是创建新的信号量集合，还是引用一个现有的信号量集合。</span></span>nsems是该集合中的信号量数。如果是创建新 集合（一般在服务器中），则必须指定nsems；如果是引用一个现有的信号量集合（一般在客户机中）则将nsems指定为0。</p>
<p>semctl函数用来对信号量进行操作。<br>int semctl(int semid, int semnum, int cmd, union semun arg);<br>不同的操作是通过cmd参数来实现的，在头文件sem.h中定义了7种不同的操作，实际编程时可以参照使用。</p>
<p>semop函数<span style="color: #993300;">自动执行信号量集合上的操作数组</span>。<br>int semop(int semid, struct sembuf semoparray[], size_t nops);<br>semoparray是一个指针，它指向一个信号量操作数组。nops规定该数组中操作的数量。</p>
<p>下面，我们看一个具体的例子，它创建一个特定的IPC结构的关键字和一个信号量，建立此信号量的索引，修改索引指向的信号量的值，最后我们清除信号量。在下面的代码中，函数ftok生成我们上文所说的唯一的IPC关键字。</p>
<p>#include &lt;stdio.h&gt;</p>
<p>#include &lt;sys/types.h&gt;</p>
<p>#include &lt;sys/sem.h&gt;</p>
<p>#include &lt;sys/ipc.h&gt;<br>void main() {<br>key_t unique_key; /<em> 定义一个IPC关键字</em>/<br>int id;<br>struct sembuf lock_it;<br>union semun options;<br>int i;</p>
<p>unique_key = ftok(“.”, ‘a’); /<em> 生成关键字，字符’a’是一个随机种子</em>/<br>/<em> 创建一个新的信号量集合</em>/<br>id = semget(unique_key, 1, IPC_CREAT | IPC_EXCL | 0666);<br>printf(“semaphore id=%d\n”, id);<br>options.val = 1; /<em>设置变量值</em>/<br>semctl(id, 0, SETVAL, options); /<em>设置索引0的信号量</em>/</p>
<p>/<em>打印出信号量的值</em>/<br>i = semctl(id, 0, GETVAL, 0);<br>printf(“value of semaphore at index 0 is %d\n”, i);</p>
<p>/<em>下面重新设置信号量</em>/<br>lock_it.sem_num = 0; /<em>设置哪个信号量</em>/<br>lock_it.sem_op = -1; /<em>定义操作</em>/<br>lock_it.sem_flg = IPC_NOWAIT; /<em>操作方式</em>/<br>if (semop(id, &amp;lock_it, 1) == -1) {<br>printf(“can not lock semaphore.\n”);<br>exit(1);<br>}</p>
<p>i = semctl(id, 0, GETVAL, 0);<br>printf(“value of semaphore at index 0 is %d\n”, i);</p>
<p>/<em>清除信号量</em>/<br>semctl(id, 0, IPC_RMID, 0);<br>}</p>
<div><center><strong><span style="font-size: small;">semget()</span></strong></center><br>可以使用系统调用semget()创建一个新的信号量集，或者存取一个已经存在的信号量集：<br><div>系统调用：semget();<br>原型：intsemget(key_t key,int nsems,int semflg);<br>返回值：如果成功，则返回信号量集的IPC标识符。如果失败，则返回-1：errno=EACCESS(没有权限)<br>EEXIST(信号量集已经存在，无法创建)<br>EIDRM(信号量集已经删除)<br>ENOENT(信号量集不存在，同时没有使用IPC_CREAT)<br>ENOMEM(没有足够的内存创建新的信号量集)<br>ENOSPC(超出限制)</div><br><div>    系统调用semget()的第一个参数是关键字值（一般是由系统调用ftok()返回的）。系统内核将此值和系统中存在的其他的信号量集的关键字值进行比较。打开和存取操作与参数semflg中的内容相关。IPC_CREAT如果信号量集在系统内核中不存在，则创建信号量集。IPC_EXCL当和 IPC_CREAT一同使用时，如果信号量集已经存在，则调用失败。如果单独使用IPC_CREAT，则semget()要么返回新创建的信号量集的标识符，要么返回系统中已经存在的同样的关键字值的信号量的标识符。如果IPC_EXCL和IPC_CREAT一同使用，则要么返回新创建的信号量集的标识符，要么返回-1。IPC_EXCL单独使用没有意义。参数nsems指出了一个新的信号量集中应该创建的信号量的个数。信号量集中最多的信号量的个数是在linux/sem.h中定义的：</div><br><div>#defineSEMMSL32/<em>&lt;=512maxnumofsemaphoresperid</em>/<br>下面是一个打开和创建信号量集的程序：<br>intopen_semaphore_set(key_t keyval,int numsems)<br>{<br>intsid;<br>if(!numsems)<br>return(-1);<br>if((sid=semget(mykey,numsems,IPC_CREAT|0660))==-1)<br>{<br>return(-1);<br>}<br>return(sid);<br>}<br>};</div><br><div>==============================================================</div><br><center><strong><span style="font-size: small;">semop()</span></strong></center><br>系统调用：semop();<br>调用原型：int semop(int semid,struct sembuf<em>sops,unsign ednsops);<br>返回值：0，如果成功。-1，如果失败：errno=E2BIG(nsops大于最大的ops数目)<br>EACCESS(权限不够)<br>EAGAIN(使用了IPC_NOWAIT，但操作不能继续进行)<br>EFAULT(sops指向的地址无效)<br>EIDRM(信号量集已经删除)<br>EINTR(当睡眠时接收到其他信号)<br>EINVAL(信号量集不存在,或者semid无效)<br>ENOMEM(使用了SEM_UNDO,但无足够的内存创建所需的数据结构)<br>ERANGE(信号量值超出范围)<br><div>    第一个参数是关键字值。第二个参数是指向将要操作的数组的指针。第三个参数是数组中的操作的个数。参数sops指向由sembuf组成的数组。此数组是在linux/sem.h中定义的：</div><br><div>/</div></em>semop systemcall takes an array of these<em>/<br>structsembuf{<br>ushortsem_num;/</em>semaphore index in array<em>/<br>shortsem_op;/</em>semaphore operation<em>/<br>shortsem_flg;/</em>operation flags<em>/<br>sem_num将要处理的信号量的个数。<br>sem_op要执行的操作。<br>sem_flg操作标志。</em></div><br><div>    如果sem_op是负数，那么信号量将减去它的值。这和信号量控制的资源有关。如果没有使用IPC_NOWAIT，那么调用进程将进入睡眠状态，直到信号量控制的资源可以使用为止。如果sem_op是正数，则信号量加上它的值。这也就是进程释放信号量控制的资源。最后，如果sem_op是0，那么调用进程将调用sleep()，直到信号量的值为0。这在一个进程等待完全空闲的资源时使用。</div><br><div>===============================================================</div><br><center><strong><span style="font-size: small;">semctl()</span></strong></center><br>系统调用：semctl();<br>原型：int semctl(int semid,int semnum,int cmd,union semunarg);<br>返回值：如果成功，则为一个正数。<br>如果失败，则为-1：errno=EACCESS(权限不够)<br>EFAULT(arg指向的地址无效)<br>EIDRM(信号量集已经删除)<br>EINVAL(信号量集不存在，或者semid无效)<br>EPERM(EUID没有cmd的权利)<br>ERANGE(信号量值超出范围)<br><div>    系统调用semctl用来执行在信号量集上的控制操作。这和在消息队列中的系统调用msgctl是十分相似的。但这两个系统调用的参数略有不同。因为信号量一般是作为一个信号量集使用的，而不是一个单独的信号量。所以在信号量集的操作中，不但要知道IPC关键字值，也要知道信号量集中的具体的信号量。这两个系统调用都使用了参数cmd，它用来指出要操作的具体命令。两个系统调用中的最后一个参数也不一样。在系统调用msgctl中，最后一个参数是指向内核中使用的数据结构的指针。我们使用此数据结构来取得有关消息队列的一些信息，以及设置或者改变队列的存取权限和使用者。但在信号量中支持额外的可选的命令，这样就要求有一个更为复杂的数据结构。<br>系统调用semctl()的第一个参数是关键字值。第二个参数是信号量数目。</div><br><div>    参数cmd中可以使用的命令如下：<br>·IPC_STAT读取一个信号量集的数据结构semid_ds，并将其存储在semun中的buf参数中。<br>·IPC_SET设置信号量集的数据结构semid_ds中的元素ipc_perm，其值取自semun中的buf参数。<br>·IPC_RMID将信号量集从内存中删除。<br>·GETALL用于读取信号量集中的所有信号量的值。<br>·GETNCNT返回正在等待资源的进程数目。<br>·GETPID返回最后一个执行semop操作的进程的PID。<br>·GETVAL返回信号量集中的一个单个的信号量的值。<br>·GETZCNT返回这在等待完全空闲的资源的进程数目。<br>·SETALL设置信号量集中的所有的信号量的值。<br>·SETVAL设置信号量集中的一个单独的信号量的值。</div><br><div>    参数arg代表一个semun的实例。semun是在linux/sem.h中定义的：<br>/arg for semctl systemcalls.<em>/<br>unionsemun{<br>intval;/</em>value for SETVAL<em>/<br>structsemid_ds</em>buf;/<em>buffer for IPC_STAT&amp;IPC_SET</em>/<br>ushort<em>array;/</em>array for GETALL&amp;SETALL<em>/<br>structseminfo</em><strong>buf;/<em>buffer for IPC_INFO</em>/<br>void*</strong>pad;</div><br><div>    val当执行SETVAL命令时使用。buf在IPC_STAT/IPC_SET命令中使用。代表了内核中使用的信号量的数据结构。array在使用GETALL/SETALL命令时使用的指针。<br>下面的程序返回信号量的值。当使用GETVAL命令时，调用中的最后一个参数被忽略：</div><br><div>intget_sem_val(intsid,intsemnum)<br>{<br>return(semctl(sid,semnum,GETVAL,0));<br>}</div><br><div>    下面是一个实际应用的例子：</div><br><div>#defineMAX_PRINTERS5<br>printer_usage()<br>{<br>int x;<br>for(x=0;x&lt;MAX_PRINTERS;x++)<br>printf(“Printer%d:%d\n\r”,x,get_sem_val(sid,x));<br>}</div><br><div>    下面的程序可以用来初始化一个新的信号量值：</div><br><div>void init_semaphore(int sid,int semnum,int initval)<br>{<br>union semunsemopts;<br>semopts.val=initval;<br>semctl(sid,semnum,SETVAL,semopts);<br>}</div><br><div>    注意系统调用semctl中的最后一个参数是一个联合类型的副本，而不是一个指向联合类型的指针。</div><br>&nbsp;<br>2.3.5 套接口<br>套接口（socket）编程是实现Linux系统和其他大多数操作系统中进程间通信的主要方式之一。我们熟知的WWW服务、FTP服务、TELNET服务 等都是基于套接口编程来实现的。除了在异地的计算机进程间以外，套接口同样适用于本地同一台计算机内部的进程间通信。关于套接口的经典教材同样是 Richard Stevens编著的《Unix网络编程：联网的API和套接字》，清华大学出版社出版了该书的影印版。它同样是Linux程序员的必备书籍之一。<br>关于这一部分的内容，可以参照本文作者的另一篇文章《设计自己的网络蚂蚁》，那里由常用的几个套接口函数的介绍和示例程序。这一部分或许是Linux进程 间通信编程中最须关注和最吸引人的一部分，毕竟，Internet 正在我们身边以不可思议的速度发展着，如果一个程序员在设计编写他下一个程序的时候，根本没有考虑到网络，考虑到Internet，那么，可以说，他的设 计很难成功。<br><br>3 Linux的进程和Win32的进程/线程比较<br>熟悉WIN32编程的人一定知道，WIN32的进程管理方式与Linux上有着很大区别，在UNIX里，只有进程的概念，但在WIN32里却还有一个”线程”的概念，那么Linux和WIN32在这里究竟有着什么区别呢？<br>WIN32里的进程/线程是继承自OS/2的。在WIN32里，”进程”是指一个程序，而”线程”是一个”进程”里的一个执行”线索”。从核心上讲， WIN32的多进程与Linux并无多大的区别，在WIN32里的线程才相当于Linux的进程，是一个实际正在执行的代码。但是，WIN32里同一个进 程里各个线程之间是共享数据段的。这才是与Linux的进程最大的不同。<br>下面这段程序显示了WIN32下一个进程如何启动一个线程。<br><br>int g;<br>DWORD WINAPI ChildProcess( LPVOID lpParameter ){<br>int i;<br>for ( i = 1; i &lt;1000; i ++) {<br>g ++;<br>printf( “This is Child Thread: %d\n”, g );<br>}<br>ExitThread( 0 );<br>};<br><br>void main()<br>{<br>int threadID;<br>int i;<br>g = 0;<br>CreateThread( NULL, 0, ChildProcess, NULL, 0, &amp;threadID );<br>for ( i = 1; i &lt;1000; i ++) {<br>g ++;<br>printf( “This is Parent Thread: %d\n”, g );<br>}<br>}<br><br>在WIN32下，使用CreateThread函数创建线程，与Linux下创建进程不同，WIN32线程不是从创建处开始运行的，而是由 CreateThread指定一个函数，线程就从那个函数处开始运行。此程序同前面的UNIX程序一样，由两个线程各打印1000条信息。 threadID是子线程的线程号，另外，全局变量g是子线程与父线程共享的，这就是与Linux最大的不同之处。大家可以看出，WIN32的进程/线程 要比Linux复杂，在Linux要实现类似WIN32的线程并不难，只要fork以后，让子进程调用ThreadProc函数，并且为全局变量开设共享 数据区就行了，但在WIN32下就无法实现类似fork的功能了。所以现在WIN32下的C语言编译器所提供的库函数虽然已经能兼容大多数 Linux/UNIX的库函数，但却仍无法实现fork。<br>对于多任务系统，共享数据区是必要的，但也是一个容易引起混乱的问题，在WIN32下，一个程序员很容易忘记线程之间的数据是共享的这一情况，一个线程修 改过一个变量后，另一个线程却又修改了它，结果引起程序出问题。但在Linux下，由于变量本来并不共享，而由程序员来显式地指定要共享的数据，使程序变 得更清晰与安全。<br>至于WIN32的”进程”概念，其含义则是”应用程序”，也就是相当于UNIX下的exec了。<br>Linux也有自己的多线程函数pthread，它既不同于Linux的进程，也不同于WIN32下的进程，关于pthread的介绍和如何在Linux环境下编写多线程程序我们将在另一篇文章《Linux下的多线程编程》中讲述。<br><br>]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[进程间通信方式及比较]]></title>
      <url>http://www.ibmer.info/process.html</url>
      <content type="html"><![CDATA[<p>进程间的通信方式：</p>
<p><wbr> <wbr> 1.管道（pipe）及有名管道（named pipe）：</p>
<p><wbr> <wbr> <wbr> <wbr> <wbr>管道可用于具有亲缘关系进程间的通信，有名管道除了具有管道所具有的功能外，它还允许无亲缘关系进程间的通信。</p>
<p>2.信号（signal）：</p>
<p><wbr> <wbr> <wbr> <wbr> 信号是在软件层次上对中断机制的一种模拟，它是比较复杂的通信方式，用于通知进程有某事件发生，一个进程收到一个信号与处理器收到一个中断请求效果上可以说是一致得。</p>
<p><wbr></p>
<p><wbr> <wbr> 3.消息队列（message queue）：</p>
<p><wbr> <wbr> <wbr> <wbr> 消息队列是消息的链接表，它克服了上两种通信方式中信号量有限的缺点，具有写权限得进程可以按照一定得规则向消息队列中添加新信息；对消息队列有读权限得进程则可以从消息队列中读取信息。</p>
<p>消息缓冲通信技术是由Hansen首先提出的,其基本思想是:根据”生产者-消费者”原理,利用内存中公用消息缓冲区实现进程之间的信息交换.</p>
<p>内存中开辟了若干消息缓冲区,用以存放消息.每当一个进程向另一个进程发送消息时,便申请一个消息缓冲区,并把已准备好的消息送到缓冲区,然后把该消息缓冲区插入到接收进程的消息队列中,最后通知接收进程.接收进程收到发送里程发来的通知后,从本进程的消息队列中摘下一消息缓冲区,取出所需的信息,然后把消息缓冲区不定期给系统.系统负责管理公用消息缓冲区以及消息的传递.</p>
<p>一个进程可以给若干个进程发送消息,反之,一个进程可以接收不同进程发来的消息.显然,进程中关于消息队列的操作是临界区.当发送进程正往接收进程的消息队列中添加一条消息时,接收进程不能同时从该消息队列中到出消息:反之也一样.</p>
<p>消息缓冲区通信机制包含以下列内容:</p>
<p>(1)           消息缓冲区,这是一个由以下几项组成的数据结构:<br>1、       消息长度<br>2、       消息正文<br>3、       发送者<br>4、       消息队列指针</p>
<p>（2）消息队列首指针m-q,一般保存在PCB中。<br>（1）   互斥信号量m-mutex,初值为1，用于互斥访问消息队列，在PCB中设置。<br>（2）   同步信号量m-syn,初值为0，用于消息计数，在PCB中设置。<br>（3）   发送消息原语send<br>（4）   接收消息原语receive(a)</p>
<p><wbr></p>
<p><wbr> <wbr> 4.共享内存（shared memory）：</p>
<p><wbr> <wbr> <wbr> <wbr> 可以说这是最有用的进程间通信方式。它使得多个进程可以访问同一块内存空间，不同进程可以及时看到对方进程中对共享内存中数据得更新。这种方式需要依靠某种同步操作，如互斥锁和信号量等。</p>
<p>这种通信模式需要解决两个问题：第一个问题是怎样提供共享内存；第二个是公共内存的互斥关系则是程序开发人员的责任。   <wbr></p>
<p><wbr> <wbr> 5.信号量（semaphore）：</p>
<p><wbr> <wbr> <wbr> <wbr> 主要作为进程之间及同一种进程的不同线程之间得同步和互斥手段。</p>
<p><wbr></p>
<p><wbr> <wbr> 6.套接字（socket）；</p>
<p><wbr> <wbr> <wbr> <wbr> 这是一种更为一般得进程间通信机制，它可用于网络中不同机器之间的进程间通信，应用非常广泛。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[同步与异步的概念]]></title>
      <url>http://www.ibmer.info/synchronization-asynchronous.html</url>
      <content type="html"><![CDATA[<p>进程同步用来实现程序并发执行时候的可再现性。</p>
<p>一．进程同步及异步的概念</p>
<p>1．进程同步：就是在发出一个功能调用时，在没有得到结果之前，该调用就不返回。<strong>也就是必须一件一件事做**</strong>,<strong>**等前一件做完了才能做下一件事</strong>.就像早上起床后,先洗涮,然后才能吃饭,不能在洗涮没有完成时,就开始吃饭.按照这个定义，其实绝大多数函数都是同步调用（例如sin,isdigit等）。但是一般而言，我们在说同步、异步的时候，特指那些需要其他部件协作或者需要一定时间完成的任务。最常见的例子就是</p>
<p>sendmessage。该函数发送一个消息给某个窗口，在对方处理完消息之前，这个函数不返回。当对方处理完毕以后，该函数才把消息处理函数所返回的lresult值返回给调用者。</p>
<p>2．异步</p>
<p>异步的概念和同步相对。当一个异步过程调用发出后，调用者不能立刻得到结果。实际处理这个调用的部件在完成后，通过状态、通知和回调来通知调用者。</p>
<p>以casycsocket类为例（注意，csocket从casyncsocket派生，但是其功能已经由异步转化为同步），当一个客户端通过调用connect函数发出一个连接请求后，调用者线程立刻可以朝下运行。当连接真正建立起来以后，socket底层会发送一个消息通知该对象。</p>
<p>这里提到执行部件和调用者通过三种途径返回结果：状态、通知和回调。可以使用哪一种依赖于执行部件的实现，除非执行部件提供多种选择，否则不受调用者控制。如果执行部件用状态来通知，那么调用者就需要每隔一定时间检查一次，效率就很低（有些初学多线程编程的人，总喜欢用一个循环去检查某个变量的值，这其实是一种很严重的错误）。如果是使用通知的方式，效率则很高，因为执行部件几乎不需要做额外的操作。至于回调函数，其实和通知没太多区别。</p>
<p>进程同步的基本概念</p>
<p>在计算机系统中，由于资源有限而导致了进程之间的资源竞争和共享，因此，进程的并发执行不仅仅是用户程序的执行开始时间的随机性和提高资源利用率的结果，也是资源有限性导致资源的竞争与共享对进程的执行过程进行制约所造成的。那么，在进程的并发执行过程中存在哪些制约呢？</p>
<p>二．同步与异步传输：</p>
<ol>
<li>异步传输<br>通常，异步传输是以字符为传输单位，每个字符都要附加 1 位起始位和 1 位停止位，以标记一个字符的开始和结束，并以此实现数据传输同步。所谓异步传输是指字符与字符(一个字符结束到下一个字符开始)之间的时间间隔是可变的，并不需要严格地限制它们的时间关系。起始位对应于二进制值0，以低电平表示，占用 1 位宽度。停止位对应于二进制值 1，以高电平表示，占用 1~2 位宽度。一个字符占用 5~8位，具体取决于数据所采用的字符集。例如，电报码字符为 5 位、ASCII码字符为 7 位、汉字码则为8 位。此外，还要附加 1 位奇偶校验位，可以选择奇校验或偶校验方式对该字符实施简单的差错控制。发送端与接收端除了采用相同的数据格式(字符的位数、停止位的位数、有无校验位及校验方式等)外，还应当采用相同的传输速率。典型的速率有：9 600 b/s、19.2kb/s、56kb/s等。</li>
</ol>
<p>异步传输又称为起止式异步通信方式，其优点是简单、可靠，适用于面向字符的、低速的异步通信场合。例如，计算机与Modem之间的通信就是采用这种方式。它的缺点是通信开销大，每传输一个字符都要额外附加2～3位，通信效率比较低。例如，在使用Modem上网时，普遍感觉速度很慢，除了传输速率低之外，与通信开销大、通信效率低也密切相关。</p>
<ol>
<li>同步传输</li>
</ol>
<p>通常，同步传输是以数据块为传输单位。每个数据块的头部和尾部都要附加一个特殊的字符或比特序列，标记一个数据块的开始和结束，一般还要附加一个校验序列 (如16位或32位CRC校验码)，以便对数据块进行差错控制。所谓同步传输是指数据块与数据块之间的时间间隔是固定的，必须严格地规定它们的时间关系。</p>
<p>三．同步阻塞与异步阻塞：</p>
<p><strong>同步是阻塞模式，异步是非阻塞模式。 </strong></p>
<p>我的理解：同步是指两个线程的运行是相关的，其中一个线程要阻塞等待另外一个线程的运行。异步的意思是两个线程毫无相关，自己运行自己的。</p>
<p>同步是指：发送方发出数据后，等接收方发回响应以后才发下一个数据包的通讯方式。</p>
<p>异步是指：发送方发出数据后，不等接收方发回响应，接着发送下个数据包的通讯方式。</p>
<p>举个不太恰当的例子,就像:</p>
<p>SendMessage(…)</p>
<p>TRACE0(“just  like  send”);</p>
<p>PostMessage(…)</p>
<p>TRACE0(“just  like  WSASend  using  overlapped”);</p>
<p>SendMessage是调用的时候不返回,等消息响应后才执行TRACE0,这就是同步.</p>
<p>PostMessage是调用后马上返回,不用消息响应就执行TRACE0,这就是异步.</p>
<p>四．其它解释：</p>
<p>同步和异步的区别</p>
<p>举个例子：<strong>普通B/S模式（同步）AJAX技术（异步）</strong></p>
<p>同步：提交请求-&gt;等待服务器处理-&gt;处理完毕返回 这个期间客户端浏览器不能干任何事</p>
<p>异步: 请求通过事件触发-&gt;服务器处理（这是浏览器仍然可以作其他事情）-&gt;处理完毕</p>
<p>同步就是你叫我去吃饭，我听到了就和你去吃饭；如果没有听到，你就不停的叫，直到我告诉你听到了，才一起去吃饭。</p>
<p>异步就是你叫我，然后自己去吃饭，我得到消息后可能立即走，也可能等到下班才去吃饭。</p>
<p>所以，要我请你吃饭就用同步的方法，要请我吃饭就用异步的方法，这样你可以省钱。</p>
<p>举个例子 打电话时同步 发消息是异步</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过shell执行mysql命令，修改主机宝密码]]></title>
      <url>http://www.ibmer.info/shell-mysql.html</url>
      <content type="html"><![CDATA[<p><pre>#!/bin/bash</pre></p>
<p> #Author:   ibmer.info</p>
<p> #Time  :   2014年5月29日</p>
<p>mysql_version=5.1.73</p>
<p>FILE=/a/apps/zhujibao/manager/apps/config/mysql.ini<br> res=<code>cat $FILE | head -3 | grep passwd | cut -f2 -d&#39;=&#39; | tr -d &#39;\r&#39;</code></p>
<p>modity_sql_z=”update zadmin.admin set password=md5(‘$1’) where id=1;”<br> /a/apps/mysql/bin/mysql -u root -p${res} mysql -e “${modity_sql_z}”<br>&nbsp;</p>
<p>从shell脚本中可以看出，直接读取mysql.ini的密码，然后修改数据库表中的密码。</p>
<p>当然，知道了主机宝的表zadmin，是保存密码的，直接到数据库就可以编辑修改。</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WordPress存在DoS拒绝服务漏洞]]></title>
      <url>http://www.ibmer.info/wordpress-xmlrpc-dos.html</url>
      <content type="html"><![CDATA[<p>受影响的版本：</p>
<p>&nbsp;</p>
<p>WordPress 3.9.x-3.9.1</p>
<p>WordPress 3.8.x-3.8.3</p>
<p>WordPress 3.7.x-3.7.3</p>
<p>WordPress 3.6.x</p>
<p>WordPress 3.5.x</p>
<p>&nbsp;</p>
<p>漏洞描述：</p>
<p>&nbsp;</p>
<p>没有限制xml中的参数数量，导致攻击者可以远程注入恶意xml，对目标服务器直接造成拒绝服务攻击denial of service(dos)</p>
<p>&nbsp;</p>
<p>修复方案：</p>
<p>&nbsp;</p>
<p>1、删除根目录下的xmlrpc.php（推荐）；</p>
<p>2、Wordpress升级到最新版本；</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[include,include_once,require,require_once的区别]]></title>
      <url>http://www.ibmer.info/php-include-require.html</url>
      <content type="html"><![CDATA[<div id="article_content" class="article_content"><br><br>include() 、require()语句包含并运行指定文件。这两结构在包含文件上完全一样，唯一的区别是对于错误的处理。require()语句在遇到包含文件不存在，或是出错的时候，就停止即行，并报错。include()则继续即行。<br><br>&nbsp;<br><br>include(‘hello.php’);<br><br>echo ‘include test final!’;//include报错，但是会继续执行，显示：include test final!<br><br>require(‘hello.php’);<br><br>echo ‘require test final!’;//require报错，停止代码的执行。<br><br>&nbsp;<br><br>1、include()<br>include(/path/to/filename)<br><br>include()语句将在其被调用的位置处包含一个文件。包含一个文件与在该语句所在位置复制制定文件的数据具有相同内容的效果。<br><br>使用include()时可以忽略括号。<br><br>可以根据条件来执行include()语句。在条件语句中使用include()有个怪现象，它必须包围在语句块大括号中，或者用其他语句包围符括起来。<br>2、include_once()<br>include_once(filename)<br><br>include_once()函数的作用与include相同，不过它会首先验证是否已经包含了该文件。如果已经包含，则不再执行include_once。否则，则必须包含该文件。除了这一点与include完全相同。<br><br>3、require()<br>require(filename)<br><br>require()在很大程度上与include相同，都是将一个模板文件包含到require调用坐在的位置。<br><br>require和include之间有两点重要的区别。首先，无论require的位置如何，制定文件都将包含到出现require的脚本中。例如，即使require放在计算结果为假的if语句中，依然会包含指定文件。<br><br>第二个重要的区别是：require出错时，脚本将停止运行，而在使用include的情况下，脚本将继续执行。<br><br>4、require_once()<br>require_once(filename)<br><br>随着网站越来越大，可能会出现重复包含某些文件。这也许不是问题，但又是修改了所包含文件的变量后，却由于后面再次包含原来的文件而被覆盖，可能不希望出现这种情况。还可能出现另一个问题，即所包含文件中函数名的冲突。使用require_once就可以解决这些问题。<br><br>require_once函数确保文件只包含一次。在遇到require_once后，后面再试图包含相同的文件时将被忽略。<br><br></div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WordPress Cron 定时任务]]></title>
      <url>http://www.ibmer.info/wordpress-cron-schedule.html</url>
      <content type="html"><![CDATA[<p>WP-Cron 效率不高, 但还是很方便好用的</p>
<p>如果想把某些功能加到WordPress的cron里，可以使用下面的方法。</p>
<p>首先打开functions.php文件，粘贴入以下代码：</p>
<blockquote>
<p>if (!wp_next_scheduled(‘my_task_hook’)) {</p>
<p>wp_schedule_event( time(), ‘hourly’, ‘my_task_hook’ );</p>
<p>}</p>
<p>add_action( ‘my_task_hook’, ‘my_task_function’ );</p>
<p>function my_task_function() {</p>
<p>wp_mail(‘you@yoursite.com’, ‘Automatic email’, ‘Hello, this is an automatically scheduled email from ibmer.info.’);</p>
<p>}<br>注意，在第一行里，我们创建了一个任务，并确认任务名没有重复。然后通过add_action函数把任务加进WordPress的定时任务中。而在任务函数的声明中，我们可以看到这个任务是用来发送邮件的。</p>
</blockquote>
<hr>
<h2 id="函数引用列表"><a href="#函数引用列表" class="headerlink" title="函数引用列表"></a><span style="color: #ff0000;"><strong>函数引用列表</strong></span></h2><h3 id="wp-get-schedule"><a href="#wp-get-schedule" class="headerlink" title="wp_get_schedule"></a>wp_get_schedule</h3><p>通过勾子别名, 获取预定安排的勾子. 成功时返回循环周期类别 (hourly, twicedaily, daily, …), 失败时返回 false.</p>
<div class="wp_syntax"><br><table><br><tbody><br><tr><br><td class="code"><br><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_get_schedule<span style="color: #009900;">(</span> <span style="color: #000088;">$hook</span><span style="color: #339933;">,</span> <span style="color: #000088;">$args</span> <span style="color: #009900;">)</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br></td><br></tr><br></tbody><br></table><br></div><br>$hook: 勾子别名<br>$args: 勾子对应函数的参数数组 (可选)<br><br>### wp_get_schedules<br><br>WordPress 默认支持的循环周期类别有 hourly, twicedaily 和 daily. 通过该函数我们可以获取所有这些循环周期数组.<br><div class="wp_syntax"><br><table><br><tbody><br><tr><br><td class="code"><br><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_get_schedules<span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br></td><br></tr><br></tbody><br></table><br></div><br>在默认情况下, 由以上方法获得的数组对象如下.<br><div class="wp_syntax"><br><table><br><tbody><br><tr><br><td class="code"><br><pre class="php"><span style="color: #990000;">array</span><span style="color: #009900;">(</span><br>    <span style="color: #0000ff;">‘hourly’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #990000;">array</span><span style="color: #009900;">(</span><br>        <span style="color: #0000ff;">‘interval’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #cc66cc;">3600</span><span style="color: #339933;">,</span><br>        <span style="color: #0000ff;">‘display’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">‘Once Hourly’</span><br>    <span style="color: #009900;">)</span><span style="color: #339933;">,</span><br>    <span style="color: #0000ff;">‘twicedaily’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #990000;">array</span><span style="color: #009900;">(</span><br>        <span style="color: #0000ff;">‘interval’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #cc66cc;">43200</span><span style="color: #339933;">,</span><br>        <span style="color: #0000ff;">‘display’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">‘Twice Daily’</span><br>    <span style="color: #009900;">)</span><span style="color: #339933;">,</span><br>    <span style="color: #0000ff;">‘daily’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #990000;">array</span><span style="color: #009900;">(</span><br>        <span style="color: #0000ff;">‘interval’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #cc66cc;">86400</span><span style="color: #339933;">,</span><br>        <span style="color: #0000ff;">‘display’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">‘Once Daily’</span><br>    <span style="color: #009900;">)</span><br><span style="color: #009900;">)</span></pre><br></td><br></tr><br></tbody><br></table><br></div><br>我们可以向 cron_schedules 过滤器添加更多的类型. 添加例子如下:<br><div class="wp_syntax"><br><table><br><tbody><br><tr><br><td class="code"><br><pre class="php">add_filter<span style="color: #009900;">(</span><span style="color: #0000ff;">‘cron_schedules’</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">‘cron_add_weekly’</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br><span style="color: #000000; font-weight: bold;">function</span> cron_add_weekly<span style="color: #009900;">(</span> <span style="color: #000088;">$schedules</span> <span style="color: #009900;">)</span><br><span style="color: #009900;">{</span><br>    <span style="color: #666666; font-style: italic;">// Adds once weekly to the existing schedules.</span><br>    <span style="color: #000088;">$schedules</span><span style="color: #009900;">[</span><span style="color: #0000ff;">‘weekly’</span><span style="color: #009900;">]</span> <span style="color: #339933;">=</span> <span style="color: #990000;">array</span><span style="color: #009900;">(</span><br>        <span style="color: #0000ff;">‘interval’</span> <span style="color: #339933;">=&gt;</span> <span style="color: #cc66cc;">604800</span><span style="color: #339933;">,</span> <span style="color: #666666; font-style: italic;">// 1周 = 60秒 <em> 60分钟 </em> 24小时 * 7天</span><br>        <span style="color: #0000ff;">‘display’</span> <span style="color: #339933;">=&gt;</span> __<span style="color: #009900;">(</span><span style="color: #0000ff;">‘Once Weekly’</span><span style="color: #009900;">)</span><br>    <span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>    <span style="color: #b1b100;">return</span> <span style="color: #000088;">$schedules</span><span style="color: #339933;">;</span><br><span style="color: #009900;">}</span></pre><br></td><br></tr><br></tbody><br></table><br></div>

<h3 id="wp-next-scheduled"><a href="#wp-next-scheduled" class="headerlink" title="wp_next_scheduled"></a>wp_next_scheduled</h3><p>通过勾子别名, 获取预定安排的下一个运行时刻, 以整型返回. 常用于判断是否已经做了预定安排.</p>
<p><div class="wp_syntax"></div></p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="code"></td></p>
<p><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> <span style="color: #000088;">$timestamp</span> <span style="color: #339933;">=</span> wp_next_scheduled<span style="color: #009900;">(</span> <span style="color: #000088;">$hook</span><span style="color: #339933;">,</span> <span style="color: #000088;">$args</span> <span style="color: #009900;">)</span><span style="color: #339933;">;</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br><br><br><br><br><br>$hook: 勾子别名<br>$args: 勾子对应函数的参数数组 (可选)</p>
<h3 id="wp-schedule-event"><a href="#wp-schedule-event" class="headerlink" title="wp_schedule_event"></a>wp_schedule_event</h3><p>按周期循环预定安排一个 WordPress 勾子, 在预定时间触发勾子对应的函数.</p>
<p><div class="wp_syntax"></div></p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="code"></td></p>
<p><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_schedule_event<span style="color: #009900;">(</span><span style="color: #000088;">$timestamp</span><span style="color: #339933;">,</span> <span style="color: #000088;">$recurrence</span><span style="color: #339933;">,</span> <span style="color: #000088;">$hook</span><span style="color: #339933;">,</span> <span style="color: #000088;">$args</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br><br><br><br><br><br>$timestamp: 时间 (整型)<br>$recurrence: 循环周期类别 (hourly, twicedaily, daily, …)<br>$hook: 勾子别名<br>$args: 勾子对应函数的参数数组 (可选)</p>
<h3 id="wp-reschedule-event"><a href="#wp-reschedule-event" class="headerlink" title="wp_reschedule_event"></a>wp_reschedule_event</h3><p>按周期循环重新预定安排一个 WordPress 勾子. 但我发现这个方法不能正常使用, Codex 写得很草, 如果哪位清楚知道怎么使用, 请告知一下.</p>
<h3 id="wp-unschedule-event"><a href="#wp-unschedule-event" class="headerlink" title="wp_unschedule_event"></a>wp_unschedule_event</h3><p>通过预定时间和勾子别名, 取消预定的安排.</p>
<p><div class="wp_syntax"></div></p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="code"></td></p>
<p><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_unschedule_event<span style="color: #009900;">(</span><span style="color: #000088;">$timestamp</span><span style="color: #339933;">,</span> <span style="color: #000088;">$hook</span><span style="color: #339933;">,</span> <span style="color: #000088;">$args</span> <span style="color: #009900;">)</span><span style="color: #339933;">;</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br><br><br><br><br><br>$timestamp: 时间 (整型)<br>$hook: 勾子别名<br>$args: 勾子对应函数的参数数组 (可选)</p>
<h3 id="wp-clear-scheduled-hook"><a href="#wp-clear-scheduled-hook" class="headerlink" title="wp_clear_scheduled_hook"></a>wp_clear_scheduled_hook</h3><p>通过勾子别名, 移除预定安排的勾子.</p>
<p><div class="wp_syntax"></div></p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="code"></td></p>
<p><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_clear_scheduled_hook<span style="color: #009900;">(</span> <span style="color: #000088;">$hook</span> <span style="color: #009900;">)</span><span style="color: #339933;">;</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br><br><br><br><br><br>$hook: 勾子别名</p>
<h3 id="wp-schedule-single-event"><a href="#wp-schedule-single-event" class="headerlink" title="wp_schedule_single_event"></a>wp_schedule_single_event</h3><p>预定安排一个 WordPress 勾子, 在预定时间触发勾子对应的函数. 与 wp_schedule_event 不同的是该方法的只安排一次触发, 不存在循环预定.</p>
<p><div class="wp_syntax"></div></p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="code"></td></p>
<p><pre class="php"><span style="color: #000000; font-weight: bold;">&lt;?php</span> wp_schedule_single_event<span style="color: #009900;">(</span><span style="color: #000088;">$timestamp</span><span style="color: #339933;">,</span> <span style="color: #000088;">$hook</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span> <span style="color: #000000; font-weight: bold;">?&gt;</span></pre><br><br><br><br><br><br>$timestamp: 时间 (整型)<br>$args: 勾子对应函数的参数数组 (可选)</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修改 WordPress 发送邮件的默认邮箱和发件人]]></title>
      <url>http://www.ibmer.info/mail-wp-from-name.html</url>
      <content type="html"><![CDATA[<pre class="php" style="font-family: monospace;"><span style="color: #000000; font-weight: bold;">默认情况下，WordPress 通过 mail() 函数发送的邮件的发件人是：WordPress &lt; wordpress@xxx.com  &gt;，这样一般是没办法让收件人直接回复的，而且很容易进入垃圾箱。
其实，我们可以通过  wp_mail_from 和 wp_mail_from_name 来修改 WordPress 发送邮件的默认邮箱和发件人。将下面的代码添加在主题的 functions.php 最后一个 ?&gt; 的前面：

function</span> new_from_name<span style="color: #009900;">(</span><span style="color: #000088;">$email</span><span style="color: #009900;">)</span><span style="color: #009900;">{</span>
    <span style="color: #000088;">$wp_from_name</span> <span style="color: #339933;">=</span> get_option<span style="color: #009900;">(</span><span style="color: #0000ff;">'blogname'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
    <span style="color: #b1b100;">return</span> <span style="color: #000088;">$wp_from_name</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span>

<span style="color: #000000; font-weight: bold;">function</span> new_from_email<span style="color: #009900;">(</span><span style="color: #000088;">$email</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000088;">$wp_from_email</span> <span style="color: #339933;">=</span> get_option<span style="color: #009900;">(</span><span style="color: #0000ff;">'admin_email'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
    <span style="color: #b1b100;">return</span> <span style="color: #000088;">$wp_from_email</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span>

add_filter<span style="color: #009900;">(</span><span style="color: #0000ff;">'wp_mail_from_name'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'new_from_name'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
add_filter<span style="color: #009900;">(</span><span style="color: #0000ff;">'wp_mail_from'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'new_from_email'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span></pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[/etc/postfix/main.cf的配置]]></title>
      <url>http://www.ibmer.info/postfix-config.html</url>
      <content type="html"><![CDATA[<p>myhostname = smtp.bmer.info<br>alias_maps = hash:/etc/aliases<br>alias_database = hash:/etc/aliases<br>myorigin = ibmer.info<br>mydestination = ibmer.info, mail.ibmer.info, localhost.localdomain, localhost<br>relayhost =</p>
<p>#mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128<br>mynetworks = 外网ip/28,内外ip/8<br>mailbox_size_limit = 0<br>recipient_delimiter = +<br>inet_interfaces = all</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu下，使用postfix实现php发送mail功能。]]></title>
      <url>http://www.ibmer.info/ubuntu-postfix-php-mail.html</url>
      <content type="html"><![CDATA[<p>1、ubuntu 下安装postfix，执行命令：</p>
<h1 id="apt-get-install-postfix-popa3d"><a href="#apt-get-install-postfix-popa3d" class="headerlink" title="apt-get install postfix popa3d"></a>apt-get install postfix popa3d</h1><p>2、在php.ini配置文件上，设置mail函数：<br>1）打开php.ini配置，下面是我的php.ini路径：</p>
<h1 id="vi-home-service-web-config-php-lib-php-ini"><a href="#vi-home-service-web-config-php-lib-php-ini" class="headerlink" title="vi /home/service/web/config/php/lib/php.ini"></a>vi /home/service/web/config/php/lib/php.ini</h1><p>2）找到：sendmail_path ，将其设置为:</p>
<p>sendmail_path = /usr/sbin/sendmail -t</p>
<p>注意：这里需要先到/usr/sbin/ 目录中，确认是否存在sendmail文件。</p>
<p>3、启动postfix：</p>
<h1 id="etc-init-d-postfix-start"><a href="#etc-init-d-postfix-start" class="headerlink" title="/etc/init.d/postfix start"></a>/etc/init.d/postfix start</h1><p>4、重启apache:</p>
<h1 id="etc-init-d-apache2-restart"><a href="#etc-init-d-apache2-restart" class="headerlink" title="/etc/init.d/apache2 restart"></a>/etc/init.d/apache2 restart</h1><p>5、以上完成。你可以写一个发送email的php文件做测试，如下：</p>
<p>&lt;?php<br>$text = “This is a test!测试邮件!!”;<br>// 将邮箱地址改成你的<br>$mail = ‘hxy.huang@qq.com’;<br>// 发送邮件<br>mail($mail, “Mail Test,测试邮件!!”, $text);</p>
<p>if (function<em>exists(‘mail’)) echo “^</em>^ mail()函数可以使用！”;<br>else echo “- -! mail()函数不可以使用！”;</p>
<p>echo “Message has been sent !”;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ Win7下Python,setuptools,pip,virtualenv的安装]]></title>
      <url>http://www.ibmer.info/python-pip-setup.html</url>
      <content type="html"><![CDATA[<p>Windows下Python,setuptools,pip,virtualenv的安装</p>
<p>Windows 7平台，安装Python2.7.4，Python3.3，setuptools，pip，virtualenv。</p>
<p>安装Python2.7.4（当前版本是2.7.6），安装路径：C:\Python27</p>
<p>安装Python3.3.2，安装路径：C:\Python33</p>
<p>安装完毕之后，请勿将python的目录添加到系统的环境变量中。</p>
<p>优先安装setuptools后面的pip和virtualenv可以通过easy_install来安装。</p>
<p>setuptools可以在 <a href="http://pypi.python.org/pypi/setuptools" target="_blank" rel="external">http://pypi.python.org/pypi/setuptools</a> 找到Windows的安装方式，现在官网建议使用的是下载ez_setup.py来安装。</p>
<p>下载完ez_setup.py，CMD下路由到下载目录，使用：<br>C:\Python27\Scripts\python.exe ez_setup.py</p>
<p>下载完毕最新版本之后，系统会自动安装setuptools，安装完毕之后，会在scripts下会有一个easy_install.exe可执行文件。</p>
<p>当安装完毕setuptools之后，剩下的就比较简单了。</p>
<h1 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h1><p>&gt;C:\Python27\Scripts\easy_install.exe pip</p>
<p>#安装完成pip之后，接着安装virtualenv<br>&gt;C:\Python27\Scripts\easy_install.exe virtualenv==1.10.1</p>
<p>安装完毕之后，同样在Scripts下面可以看到pip.exe和virtualenv.exe文件。需要注意，当前irtualenv的版本是1.11，安装的时候如果不设定==1.10.1，默认会安装最新版本，而1.11版本的virtualenv是有问题的，安装1.11后，在创建环境的时候会失败，报错： setuptools pip failed with error code 1.这个问题是1.11的本身的问题，用1.10.1版本，没有这个问题，所以我们安装的时候需要明确版本1.10.1。</p>
<p>安装完毕virtualenv之后，就可以创建虚拟环境了：</p>
<p>#创建虚拟环境：先在cmd中路由到需要创建虚拟环境的目录下，创建的虚拟环境是在该目录下的一个文件夹<br>&gt;c:\python27\Scripts\virtualenv.exe vProject</p>
<p>创建之后，我们可以检查下vProject下是否有文件，同时确认下vProject\Scripts\下是否有activate.bat和deactivate.bat两个文件。至此，虚拟环境就创建好了。运行虚拟环境只需要在CMD下运行activate.bat，并在当前窗口中进行操作——所有的操作此时都已经在虚拟环境中进行的。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP实现多线程抓取网页]]></title>
      <url>http://www.ibmer.info/php-curl-multi.html</url>
      <content type="html"><![CDATA[<p>PHP 利用 Curl Functions 可以完成各种传送文件操作，比如模拟浏览器发送GET，POST请求等等，受限于php语言本身不支持多线程，所以开发爬虫程序效率并不高，这时候往往需 要借助Curl Multi Functions 它可以实现并发多线程的访问多个url地址。既然 Curl Multi Function如此强大，能否用 Curl Multi Functions 来写并发多线程下载文件呢，当然可以，下面给出我的代码：</p>
<p>代码1：将获得的代码直接写入某个文件</p>
<pre>&lt;?php
$urls = array(
 'http://www.sina.com.cn/',
 'http://www.sohu.com/',
 'http://www.163.com/'
); // 设置要抓取的页面URL  

$save_to='/test.txt';   // 把抓取的代码写入该文件   

$st = fopen($save_to,"a");
$mh = curl_multi_init();   

foreach ($urls as $i =&gt; $url) {
  $conn[$i] = curl_init($url);
  curl_setopt($conn[$i], CURLOPT_USERAGENT, "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)");
  curl_setopt($conn[$i], CURLOPT_HEADER ,0);
  curl_setopt($conn[$i], CURLOPT_CONNECTTIMEOUT,60);
  curl_setopt($conn[$i], CURLOPT_FILE,$st); // 设置将爬取的代码写入文件
  curl_multi_add_handle ($mh,$conn[$i]);
} // 初始化  

do {
  curl_multi_exec($mh,$active);
} while ($active);  // 执行  

foreach ($urls as $i =&gt; $url) {
  curl_multi_remove_handle($mh,$conn[$i]);
  curl_close($conn[$i]);
} // 结束清理  

curl_multi_close($mh);
fclose($st);
?&gt;

</pre>
代码2：将获得的代码先放入变量，再写入某个文件
<pre>
&lt;?php
$urls = array(
'http://www.sina.com.cn/',
'http://www.sohu.com/',
'http://www.163.com/'
);

$save_to='/test.txt';   // 把抓取的代码写入该文件
$st = fopen($save_to,"a");

$mh = curl_multi_init();
foreach ($urls as $i =&gt; $url) {
$conn[$i] = curl_init($url);
curl_setopt($conn[$i], CURLOPT_USERAGENT, "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)");
curl_setopt($conn[$i], CURLOPT_HEADER ,0);
curl_setopt($conn[$i], CURLOPT_CONNECTTIMEOUT,60);
curl_setopt($conn[$i],CURLOPT_RETURNTRANSFER,true);  // 设置不将爬取代码写到浏览器，而是转化为字符串
curl_multi_add_handle ($mh,$conn[$i]);
}

do {
curl_multi_exec($mh,$active);
} while ($active);

foreach ($urls as $i =&gt; $url) {
$data = curl_multi_getcontent($conn[$i]); // 获得爬取的代码字符串
fwrite($st,$data);  // 将字符串写入文件。当然，也可以不写入文件，比如存入数据库
} // 获得数据变量，并写入文件

foreach ($urls as $i =&gt; $url) {
curl_multi_remove_handle($mh,$conn[$i]);
curl_close($conn[$i]);
}

curl_multi_close($mh);
fclose($st);
?&gt;

</pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三个实现wordpress非插件使用七牛云存储的方法]]></title>
      <url>http://www.ibmer.info/wordpress-qiniu-cdn.html</url>
      <content type="html"><![CDATA[<h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p><span style="color: #333333;">打开你主题文件中的funtion.php文件加入以下代码</span></p>
<pre class="brush:php">//将主题自带的 CSS 和 JS 文件替换成七牛镜像存储    
define(‘CDN_HOST’,’http://ibmer.qiniudn.com/’);    
 add_filter(‘stylesheet_directory_uri’,’dw_cdn_stylesheet_directory_uri’,10,3);    
 function dw_cdn_stylesheet_directory_uri($stylesheet_dir_uri, $stylesheet, $theme_root_uri) {    
 return str_replace(home_url(), CDN_HOST, $stylesheet_dir_uri);    
 }    
 add_filter(‘template_directory_uri’,’dw_cdn_template_directory_uri’,10,3);    
 function dw_cdn_template_directory_uri($template_dir_uri, $template, $theme_root_uri) {    
 return str_replace(home_url(), CDN_HOST, $template_dir_uri);    
 }</pre>

<p>把里边的cdn地址更换为你在七牛申请的地址即可！</p>
<pre style="color: #666666;"><span style="color: #c0c0c0;">http://ibmer.qiniudn.com/（更换这个）</span></pre>

<p><span style="color: #333333;">然后保存刷新下后查看下源代码，不过只能同步CSS 和 JS 文件。</span></p>
<p>还看到有一种方法是，如下文</p>
<p>就如这个地址：<a href="http://你的博客地址/wp-admin/options.php，然后呢找到upload_url_path，在后边输入" target="_blank" rel="external">http://你的博客地址/wp-admin/options.php，然后呢找到upload_url_path，在后边输入</a></p>
<p><a href="http://你的二级域名（七牛三级域名）/" target="_blank" rel="external">http://你的二级域名（七牛三级域名）/</a></p>
<p>保存即可 <span style="color: #ff6600;">ps：后面的“/”不能少</span></p>
<p>二者结合就能把静态的文件都上传到七牛去了</p>
<h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>在 WordPress 主题目录下的<code>functions.php</code>文件中，加入以下代码实现替换功能：</p>
<p><pre class="brush:php">if ( !is_admin() ) {<br>    add_action(‘wp_loaded’,’ibmer_ob_start’);</pre></p>
<pre><code>function ibmer_ob_start() {
    ob_start(&apos;ibmer_qiniu_cdn_replace&apos;);
}

function ibmer_qiniu_cdn_replace($html) {
    return str_replace(&apos;http://ibmer.info/wp-content/uploads/&apos;, &apos;http://ibmer.qiniudn.com/wp-uploads/&apos;, $html);
}
</code></pre><p>}<br><code>return str_replace(&#39;http://ibmer.info/wp-content/uploads/&#39;, &#39;http://ibmer.qiniudn.com/wp-uploads/&#39;, $html);</code><br>前者是博客路径，后者是七牛空间路径。<br>如果你需要更具体的范围控制（多目录、指定文件类型），可使用以下代码替换上面的<code>ibmer_qiniu_cdn_replace</code> 部分：</p>
<p><pre class="brush:php">//修改自七牛镜像存储 WordPress 插件<br>function ibmer_qiniu_cdn_replace($html){<br>    $local_host = ‘<a href="http://ibmer.info" target="_blank" rel="external">http://ibmer.info</a>‘; //博客域名<br>    $qiniu_host = ‘<a href="http://ibmer.qiniudn.com" target="_blank" rel="external">http://ibmer.qiniudn.com</a>‘; //七牛域名<br>    $cdn_exts   = ‘js|css|png|jpg|jpeg|gif|ico’; //扩展名（使用|分隔）<br>    $cdn_dirs   = ‘wp-content|wp-includes’; //目录（使用|分隔）</pre></p>
<pre><code>$cdn_dirs   = str_replace(&apos;-&apos;, &apos;\-&apos;, $cdn_dirs);

if ($cdn_dirs) {
    $regex    =  &apos;/&apos; . str_replace(&apos;/&apos;, &apos;\/&apos;, $local_host) . &apos;\/((&apos; . $cdn_dirs . &apos;)\/[^\s\?\\\&apos;\&quot;\;\&amp;gt;\&amp;lt;]{1,}.(&apos; . $cdn_exts . &apos;))([\&quot;\\\&apos;\s\?]{1})/&apos;;
    $html =  preg_replace($regex, $qiniu_host . &apos;/$1$4&apos;, $html);
} else {
    $regex    = &apos;/&apos; . str_replace(&apos;/&apos;, &apos;\/&apos;, $local_host) . &apos;\/([^\s\?\\\&apos;\&quot;\;\&amp;gt;\&amp;lt;]{1,}.(&apos; . $cdn_exts . &apos;))([\&quot;\\\&apos;\s\?]{1})/&apos;;
    $html =  preg_replace($regex, $qiniu_host . &apos;/$1$3&apos;, $html);
}
return $html;
</code></pre><p>}<br>简单的3步，就能让你的 WordPress 实现 CDN 加速</p>
<h2 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h2><p>这个方法同样是把下面的代码加入<code>function.php</code></p>
<p><pre class="brush:php">define(‘FocusCDNHost’,’<a href="http://www.ibmer.info&#39;);//wordpress网站网址">http://www.ibmer.info&#39;);//wordpress网站网址</a><br>define(‘FocusCDNRemote’,’<a href="http://ibmer.qiniudn.com&#39;);//cdn域名" target="_blank" rel="external">http://ibmer.qiniudn.com&#39;);//cdn域名</a><br>define(‘FocusCDNIncludes’,’wp-content,wp-includes’);//设置加速目录<br>define(‘FocusCDNExcludes’,’.php|.xml|.html|.po|.mo’);//设置文件白名单<br>define(‘FocusCDNRelative’,’’);//Check this if you want to have links like &lt;wp-content/abc.png&gt; rewritten<br>                                       // i.e. without your blog’s domain as prefix.</pre></p>
<p>function do_cdnrewrite_ob_start() {<br>$rewriter = new FocusCDNRewriteWordpress();<br>$rewriter-&gt;register_as_output_buffer();<br>}<br>add_action(‘template_redirect’, ‘do_cdnrewrite_ob_start’);</p>
<p>class FocusCDNRewriteWordpress extends FocusCDNRewrite<br>{<br>function __construct() {<br>$excl_tmp = FocusCDNExcludes;<br>$excludes = array_map(‘trim’, explode(‘|’, $excl_tmp));</p>
<p>parent::__construct(<br>FocusCDNHost,<br>FocusCDNRemote,<br>FocusCDNIncludes,<br>$excludes,<br>!!FocusCDNRelative<br>);<br>}<br>public function register_as_output_buffer() {<br>if ($this-&gt;blog_url != FocusCDNRemote) {<br>ob_start(array(&amp;$this, ‘rewrite’));<br>}<br>}</p>
<p>}</p>
<p>class FocusCDNRewrite {<br>var $blog_url    = null;<br>var $cdn_url     = null;<br>var $include_dirs   = null;<br>var $excludes    = array();<br>var $rootrelative   = false;</p>
<p>function __construct($blog_url, $cdn_url, $include_dirs, array $excludes, $root_relative) {<br>$this-&gt;blog_url   = $blog_url;<br>$this-&gt;cdn_url    = $cdn_url;<br>$this-&gt;include_dirs  = $include_dirs;<br>$this-&gt;excludes   = $excludes;<br>$this-&gt;rootrelative  = $root_relative;<br>}</p>
<p>protected function exclude_single(&amp;$match) {<br>foreach ($this-&gt;excludes as $badword) {<br>if (stristr($match, $badword) != false) {<br>return true;<br>}<br>}<br>return false;<br>}</p>
<p>protected function rewrite_single(&amp;$match) {<br>if ($this-&gt;exclude_single($match[0])) {<br>return $match[0];<br>} else {<br>if (!$this-&gt;rootrelative || strstr($match[0], $this-&gt;blog_url)) {<br>return str_replace($this-&gt;blog_url, $this-&gt;cdn_url, $match[0]);<br>} else {<br>return $this-&gt;cdn_url . $match[0];<br>}<br>}<br>}</p>
<p>protected function include_dirs_to_pattern() {<br>$input = explode(‘,’, $this-&gt;include_dirs);<br>if ($this-&gt;include_dirs == ‘’ || count($input) &lt; 1) {<br>return ‘wp-content|wp-includes’;<br>} else {<br>return implode(‘|’, array_map(‘quotemeta’, array_map(‘trim’, $input)));<br>}<br>}</p>
<p>public function rewrite(&amp;$content) {<br>$dirs = $this-&gt;include_dirs_to_pattern();<br>$regex = ‘#(?&lt;=[(\”\’])’;<br>$regex .= $this-&gt;rootrelative<br>? (‘(?:’.quotemeta($this-&gt;blog_url).’)?’)<br>: quotemeta($this-&gt;blog_url);<br>$regex .= ‘/(?:((?:’.$dirs.’)[^\”\’)]+)|([^/\”\’]+.[^/\”\’)]+))(?=[\”\’)])#’;<br>return preg_replace_callback($regex, array(&amp;$this, ‘rewrite_single’), $content);<br>}</p>
<p>}<br>cdn的域名同样适用于又拍云，总得来说很方便，虽然代码有点长。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何上传网络文件到七牛]]></title>
      <url>http://www.ibmer.info/upload-httpfile-to-qiniu.html</url>
      <content type="html"><![CDATA[<p>七牛云的官方文档中，给出了两种上传方式，一种是上传字符串，一种是上传文件，示例代码如下：</p>
<p>上传字符串</p>
<p>&nbsp;</p>
<pre class="prettyprint lang-php">require_once("qiniu/io.php");
require_once("qiniu/rs.php");

$bucket = "phpsdk";
$key1 = "file_name1";
$accessKey = '&lt;YOUR_APP_ACCESS_KEY&gt;';
$secretKey = '&lt;YOUR_APP_SECRET_KEY&gt;';

Qiniu_SetKeys($accessKey, $secretKey);
$putPolicy = new Qiniu_RS_PutPolicy($bucket);
$upToken = $putPolicy-&gt;Token(null);
list($ret, $err) = Qiniu_Put($upToken, $key1, "Qiniu Storage!", null);
echo "====&gt; Qiniu_Put result: 
";
if ($err !== null) {
    var_dump($err);
} else {
    var_dump($ret);
}
</pre>
上传本地文件：

&nbsp;
<pre class="prettyprint lang-php">require_once("qiniu/io.php");
require_once("qiniu/rs.php");

$bucket = "phpsdk";
$key1 = "file_name1";
$accessKey = '&lt;YOUR_APP_ACCESS_KEY&gt;';
$secretKey = '&lt;YOUR_APP_SECRET_KEY&gt;';

Qiniu_SetKeys($accessKey, $secretKey);
$putPolicy = new Qiniu_RS_PutPolicy($bucket);
$upToken = $putPolicy-&gt;Token(null);
$putExtra = new Qiniu_PutExtra();
$putExtra-&gt;Crc32 = 1;
list($ret, $err) = Qiniu_PutFile($upToken, $key1, __file__, $putExtra);
echo "====&gt; Qiniu_PutFile result: 
";
if ($err !== null) {
    var_dump($err);
} else {
    var_dump($ret);
}</pre>
由于第二种方式上传文件只能读取本地文件，而本站图片存放在storage中，并不能通过读取网络地址的方式上传至七牛云，经过咨询七牛云技术客服，对方建议使用第一种，先读取网络文件为字符串，再使用上传字符串的方式上传至七牛云，经测试，成功上传。上传代码如下：
<pre class="prettyprint lang-php">/**
*上传图片至七牛云
*$path 图片地址
*$dirname 在七牛云上的文类名称
*$filename 文件保存名称
*$bucket 你的七牛云域名称
*/
function upPicTo7niu($path,$dirname,$filename,$bucket){

    $contents = @file_get_contents($path);

    $storename = $dirname."/".$filename;
    $bu = $bucket.":".$storename;
    $accessKey = '&lt;YOUR_APP_ACCESS_KEY&gt;';
    $secretKey = '&lt;YOUR_APP_SECRET_KEY&gt;';

    Qiniu_SetKeys($accessKey, $secretKey);
    $putPolicy = new Qiniu_RS_PutPolicy($bu);
    $upToken = $putPolicy-&gt;Token(null);
    $putExtra = new Qiniu_PutExtra();
    $putExtra-&gt;Crc32 = 1;
    list($ret, $err) = Qiniu_Put($upToken, $storename, $contents, $putExtra);
}</pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac os x实用技巧-关闭渐隐和弹出动画效果]]></title>
      <url>http://www.ibmer.info/mac-os-x.html</url>
      <content type="html"><![CDATA[<p>不带任何动画效果不是更好吗？就像过去那样清清爽爽也不错。接下来将介绍如何在OS X操作系统里关闭大部分的视觉动画效果。</p>
<h3 id="1、关闭窗口和对话框弹出的动画特效"><a href="#1、关闭窗口和对话框弹出的动画特效" class="headerlink" title="1、关闭窗口和对话框弹出的动画特效"></a>1、关闭窗口和对话框弹出的动画特效</h3><p>打开终端窗口（Finder-应用程序-实用工具-终端）并运行下面的命令，就能取消对话框和窗口在屏幕中央位置弹出的效果：</p>
<blockquote>
<p>defaults write -g NSAutomaticWindowAnimationEnabled -bool FALSE</p>
</blockquote>
<p>然后注销并重新登录系统使更改生效。</p>
<p>如果想恢复这个特效的话，可以打开终端窗口并运行下面的命令。同样地，需要注销并重新登录使更改生效：</p>
<blockquote>
<p>defaults delete -g NSAutomaticWindowAnimationEnabled</p>
</blockquote>
<h3 id="2、关闭快速查看的动画特效"><a href="#2、关闭快速查看的动画特效" class="headerlink" title="2、关闭快速查看的动画特效"></a>2、关闭快速查看的动画特效</h3><p>当你选中某个文件并敲下《Space》键时会弹出快速查看窗口。它显示文件内容的预览画面。你可以在终端窗口里运行下面的命令，停用“快速查看”窗口从当前文件位置向外扩张的动画效果（这样做也会同时停用快速查看窗口缩回当前文件位置时的动画效果）：</p>
<blockquote>
<p>defaults write com.apple.finder QLPanelAnimationDuration -int 0;killall Finder</p>
</blockquote>
<p>命令运行后立即生效。如果想恢复这个动态效果，请打开终端窗口并运行以下命令（同理，这个更改也是立即生效）：</p>
<blockquote>
<p>defaults delete com.apple.finder QLPanelAnimationDuration;killall Finder</p>
</blockquote>
<h3 id="3、关闭Mission-Control的动画特效"><a href="#3、关闭Mission-Control的动画特效" class="headerlink" title="3、关闭Mission Control的动画特效"></a>3、关闭Mission Control的动画特效</h3><p>在终端窗口里运行下面的命令，可以关闭当用户使用或退出Mission Control功能时所出现的动画缩放效果：</p>
<blockquote>
<p>defaults write com.apple.dock expose-animation -duration -int 0;killall Dock</p>
</blockquote>
<p>更改在命令运行后立即生效。要注意这样也会关闭在使用“显示桌面”（Show Desktop）特效时，窗口向四周急速分散的动画效果。“显示桌面”特效通常是在触控板上用多个手指同时张开的手势来启用的。</p>
<p>如果想要恢复Mission Control功能的默认动画效果，可以打开终端窗口并运行以下命令：</p>
<blockquote>
<p>defaults delete com.apple.dock expose-animation -duration;killall Dock</p>
</blockquote>
<h3 id="4、关闭文件保存和打印对话框的动画效果"><a href="#4、关闭文件保存和打印对话框的动画效果" class="headerlink" title="4、关闭文件保存和打印对话框的动画效果"></a>4、关闭文件保存和打印对话框的动画效果</h3><p>每当保存或打印文件时，程序的标题栏位置会向下滑出对话框。要关闭这一动画效果，可打开终端窗口并运行下面的命令：</p>
<blockquote>
<p>defaults write -g NSWindowResizeTime -float 0.01</p>
</blockquote>
<p>你需要注销后再登录系统来使更改生效。</p>
<p>如果你希望再次看到这个视觉特效的话，可以运行下面的命令，之后同样要注销再登录系统使更改生效：</p>
<blockquote>
<p>defaults delete -g NSWindowResizeTime</p>
</blockquote>
<h3 id="5、关闭Launchpad界面动画效果"><a href="#5、关闭Launchpad界面动画效果" class="headerlink" title="5、关闭Launchpad界面动画效果"></a>5、关闭Launchpad界面动画效果</h3><p>更改一个隐藏的设置就可以使Launchpad界面立刻出现或消失。打开终端窗口并键入下面两行命令，再按下《Return》键就可以了：</p>
<blockquote>
<p>defaults write com.apple.dock springboard-show-duration -int 0</p>
<p>defaults write com.apple.dock springboard-hide-duration -int 0;killall Dock</p>
</blockquote>
<p>更改会立即生效。如果你要恢复之前的动画效果，可以再次打开终端窗口并运行下面的两行命令：</p>
<blockquote>
<p>defaults delete com.apple.dock springboard-show-duration</p>
<p>defaults delete com.apple.dock springboard-hide-duration;killall Dock</p>
</blockquote>
<p>在Launchpad界面里的应用程序页面划动时，如果你想立刻切换到下一页面而不带动画过渡从而减少页面切换所需的时间，那么可以打开终端窗口并键入下面的命令：</p>
<blockquote>
<p>defaults write com.apple.dock springboard-page-duration -int 0;killall Dock</p>
</blockquote>
<p>运行后更改会立即生效。如果需要恢复默认状态，请打开终端窗口并键入以下命令：</p>
<blockquote>
<p>defaults delete com.apple.dock springboard-page-duration;killall Dock</p>
</blockquote>
<h3 id="6、关闭Dock栏的动画效果"><a href="#6、关闭Dock栏的动画效果" class="headerlink" title="6、关闭Dock栏的动画效果"></a>6、关闭Dock栏的动画效果</h3><p>Dock栏可以启动隐藏功能，以便在它用不到的时候会自动滑出屏幕。这样可以为屏幕腾出一些空间。把鼠标移到Dock栏平常所在的位置的边缘时可以让它重新进入屏幕中。右击Dock栏上的应用程序图标和栈之间的虚线，然后就可以选择是否启动隐藏功能。</p>
<p>如果想让Dock栏在需要用到的时候立刻跳入到屏幕里，而不是滑进屏幕，可以在打开的终端窗口里输入以下命令：</p>
<blockquote>
<p>defaults write com.apple.dock autohide-time-moidifier -int 0;killall Dock</p>
</blockquote>
<p>如果想要恢复默认的滑动效果，可以打开终端窗口并运行以下命令：</p>
<blockquote>
<p>defaults write com.apple.dock autohide-time-moidifier -int 0;killall Dock</p>
</blockquote>
<p>好了，关于渐隐和弹出动画效果就说到这里了。在这里我列举了常用的功能，修改和恢复的代码。喜欢折腾的童鞋不防试一下。有什么问题欢迎在微IT留言。</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wordpress程序流程分析]]></title>
      <url>http://www.ibmer.info/wordpress-workflow.html</url>
      <content type="html"><![CDATA[<p>index.php 统一入口文件</p>
<p>包含wp-blog-heaer.php</p>
<p>包含wp-load.php</p>
<p>包含wp-config.php</p>
<p>数据库、语言包配置等</p>
<p>包含wp-setting.php</p>
<p>对各种运行环境做兼容性处理<br>定义路径常量等<br>载入公共函数，类<br>初始化公用对象（数据库等）<br>魔术引用处理</p>
<p>运行wp();</p>
<p>初始化<br>发送HTTP头信息<br>post （文章数据）查询，这里很关键，整个wp站的post 数据都是通过这里查询的。</p>
<p>包含template-loader.php</p>
<p>根据页面类型载入不同的模板页面文件</p>
<p>——————————————————————————————————————————</p>
<p>我们可以看出整个wp的程序结构 是很特别的，也不象一些普通的面向过程，也不是MVC，总之就是他自己的程序结构。</p>
<p>在模板前面的程序基本上都是公共处理，但是把post的查询的逻辑处理放在公共处理中。因为整个wp的页面基本上都有查询post。</p>
<p>其它的逻辑操作基本上是在模板中调用的（比如评论），所以它的模板并不是单纯的V,可以算是C+V。</p>
<p>1、Loads the WordPress environment:</p>
<p>加载流程：index.php -&gt; wp-blog-header.php -&gt; wp-load.php -&gt; wp-config.php -&gt; wp-settings.php</p>
<p>wp-load.php:根据wp-config.php文件是否在判断程序是否已安装，已安装则加载wp-config.php，未安装则提示安装</p>
<p>wp-config.php:记录了安装时的配置信息，包括数据库和程序的配置;并加载wp-settings.php</p>
<p>wp-settings.php:加载wp的函数和类库等环境</p>
<p>2、Loads the template:</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[手把手教你_如何找android应用的包名和启动activity ]]></title>
      <url>http://www.ibmer.info/find-android-activity.html</url>
      <content type="html"><![CDATA[<p>手把手教你_怎么找android应用的包名和启动activity</p>
<p>自动化测试中经常遇到这个问题，关于这个题目，方法众多，咱的目的是找个比较简单靠谱的：</p>
<p>方法一：</p>
<p>先进入cmd窗口，adb shell 后：</p>
<p>cd /data/data</p>
<p>ls</p>
<p>可以看到包名了吧，缺点很明显，必须root手机先</p>
<p>方法二：</p>
<p>先进入cmd窗口：</p>
<p>adb shell ps|findstr /i “keyword”</p>
<p>要搜哪个不就都行了，这个不用root手机了吧，嗯，这个还凑活</p>
<p>方法三：</p>
<p>在手机上启动了程序，usb连接电脑，然后启动android-sdk/tools/monitor.bat，device里面也就可以看到包名了吧。</p>
<p>上面三种方法查看包名都还凑活，可能稍微需要猜猜，不过都能达到目的，但是启动的任务窗口(activity)是啥呢，这几个方法都看不到。</p>
<p>得，不卖关子了，直接推出我的建议方法：</p>
<p>方法四：</p>
<p>首先在手机上运行一下程序，进入第一个界面就行了，别去多多操作了，usb连接电脑，进入cmd窗口运行：</p>
<p>adb shell “dumpsysusagestats”|findstr /i “keyword”</p>
<p>这个也不用root手机的，原本这个dumpsys usagestats 是用来记录打开了程序的哪些activity次数和时间一类信息的，这里可以用来直接看看你的这个程序开启了哪些activity。</p>
<p>你可以试试在cmd下执行下面的命令：</p>
<p>微信</p>
<p>adb shell “am start -n com.tencent.mm/com.tencent.mm.ui.LauncherUI”</p>
<p>手机QQ</p>
<p>adb shell “am start -n com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity”</p>
<p>微博</p>
<p>adb shell “am start -n com.sina.weibo/com.sina.weibo.SplashActivity”</p>
<p>QQ空间</p>
<p>adb shell “am start -n com.qzone/com.tencent.sc.activity.SplashActivity”</p>
<p>不过如果你可以直接看到程序项目中的AndroidManifest.xml或者可以直接问开发，那这篇文章你就压根不用看了。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信wechat AndroidManifest.xml]]></title>
      <url>http://www.ibmer.info/wechat-androidmanifest-xml.html</url>
      <content type="html"><![CDATA[<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;manifest android:versionCode="352" android:versionName="5.0.2" android:installLocation="0" package="com.tencent.mm"
 xmlns:android="http://schemas.android.com/apk/res/android"&gt;
 &lt;permission android:name="com.tencent.mm.oauth.permission.SEND" android:protectionLevel="signature" /&gt;
 &lt;permission android:name="com.tencent.mm.plugin.permission.WRITE" android:protectionLevel="signature" /&gt;
 &lt;permission android:name="com.tencent.mm.plugin.permission.READ" android:protectionLevel="signature" /&gt;
 &lt;permission android:name="com.tencent.mm.permission.MM_MESSAGE" android:protectionLevel="signature" /&gt;
 &lt;permission android:name="com.tencent.mm.permission.GET_QRCODE_INFO" android:protectionLevel="signature" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.oauth.permission.SEND" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.plugin.permission.READ" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.plugin.permission.WRITE" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.plugin.permission.SEND" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.permission.MM_MESSAGE" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.permission.GET_QRCODE_INFO" /&gt;
 &lt;uses-sdk android:minSdkVersion="7" android:targetSdkVersion="7" /&gt;
 &lt;uses-feature android:name="android.hardware.camera" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.camera.autofocus" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.bluetooth" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.location" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.location.gps" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.location.network" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.microphone" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.telephony" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.touchscreen" android:required="false" /&gt;
 &lt;uses-feature android:name="android.hardware.wifi" android:required="false" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
 &lt;uses-permission android:name="android.permission.CAMERA" /&gt;
 &lt;uses-permission android:name="android.permission.GET_TASKS" /&gt;
 &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
 &lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" /&gt;
 &lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /&gt;
 &lt;uses-permission android:name="android.permission.RECORD_AUDIO" /&gt;
 &lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
 &lt;uses-permission android:name="android.permission.READ_SMS" /&gt;
 &lt;uses-permission android:name="android.permission.VIBRATE" /&gt;
 &lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_SETTINGS" /&gt;
 &lt;uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" /&gt;
 &lt;uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.location.permission.SEND_VIEW" /&gt;
 &lt;uses-permission android:name="android.permission.BLUETOOTH" /&gt;
 &lt;uses-permission android:name="android.permission.BLUETOOTH_ADMIN" /&gt;
 &lt;uses-permission android:name="android.permission.BROADCAST_STICKY" /&gt;
 &lt;uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /&gt;
 &lt;uses-permission android:name="android.permission.CHANGE_WIFI_STATE" /&gt;
 &lt;application android:theme="@style/MMTheme.Basic" android:label="@string/app_name" android:icon="@drawable/icon" android:name="com.tencent.mm.app.MMApplication" android:largeHeap="true"&gt;
 &lt;uses-library android:name="com.google.android.maps" android:required="false" /&gt;
 &lt;uses-library android:name="com.sec.android.app.multiwindow" android:required="false" /&gt;
 &lt;meta-data android:name="com.sec.android.support.multiwindow" android:value="true" /&gt;
 &lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_W" android:value="632.0dip" /&gt;
 &lt;meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_H" android:value="598.0dip" /&gt;
 &lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_W" android:value="632.0dip" /&gt;
 &lt;meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_H" android:value="598.0dip" /&gt;
 &lt;activity android:label="@string/launcher_name" android:name="com.tencent.mm.ui.LauncherUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.MAIN" /&gt;
 &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
 &lt;category android:name="android.intent.category.MULTIWINDOW_LAUNCHER" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.LauncherUIProxy" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.DataTransferUI" android:launchMode="singleTask" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.LoginSelectorUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.LoginHistoryUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.LoginUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.AddAccountLoginUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.FacebookLoginUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByQQAuthUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByMobileRegUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.MobileVerifyUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByMobileVoiceVerifyUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByMobileVoiceVerifySelectUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByMobileSetPwdUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByMobileSetNickUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.SimpleLoginUI" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByFacebookSetPwdUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegByQQUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.RegSetInfoUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.LoginByMobileUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.LoginIndepPass" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.ChattingUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.ImageDownloadUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.AtSomeoneUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.HelperAddressUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.AppAttachDownloadUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.AppMsgEmojiDownloadUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.chatting.CustomSmileyPreviewUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.transmit.SelectConversationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.conversation.MainUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.MoreTabUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.AddressUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.SelectContactUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.FMessageConversationUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.GroupCardSelectUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.pluginapp.ContactSearchUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.RoomInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.GrantRoomUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.RoomRightUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.RoomInfoDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.SendContactCardUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.pluginapp.FindMoreFriendsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.pluginapp.AddMoreFriendsUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.conversation.BizConversationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.conversation.TConversationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.conversation.QConversationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.ui.transmit.MsgRetransmitUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.ui.transmit.SendAppMessageWrapperUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.ui.transmit.TaskRedirectUI" android:taskAffinity="com.tencent.mm.openapi.taskredirect" android:excludeFromRecents="true" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.player.MusicDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.profile.ContactInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.ModRemarkNameUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.ContactQZoneWebView" android:process=":tools" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.pluginapp.ContactSearchResultUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.MobileFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.QQFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.QQGroupUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.InviteFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.InviteRecommendChoiceUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.RecommendFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.InviteFacebookFriendsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.ContactsSyncUI" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.VIEW" /&gt;
 &lt;action android:name="com.tencent.mm.login.ACTION_LOGIN" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;data android:mimeType="vnd.android.cursor.item/vnd.com.tencent.mm.login" /&gt;
 &lt;data android:mimeType="vnd.android.cursor.item/vnd.com.tencent.mm.chatting.profile" /&gt;
 &lt;data android:mimeType="vnd.android.cursor.item/vnd.com.tencent.mm.plugin.sns.timeline" /&gt;
 &lt;data android:mimeType="vnd.android.cursor.item/vnd.com.tencent.mm.chatting.phonenum" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.SayHiEditUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.profile.BizExposeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsLanguageUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAboutMicroMsgUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAboutPrivacyUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAboutTimelineUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsPrivacyUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsPersonalInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsTWeiboUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAccountInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAliasUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsPluginsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsNotificationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SetTextSizeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsAboutSystemUI" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.DISPLAY_SETTINGS" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsRingtoneUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsModifyNameUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsModifyEmailAddrUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsModifyPasswordUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsActiveTimeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsNetStatUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.EditSignatureUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.qrcode.ShareToQQUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsPluginsNotifyUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SendFeedBackUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsFAQWebUI" android:process=":tools" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsChattingBackgroundUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsSelectBgUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.accountsync.ui.FacebookAuthUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.accountsync.ui.FacebookFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.accountsync.ui.ShowNonWeixinFriendUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingsEmojiUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.emoji.EmojiLocalUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.emoji.EmojiCustomUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.emoji.EmojiStoreUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.emoji.EmojiPaidUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.emoji.EmojiStoreDetailUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindmobile.BindMContactIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindmobile.BindMContactUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindmobile.BindMContactVerifyUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindmobile.BindMContactStatusUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindmobile.FindMContactIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.FindMContactAddUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.friend.FindMContactInviteUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindqq.BindQQUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindqq.VerifyQQUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.login.BindFacebookUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindqq.StartUnbindQQ" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.bindqq.SuccUnbindQQ" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMNewTaskTheme.Transparent" android:name="com.tencent.mm.ui.tools.NewTaskUI" android:launchMode="singleInstance" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.MultiStageCitySelectUI" android:exported="false" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.GET_ADRESS" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.CountryCodeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.CropImageNewUI" android:process=":tools" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.ImageGalleryUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.ShowImageUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.video.VideoPlayerUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.video.VideoDownloadUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottleWizardStep1" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottleWizardStep2" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottleBeachUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottleConversationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottleChattingUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.bottle.ui.BottlePersonalInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.traceroute.ui.NetworkDiagnoseIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.traceroute.ui.NetworkDiagnoseUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.traceroute.ui.NetworkDiagnoseReportUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.masssend.ui.MassSendSelectContactUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.masssend.ui.MassSendMsgUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.masssend.ui.MassSendHistoryUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.readerapp.ui.ReaderAppUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.readerapp.ui.ReaderAppIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.gallery.GestureGalleryUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.readerapp.ui.ReaderAppSubscribeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.location.ui.RedirectUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.location.ui.SosoMapUI" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.location.ui.GGmapUI" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.location.ui.RemarkUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsAnimation$SnsPostAnimationUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsUserUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsTimeLineUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsCommentDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsStrangerCommentDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsUploadUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustResize" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsGalleryUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.ArtistBrowseUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Transparent" android:name="com.tencent.mm.plugin.sns.ui.SnsBrowseUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMSnsTheme.Transparent" android:name="com.tencent.mm.plugin.sns.ui.SnsSelectContactDialog" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsMsgUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SettingSnsBackgroundUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.ArtistUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsUploadBrowseUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsCommentUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.SnsAddressUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsTagUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsTagDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsBlackDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsTagPartlyUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.contact.SnsTagContactListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsPermissionUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:icon="@drawable/icon" android:name="com.tencent.mm.ui.tools.ShareImgUI" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter android:label="@string/app_share_to_weixin"&gt;
 &lt;action android:name="android.intent.action.SEND" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;data android:mimeType="image/*" /&gt;
 &lt;data android:mimeType="video/*" /&gt;
 &lt;data android:mimeType="application/*" /&gt;
 &lt;data android:mimeType="text/*" /&gt;
 &lt;/intent-filter&gt;
 &lt;intent-filter android:label="@string/app_share_to_weixin"&gt;
 &lt;action android:name="android.intent.action.SEND_MULTIPLE" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;data android:mimeType="image/*" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:icon="@drawable/share_to_time_line_icon" android:name="com.tencent.mm.ui.tools.ShareToTimeLineUI" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter android:label="@string/app_share_to_timeline"&gt;
 &lt;action android:name="android.intent.action.SEND" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;data android:mimeType="image/*" /&gt;
 &lt;/intent-filter&gt;
 &lt;intent-filter android:label="@string/app_share_to_timeline"&gt;
 &lt;action android:name="android.intent.action.SEND_MULTIPLE" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;data android:mimeType="image/*" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatRecoverCheckUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatUploadSelectUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatUploadingUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatRecoveringUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakchatSetCryptUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakchatSelcetCryptUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.backup.ui.BakChatInputCryptUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.securityaccount.SecurityAccountIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.securityaccount.SecurityAccountVerifyUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.securityaccount.MySafeDeviceListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.securityaccount.ModSafeDeviceNameUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.securityaccount.BindSafeDeviceUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;receiver android:name="com.tencent.mm.booter.NotifyReceiver" android:exported="false"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.SHOOT_NETSCENE" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;receiver android:name="com.tencent.mm.sandbox.monitor.CrashUploadAlarmReceiver" android:exported="false" /&gt;
 &lt;receiver android:name="com.tencent.mm.booter.MountReceiver"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.MEDIA_MOUNTED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_EJECT" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_UNMOUNTED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_SHARED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_SCANNER_STARTED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_SCANNER_FINISHED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_REMOVED" /&gt;
 &lt;action android:name="android.intent.action.MEDIA_BAD_REMOVAL" /&gt;
 &lt;data android:scheme="file" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;service android:name="com.tencent.mm.booter.NotifyReceiver$NotifyService" /&gt;
 &lt;service android:name="com.tencent.mm.modelfriend.AddrBookObserver$AddrBookService" /&gt;
 &lt;receiver android:name="com.tencent.mm.booter.BluetoothReceiver"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.media.SCO_AUDIO_STATE_CHANGED" /&gt;
 &lt;action android:name="android.media.ACTION_SCO_AUDIO_STATE_UPDATED" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;receiver android:name="com.tencent.mm.booter.MMReceivers$ToolsProcessReceiver" android:exported="false" android:process=":tools"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.intent.ACTION_START_TOOLS_PROCESS" /&gt;
 &lt;action android:name="com.tencent.mm.intent.ACTION_KILL_TOOLS_PROCESS" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;service android:name="com.tencent.mm.booter.CoreService" android:process=":push" /&gt;
 &lt;service android:name="com.tencent.mm.booter.cache.CacheService" android:process=":push" /&gt;
 &lt;receiver android:name="com.tencent.mm.booter.MMReceivers$BootReceiver" android:process=":push"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.BOOT_COMPLETED" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;receiver android:name="com.tencent.mm.booter.MMReceivers$ConnectionReceiver" android:process=":push"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.net.conn.CONNECTIVITY_CHANGE" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;receiver android:name="com.tencent.mm.booter.MMReceivers$AlarmReceiver" android:process=":push" /&gt;
 &lt;receiver android:name="com.tencent.mm.jni.platformcomm.Alarm" android:exported="false" android:process=":push" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.base.stub.MMPluginProvider" android:writePermission="com.tencent.mm.plugin.permission.WRITE" android:authorities="com.tencent.mm.sdk.plugin.provider" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.base.stub.RContactDBProvider" android:readPermission="com.tencent.mm.plugin.permission.READ" android:writePermission="com.tencent.mm.plugin.permission.WRITE" android:authorities="com.tencent.mm.sdk.contact.provider" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.base.stub.RConversationDBProvider" android:readPermission="com.tencent.mm.plugin.permission.READ" android:writePermission="com.tencent.mm.plugin.permission.WRITE" android:authorities="com.tencent.mm.sdk.conversation.provider" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.base.stub.RMsgInfoDBProvider" android:readPermission="com.tencent.mm.plugin.permission.READ" android:writePermission="com.tencent.mm.plugin.permission.WRITE" android:authorities="com.tencent.mm.sdk.msginfo.provider" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.base.stub.WXEntryActivity" android:exported="true" android:excludeFromRecents="true" android:launchMode="singleTop" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.base.stub.WXPayEntryActivity" android:exported="true" android:excludeFromRecents="true" android:launchMode="singleTop" /&gt;
 &lt;receiver android:name="com.tencent.mm.plugin.base.stub.WXEntryActivity$EntryReceiver"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.plugin.openapi.Intent.ACTION_HANDLE_APP_REGISTER" /&gt;
 &lt;action android:name="com.tencent.mm.plugin.openapi.Intent.ACTION_HANDLE_APP_UNREGISTER" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.plugin.base.stub.UIEntryStub" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.base.stub.OAuthUI" android:process=":tools" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.openapi.AddAppUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.openapi.AppProfileUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.webwx.ui.WebWXLogoutUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.webwx.ui.WebWeiXinIntroductionUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.voicesearch.VoiceSearchResultUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.voicesearch.SearchConversationResultUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:theme="@android:style/Theme.Translucent" android:name="com.tencent.mm.plugin.voicereminder.ui.RemindDialog" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.qrcode.QRCodeIntroductionWebViewUI" android:process=":tools" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustPan" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.ui.qrcode.GetQRCodeInfoUI" android:permission="com.tencent.mm.permission.GET_QRCODE_INFO" android:exported="false" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.VIEW" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;category android:name="android.intent.category.BROWSABLE" /&gt;
 &lt;data android:scheme="http" android:host="weixin.qq.com" android:pathPrefix="/r/" /&gt;
 &lt;/intent-filter&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.VIEW" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;category android:name="android.intent.category.BROWSABLE" /&gt;
 &lt;data android:scheme="weixin" android:host="qr" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SelfQRCodeUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden|adjustPan" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.qrcode.ShareMicroMsgChoiceUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.qrcode.ShowQRCodeStep1UI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.GameCenterUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.GameDetailInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.AuthorizedGameListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.GameSettingsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.GameRankUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.game.ui.GameMessageUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.plugin.game.ui.GameMD5CheckUI" android:exported="false" android:taskAffinity="com.tencent.mm.game.md5check" android:excludeFromRecents="true" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.game.md5check" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingDeleteAccountAgreementUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingDeleteAccountInputPassUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.setting.SettingDeleteAccountUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;service android:name="com.tencent.mm.modelfriend.AccountAuthenticatorService" android:exported="true"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.accounts.AccountAuthenticator" /&gt;
 &lt;/intent-filter&gt;
 &lt;meta-data android:name="android.accounts.AccountAuthenticator" android:resource="@xml/authenticator" /&gt;
 &lt;/service&gt;
 &lt;service android:name="com.tencent.mm.modelfriend.ContactsSyncService" android:exported="true"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.content.SyncAdapter" /&gt;
 &lt;/intent-filter&gt;
 &lt;meta-data android:name="android.content.SyncAdapter" android:resource="@xml/sync_contacts" /&gt;
 &lt;meta-data android:name="android.provider.CONTACTS_STRUCTURE" android:resource="@xml/contacts" /&gt;
 &lt;/service&gt;
 &lt;activity android:name="com.tencent.mm.plugin.nearby.ui.NearbyFriendsIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.nearby.ui.NearbyFriendShowSayHiUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.nearby.ui.NearbyFriendsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.nearby.ui.NearbyPersonalInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.nearby.ui.NearbySayHiListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.brandservice.ui.BrandServiceIndexUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.brandservice.ui.SearchOrRecommendBizUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.video.VideoRecorderUI" android:screenOrientation="portrait" android:configChanges="keyboard|keyboardHidden"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.VIDEO" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:name="com.tencent.mm.ui.video.VideoRecorderPreviewUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakeSayHiListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.shakemedia.ui.ShakeMusicPlayerUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakeReportUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakePhotoViewerUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakeTranImgGalleryUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakePersonalInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakeTranImgIntroUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.ui.ShakeItemListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.shake.shakemedia.ui.ShakeTVDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@android:style/Theme.NoTitleBar.Fullscreen" android:name="com.tencent.mm.plugin.voip.ui.VideoActivity" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@android:style/Theme.Translucent" android:name="com.tencent.mm.ui.base.MMSuperAlert" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@android:style/Theme.Translucent" android:name="com.tencent.mm.plugin.voip.ui.InviteRemindDialog" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@android:style/Theme.NoTitleBar.Fullscreen" android:name="com.tencent.mm.plugin.voip.audio.ui.VoipAudioUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.FavoriteIndexUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="adjustPan" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.favorite.ui.FavOpenApiEntry" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.plugin.favorite.ui.FavTipsUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.detail.FavoriteTextDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.detail.FavoriteImgDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.detail.FavoriteFileDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.detail.FavoriteVoiceDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.detail.FavoriteMusicDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.favorite.ui.post.FavPostTextUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.plugin.favorite.ui.post.FavPostVoiceUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqsync.ui.QQSyncUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.gallery.ui.GalleryUI" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.gallery.ui.ImagePreviewUI" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.gallery.ui.AlbumPreviewUI" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/MMTheme.Launcher" android:name="com.tencent.mm.plugin.gallery.ui.GalleryEntryUI" android:process=":tools" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.radar.ui.RadarSearchUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsSingleTextViewUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.sns.ui.SnsLongMsgUI" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtContentProviderBase" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.ExtContentProviderBase" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderMsg" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.message" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderSearchContact" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.SearchContact" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderNearBy" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.NearBy" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderSNS" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.SNS" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderAccountSync" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.AccountSync" /&gt;
 &lt;provider android:name="com.tencent.mm.plugin.ext.provider.ExtControlProviderEntry" android:readPermission="com.tencent.mm.ext.permission.READ" android:writePermission="com.tencent.mm.ext.permission.WRITE" android:authorities="com.tencent.mm.plugin.ext.entry" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.RoomInfoShareQrUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.ComposeUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.MailAddrListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.ReadMailUI" android:process=":tools" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.MailAddrProfileUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.MailWebViewUI" android:process=":tools" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.CompressPreviewUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.qqmail.ui.AttachDownloadPage" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.qqmail.stub.QQMailStubProxyUI" /&gt;
 &lt;service android:name="com.tencent.mm.plugin.qqmail.stub.QQMailStubService" android:exported="false" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.jsapi.ShareToQQWeiboUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.WebViewUI" android:process=":tools" android:screenOrientation="sensor" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.webview.stub.WebViewStubProxyUI" /&gt;
 &lt;service android:name="com.tencent.mm.plugin.webview.stub.WebViewStubService" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.scanner.ui.BaseScanUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.scanner.ui.ProductUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.scanner.ui.VcardContactUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.sandbox.updater.AppUpdaterUI" android:process=":sandbox" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;service android:name="com.tencent.mm.sandbox.monitor.ExceptionMonitorService" android:process=":sandbox" /&gt;
 &lt;activity android:theme="@style/MMTheme.Talkroom" android:name="com.tencent.mm.plugin.talkroom.ui.TalkRoomUI" android:launchMode="singleTask" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;service android:name="com.tencent.mm.plugin.talkroom.component.TalkRoomService" /&gt;
 &lt;receiver android:name="com.tencent.mm.plugin.talkroom.model.TalkRoomReceiver" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.whatsnew.ui.WhatsNewActivity" android:process=":tools" android:screenOrientation="portrait" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:label="@string/app_name" android:name="com.tencent.mm.plugin.shoot.ui.ShootMainUI" android:process=":tools" android:launchMode="singleTask" android:screenOrientation="portrait" android:configChanges="keyboard|keyboardHidden|orientation"&gt;
 &lt;intent-filter /&gt;
 &lt;/activity&gt;
 &lt;activity android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen" android:name="com.tencent.mm.plugin.shoot.ui.ShootFlashUI" android:process=":tools" android:launchMode="singleTask" android:screenOrientation="portrait" android:configChanges="keyboard|keyboardHidden|orientation" /&gt;
 &lt;receiver android:name="com.tencent.mm.plugin.shoot.remote.RemoteNetSceneMgr$RespReceiver" android:permission="com.tencent.mm.permission.SHOOT_STUB_REQ_RESP" android:process=":tools"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.SHOOT_STUB_RESP" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;receiver android:name="com.tencent.mm.plugin.shootstub.communicate.ReqReceiver" android:permission="com.tencent.mm.permission.SHOOT_STUB_REQ_RESP"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.SHOOT_STUB_REQ" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;activity android:name="com.tencent.mm.plugin.mall.ui.MallIndexUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.mall.ui.MallRechargeUI" android:configChanges="keyboardHidden|orientation" android:windowAnimationStyle="@null" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletManageUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletInputCardIDUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateAlwaysVisible" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.WalletLauncherUI" android:permission="com.tencent.mm.plugin.permission.READ" android:exported="false" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.action.WALLET_PAY" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.WalletPayUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletCardElmentUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateHidden" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletVerifyCodeUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletSetPasswordUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateAlwaysVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletPwdConfirmUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateAlwaysVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletOrderListUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletOrderInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletPasswordSettingUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.WalletCheckPwdUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateAlwaysVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletBankcardDetailUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletCardSelectUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletForgotPwdUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.WalletBrandUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.WalletIapUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:theme="@style/Theme.Transparent" android:name="com.tencent.mm.plugin.wallet.ui.OrderHandlerUI" android:launchMode="singleTop" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletResetInfoUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletAddAddressUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletSelectAddrUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.MultiRcptSelectUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.plugin.wallet.ui.WalletChangeBankcardUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;activity android:name="com.tencent.mm.pluginsdk.ui.tools.FileExplorerUI" android:configChanges="keyboardHidden|orientation" /&gt;
 &lt;service android:name="com.tencent.mm.pluginsdk.model.downloader.FileDownloadManger$FileDownloadService" /&gt;
 &lt;receiver android:name="com.tencent.mm.pluginsdk.model.downloader.FileDownloadManger$FileDownloadReceiver"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.DOWNLOAD_COMPLETE" /&gt;
 &lt;action android:name="android.intent.action.DOWNLOAD_NOTIFICATION_CLICKED" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;activity android:name="com.tencent.mm.ui.tools.MMTextInputUI" android:configChanges="keyboardHidden|orientation" android:windowSoftInputMode="stateVisible|adjustPan" /&gt;
 &lt;receiver android:name="com.tencent.mm.compatible.audio.MMRemoteController$Receiver"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="android.intent.action.MEDIA_BUTTON" /&gt;
 &lt;/intent-filter&gt;
 &lt;/receiver&gt;
 &lt;activity android:theme="@android:style/Theme.Translucent" android:name="com.tencent.mm.plugin.gwallet.GWalletUI"&gt;
 &lt;intent-filter&gt;
 &lt;action android:name="com.tencent.mm.gwallet.ACTION_PAY_REQUEST" /&gt;
 &lt;action android:name="com.tencent.mm.gwallet.ACTION_QUERY_REQUEST" /&gt;
 &lt;category android:name="android.intent.category.DEFAULT" /&gt;
 &lt;/intent-filter&gt;
 &lt;/activity&gt;
 &lt;provider android:name="com.tencent.mm.plugin.gwallet.GWalletQueryProvider" android:permission="com.tencent.mm.plugin.permission.READ" android:authorities="com.tencent.mm.plugin.gwallet.queryprovider" /&gt;
 &lt;/application&gt;
 &lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
 &lt;uses-permission android:name="android.permission.MANAGE_ACCOUNTS" /&gt;
 &lt;uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" /&gt;
 &lt;uses-permission android:name="android.permission.READ_SYNC_SETTINGS" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" /&gt;
 &lt;permission android:name="com.tencent.mm.ext.permission.READ" android:protectionLevel="signatureOrSystem" /&gt;
 &lt;permission android:name="com.tencent.mm.ext.permission.WRITE" android:protectionLevel="signatureOrSystem" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.ext.permission.READ" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.ext.permission.WRITE" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.permission.SHOOT_STUB_REQ_RESP" /&gt;
 &lt;permission android:name="com.tencent.mm.permission.SHOOT_STUB_REQ_RESP" android:protectionLevel="signature" /&gt;
 &lt;uses-permission android:name="com.tencent.mm.gwallet.BILLING" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /&gt;
 &lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;
 &lt;uses-permission android:name="com.android.vending.BILLING" /&gt;
 &lt;/manifest&gt;</pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
            <tag> 微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过AddonSdk编写firefox插件addon,helloworld]]></title>
      <url>http://www.ibmer.info/firefox-addon-helloworld.html</url>
      <content type="html"><![CDATA[<p>通过AddonSdk编写firefox插件addon</p>
<p><a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials/Getting_started" target="_blank" rel="external">https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials/Getting_started</a></p>
<article id="wikiArticle">This tutorial walks through creating a simple add-on using the SDK.<br><br>## Prerequisites<br><br>To create add-ons for Firefox using the SDK, you’ll first need to follow the instructions to <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials/Installation" target="_blank" rel="external">install and activate the SDK</a>. Once you’ve done that, you’ll be looking at a command prompt.<br><br>## Initializing an empty add-on<br><br>In the command prompt, create a new directory. The directory doesn’t have to be under the SDK root: you can create it anywhere you like. Navigate to it, type <code>cfx init</code>, and hit enter:<br><pre class="language-html">mkdir my-addon<br>cd my-addon<br>cfx init<br></pre><br>You’ll see some output like this:<br><pre class="language-html"><em> lib directory created
</em> data directory created<br><em> test directory created
</em> doc directory created<br><em> README.md written
</em> package.json written<br><em> test/test-main.js written
</em> lib/main.js written<br><em> doc/main.md written<br>Your sample add-on is now ready for testing:<br>try “cfx test” and then “cfx run”. Have fun!”<br></em></pre><br><br>## Implementing the add-on<br><br>Now you can write the add-on’s code, which goes in the “main.js” file in your “lib” directory. This file was created for you in the previous step. Open it and add the following code:<br><br>    <span class="token keyword">var</span> buttons <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">‘sdk/ui/button/action’</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> tabs <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/tabs”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><br>    <span class="token keyword">var</span> button <span class="token operator">=</span> buttons<span class="token punctuation">.</span><span class="token function">ActionButton<span class="token punctuation">(</span></span><span class="token punctuation">{</span><br>      id<span class="token punctuation">:</span> <span class="token string">“mozilla-link”</span><span class="token punctuation">,</span><br>      label<span class="token punctuation">:</span> <span class="token string">“Visit Mozilla”</span><span class="token punctuation">,</span><br>      icon<span class="token punctuation">:</span> <span class="token punctuation">{</span><br>        <span class="token string">“16”</span><span class="token punctuation">:</span> <span class="token string">“./icon-16.png”</span><span class="token punctuation">,</span><br>        <span class="token string">“32”</span><span class="token punctuation">:</span> <span class="token string">“./icon-32.png”</span><span class="token punctuation">,</span><br>        <span class="token string">“64”</span><span class="token punctuation">:</span> <span class="token string">“./icon-64.png”</span><br>      <span class="token punctuation">}</span><span class="token punctuation">,</span><br>      onClick<span class="token punctuation">:</span> handleClick<br>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><br>    <span class="token keyword">function</span> <span class="token function">handleClick<span class="token punctuation">(</span></span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span><br>      tabs<span class="token punctuation">.</span><span class="token function">open<span class="token punctuation">(</span></span><span class="token string">“<a href="http://www.mozilla.org/" target="_blank" rel="external">http://www.mozilla.org/</a>“</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token punctuation">}</span><code>&lt;/pre&gt;
    Save the file.

    Next, save these three icon files to the &quot;data&quot; directory:
    &lt;table class=&quot;standard-table&quot;&gt;
    &lt;tbody&gt;
    &lt;tr&gt;
    &lt;td&gt;![](https://mdn.mozillademos.org/files/7635/icon-16.png)&lt;/td&gt;
    &lt;td&gt;icon-16.png&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;![](https://mdn.mozillademos.org/files/7637/icon-32.png)&lt;/td&gt;
    &lt;td&gt;icon-32.png&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;![](https://mdn.mozillademos.org/files/7639/icon-64.png)&lt;/td&gt;
    &lt;td&gt;icon-64.png&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;div class=&quot;note&quot;&gt;

    Note that this example uses the [action button](https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs/ui_button_action) module, which is only available from Firefox 29 onwards. If you&#39;re still on an earlier version on Firefox, this code is equivalent, except that the icon will appear in the bottom-right of the browser window:
    &lt;pre class=&quot;brush: js  language-js&quot; data-number=&quot;&quot;&gt;</code><span class="token keyword">var</span> widgets <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/widget”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> tabs <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/tabs”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> widget <span class="token operator">=</span> widgets<span class="token punctuation">.</span><span class="token function">Widget<span class="token punctuation">(</span></span><span class="token punctuation">{</span><br>      id<span class="token punctuation">:</span> <span class="token string">“mozilla-link”</span><span class="token punctuation">,</span><br>      label<span class="token punctuation">:</span> <span class="token string">“Mozilla website”</span><span class="token punctuation">,</span><br>      contentURL<span class="token punctuation">:</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/self”</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">url<span class="token punctuation">(</span></span><span class="token string">“icon-16.png”</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br>      onClick<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br>        tabs<span class="token punctuation">.</span><span class="token function">open<span class="token punctuation">(</span></span><span class="token string">“<a href="http://www.mozilla.org/" target="_blank" rel="external">http://www.mozilla.org/</a>“</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>      <span class="token punctuation">}</span><br>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><code>&lt;/pre&gt;
    &lt;/div&gt;
    Back at the command prompt, type:
    &lt;pre class=&quot;language-html&quot;&gt;cfx run
    &lt;/pre&gt;
    This is the SDK command to run a new instance of Firefox with your add-on installed. When Firefox launches, in the top-right corner of the browser you&#39;ll see an icon with the Firefox logo. Click the icon, and a new tab will open with [http://www.mozilla.org/](http://www.mozilla.org/) loaded into it.
    &lt;div class=&quot;note&quot;&gt;

    You might see an error message like this when you type cfx run:
    &lt;pre id=&quot;comment_text_0&quot; class=&quot;bz_comment_text language-html&quot;&gt;A given cfx option has an inappropriate value:
      ZIP does not support timestamps before 1980&lt;/pre&gt;
    If so, you&#39;ve run into [bug 1005412](https://bugzilla.mozilla.org/show_bug.cgi?id=1005412), meaning that the icon files you downloaded are given a timestamp of 1970\. Until this bug is fixed, the workaround is to use the [</code>touch<code>](http://www.linfo.org/touch.html) command to update the timestamps:
    &lt;pre class=&quot;language-html&quot;&gt;touch icon-16.png&lt;/pre&gt;
    &lt;/div&gt;
    That&#39;s all this add-on does. It uses two SDK modules: the [action button](https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs/ui_button_action) module, which enables you to add buttons to the browser, and the [tabs](https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/tabs) module, which enables you to perform basic operations with tabs. In this case, we&#39;ve created a button whose icon is the Firefox icon, and added a click handler that loads the Mozilla home page in a new tab.

    ![](https://mdn.mozillademos.org/files/7643/mozilla-button.png)Try editing this file. For example, we could change the page that gets loaded:
    &lt;pre class=&quot;brush: js  language-js&quot; data-number=&quot;&quot;&gt;</code><span class="token keyword">var</span> buttons <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">‘sdk/ui/button/action’</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> tabs <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/tabs”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><br>    <span class="token keyword">var</span> button <span class="token operator">=</span> buttons<span class="token punctuation">.</span><span class="token function">ActionButton<span class="token punctuation">(</span></span><span class="token punctuation">{</span><br>      id<span class="token punctuation">:</span> <span class="token string">“mozilla-link”</span><span class="token punctuation">,</span><br>      label<span class="token punctuation">:</span> <span class="token string">“Visit Mozilla”</span><span class="token punctuation">,</span><br>      icon<span class="token punctuation">:</span> <span class="token punctuation">{</span><br>        <span class="token string">“16”</span><span class="token punctuation">:</span> <span class="token string">“./icon-16.png”</span><span class="token punctuation">,</span><br>        <span class="token string">“32”</span><span class="token punctuation">:</span> <span class="token string">“./icon-32.png”</span><span class="token punctuation">,</span><br>        <span class="token string">“64”</span><span class="token punctuation">:</span> <span class="token string">“./icon-64.png”</span><br>      <span class="token punctuation">}</span><span class="token punctuation">,</span><br>      onClick<span class="token punctuation">:</span> handleClick<br>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><br>    <span class="token keyword">function</span> <span class="token function">handleClick<span class="token punctuation">(</span></span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span><br>      tabs<span class="token punctuation">.</span><span class="token function">open<span class="token punctuation">(</span></span><span class="token string">“<a href="https://developer.mozilla.org/" target="_blank" rel="external">https://developer.mozilla.org/</a>“</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token punctuation">}</span><code>&lt;/pre&gt;
    &lt;div class=&quot;note&quot;&gt;

    Note that this example uses the [action button](https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs/ui_button_action) module, which is only available from Firefox 29 onwards. If you&#39;re still on an earlier version on Firefox, this code is equivalent, except that the icon will appear in the bottom-right of the browser window:
    &lt;pre class=&quot;brush: js  language-js&quot; data-number=&quot;&quot;&gt;</code><span class="token keyword">var</span> widgets <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/widget”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> tabs <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/tabs”</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token keyword">var</span> widget <span class="token operator">=</span> widgets<span class="token punctuation">.</span><span class="token function">Widget<span class="token punctuation">(</span></span><span class="token punctuation">{</span><br>      id<span class="token punctuation">:</span> <span class="token string">“mozilla-link”</span><span class="token punctuation">,</span><br>      label<span class="token punctuation">:</span> <span class="token string">“Mozilla website”</span><span class="token punctuation">,</span><br>      contentURL<span class="token punctuation">:</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">“sdk/self”</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">url<span class="token punctuation">(</span></span><span class="token string">“icon-16.png”</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br>      onClick<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br>        tabs<span class="token punctuation">.</span><span class="token function">open<span class="token punctuation">(</span></span><span class="token string">“<a href="http://developer.mozilla.org/" target="_blank" rel="external">http://developer.mozilla.org/</a>“</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>      <span class="token punctuation">}</span><br>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><br><br>At the command prompt, execute <code>cfx run</code> again. This time clicking it takes you to <a href="https://developer.mozilla.org/" target="_blank" rel="external">https://developer.mozilla.org/</a>.<br><br>## Packaging the add-on<br><br>When you’ve finished the add-on and are ready to distribute it, you’ll need to package it as an XPI file. This is the installable file format for Firefox add-ons. You can distribute XPI files yourself or publish them to <a href="https://addons.mozilla.org" target="_blank" rel="external">https://addons.mozilla.org</a> so other users can download and install them.<br><br>To build an XPI, just execute the command <code>cfx xpi</code> from the add-on’s directory:<br><pre class="language-html">cfx xpi<br></pre><br>You should see a message like:<br><pre class="language-html">Exporting extension to my-addon.xpi.<br></pre><br>To test that this worked, try installing the XPI file in your own Firefox installation. You can do this by pressing the Ctrl+O key combination (Cmd+O on Mac) from within Firefox, or selecting the “Open” item from Firefox’s “File” menu. This will bring up a file selection dialog: navigate to the “my-addon.xpi” file, open it and follow the prompts to install the add-on.<br><br>## Summary<br><br>In this tutorial we’ve built and packaged an add-on using three commands:

   <code>cfx init</code> to initialize an empty add-on template<br><em>   <code>cfx run</code> to run a new instance of Firefox with the add-on installed, so we can try it out
</em>   <code>cfx xpi</code> to package the add-on into an XPI file for distribution<br>These are the three main commands you’ll use when developing SDK add-ons. There’s comprehensive <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tools/cfx" target="_blank" rel="external">reference documentation</a> covering all the commands you can use and all the options they take.<br><br>The add-on code itself uses two SDK modules, <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs/ui_button_action" target="_blank" rel="external">action button</a> and <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/tabs" target="_blank" rel="external">tabs</a>. There’s reference documentation for all the <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs" target="_blank" rel="external">high-level</a> and <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs" target="_blank" rel="external">low-level</a> APIs in the SDK.<br><br>## What’s next?<br><br>To get a feel for some of the things you can do with the SDK APIs, try working through some of the <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials" target="_blank" rel="external">tutorials</a>.<br><br>## Advanced techniques<br><br>### Overriding the built-in modules<br><br>The SDK modules you use to implement your add-on are built into Firefox. When you run or package an add-on using <code>cfx run</code> or <code>cfx xpi</code>, the add-on will use the versions of the modules in the version of Firefox that hosts it.<br><br>As an add-on developer, this is usually what you want. But if you’re developing the SDK modules themselves, of course, it isn’t. In this case it’s assumed that you have checked out the SDK from its <a href="https://github.com/mozilla/addon-sdk" target="_blank" rel="external">GitHub repo</a> and will have run the <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials/Installation" target="_blank" rel="external">bin/activate</a> script from the root of your checkout.<br><br>Then when you invoke <code>cfx run</code> or <code>cfx xpi</code>, you pass the “-o” option:<br><pre class="language-html">cfx run -o<br></pre><br>This instructs cfx to use the local copies of the SDK modules, not the ones in Firefox.<br><br>### Developing without cfx run<br><br>Because <code>cfx run</code> restarts the browser each time you invoke it, it can be a little cumbersome if you are making very frequent changes to an add-on. An alternative development model is to use the <a href="https://addons.mozilla.org/en-US/firefox/addon/autoinstaller/" target="_blank" rel="external">Extension Auto-Installer</a> add-on: this listens for new XPI files on a specified port and installs them automatically. That way you can test new changes without needing to restart the browser:<br><br><em>   make a change to your add-on
</em>   run cfx xpi<br>*   post the add-on to the port specified<br>You could even automate this workflow with a simple script. For example:<br><pre class="language-html">while true ; do cfx xpi ; wget –post-file=codesy.xpi <a href="http://localhost:8888/" target="_blank" rel="external">http://localhost:8888/</a> ; sleep 5 ; done<br></pre><br>Note that the logging level defined for the console is different when you use this method, compared to the logging level used when an add-on is run using <code>cfx run</code>. This means that if you want to see output from <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tutorials/Logging" target="_blank" rel="external"><code>console.log()</code></a> messages, you’ll have to tweak a setting. See the documentation on <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tools/console#Logging_Levels" target="_blank" rel="external">logging levels</a> for the details on this.<br><br></article>

<h3 id="Attachments"><a href="#Attachments" class="headerlink" title="Attachments"></a>Attachments</h3><table id="page-attachments-table" cellspacing="0" cellpadding="0"><br><thead><br><tr><br><th>File</th><br><th>Size</th><br><th>Date</th><br><th>Attached by</th><br></tr><br></thead><br><tbody><br><tr data-revision-id="7935" data-attachment-id="7635"><br><td class="attachment-name-cell"><a href="https://mdn.mozillademos.org/files/7635/icon-16.png" target="_blank" rel="external">icon-16</a></td><br><td>1657 bytes</td><br><td>2014-04-08 15:48:41</td><br><td><a href="https://developer.mozilla.org/en-US/profiles/wbamberg" target="_blank" rel="external">wbamberg</a></td><br></tr><br><tr data-revision-id="7937" data-attachment-id="7637"><br><td class="attachment-name-cell"><a href="https://mdn.mozillademos.org/files/7637/icon-32.png" target="_blank" rel="external">icon-32</a></td><br><td>3457 bytes</td><br><td>2014-04-08 15:48:49</td><br><td><a href="https://developer.mozilla.org/en-US/profiles/wbamberg" target="_blank" rel="external">wbamberg</a></td><br></tr><br><tr data-revision-id="7939" data-attachment-id="7639"><br><td class="attachment-name-cell"><a href="https://mdn.mozillademos.org/files/7639/icon-64.png" target="_blank" rel="external">icon-64</a></td><br><td>8635 bytes</td><br><td>2014-04-08 15:48:56</td><br><td><a href="https://developer.mozilla.org/en-US/profiles/wbamberg" target="_blank" rel="external">wbamberg</a></td><br></tr><br><tr data-revision-id="7943" data-attachment-id="7643"><br><td class="attachment-name-cell"><a href="https://mdn.mozillademos.org/files/7643/mozilla-button.png" target="_blank" rel="external">mozilla-button</a></td><br><td>31239 bytes</td><br><td>2014-04-08 17:18:00</td><br><td><a href="https://developer.mozilla.org/en-US/profiles/wbamberg" target="_blank" rel="external">wbamberg</a></td><br></tr><br></tbody><br></table>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[手机使用 图片表情，Emoji表情符号]]></title>
      <url>http://www.ibmer.info/emoji.html</url>
      <content type="html"><![CDATA[<p>一 什么是Emoji</p>
<p>emoji就是表情符号；词义来自日语（えもじ，e-moji，moji在日语中的含义是字符）<br>表情符号现已普遍应用于手机短信和网络聊天软件。<br>emoji表情符号，在外国的手机短信里面已经是很流行使用的一种表情。</p>
<p>在国内的微信和微信中也被采用。</p>
<p>Emoji 全编码表：<br><a href="http://punchdrunker.github.com/iOSEmoji/table_html/flower.html" target="_blank" rel="external">http://punchdrunker.github.com/iOSEmoji/table_html/flower.html</a></p>
<p><a href="http://code.iamcal.com/php/emoji/" target="_blank" rel="external">http://code.iamcal.com/php/emoji/</a></p>
<p>[php]</p>
<p>&lt;?php<br>include(‘emoji.php’);</p>
<h1 id="browser-sniffing-tells-us-that-a-docomo-phone"><a href="#browser-sniffing-tells-us-that-a-docomo-phone" class="headerlink" title="browser sniffing tells us that a docomo phone"></a>browser sniffing tells us that a docomo phone</h1><h1 id="submitted-this-text"><a href="#submitted-this-text" class="headerlink" title="submitted this text"></a>submitted this text</h1><p>$clean_text = emoji_docomo_to_unified($_POST[message]);</p>
<p>…</p>
<h1 id="now-we-want-to-show-it-in-a-desktop-browser"><a href="#now-we-want-to-show-it-in-a-desktop-browser" class="headerlink" title="now we want to show it in a desktop browser"></a>now we want to show it in a desktop browser</h1><p>$html = emoji_unified_to_html($clean_text);<br>?&gt;<br>[/php]</p>
<p>对于公共账号，其实也是一样做的。</p>
<h3 id="公众帐号怎样向用户发送emoji表情"><a href="#公众帐号怎样向用户发送emoji表情" class="headerlink" title="公众帐号怎样向用户发送emoji表情"></a>公众帐号怎样向用户发送emoji表情</h3><p>上面已经给出了emoji表情的unified unicode代码对比表，那么这些代码要怎样使用，才干发送出相应的emoji表情呢？假设你仅仅是简单的像使用QQ表情代码那样，直接在文本消息的Content里写emoji表情代码，一定是会原样显示的。</p>
<p>这里须要用到一个Java方法做转换处理，方法的代码例如以下：</p>
<p>[java]<br>/**</p>
<ul>
<li>emoji表情转换(hex -&gt; utf-16)<br>*</li>
<li>@param hexEmoji</li>
<li>@return<br>*/<br>public static String emoji(int hexEmoji) {<br>return String.valueOf(Character.toChars(hexEmoji));<br>}</li>
</ul>
<p>[/java]</p>
<p>方法说明：比如，“自行车”的unicode编码值为U+1F6B2，假设我们要在程序代码中使用“自行车”这个emoji表情，须要这样使用：</p>
<p>String bike = String.valueOf(Character.toChars(0x1F6B2));<br>事实上前面那个emoji()方法就是对上面这行代码做了个简单的封装而以。如今知道怎样使用emoji表情代码了吧，事实上就是将代码表中的U+替换为0x，再调用emoji方法进行转换，将转换后的结果放在文本消息的Content中，返回给用户就会显示emoji表情了。</p>
<p>以下，我给出一个使用emoji表情的完整演示例子，例如以下：</p>
<p>[java]</p>
<p>import java.util.Date;<br>import java.util.Map;</p>
<p>import javax.servlet.http.HttpServletRequest;</p>
<p>/**</p>
<ul>
<li>核心服务类<br><em>
</em>/<br>public class CoreService {<br>/**</li>
<li>处理微信发来的请求<br>*</li>
<li>@param request</li>
<li>@return<br>*/<br>public static String processRequest(HttpServletRequest request) {<br>String respMessage = null;<br>try {<br>// xml请求解析<br>Map&lt;String, String&gt; requestMap = MessageUtil.parseXml(request);</li>
</ul>
<p>// 发送方帐号（open_id）<br>String fromUserName = requestMap.get(&quot;FromUserName&quot;);<br>// 公众帐号<br>String toUserName = requestMap.get(&quot;ToUserName&quot;);</p>
<p>// 回复文本消息<br>TextMessage textMessage = new TextMessage();<br>textMessage.setToUserName(fromUserName);<br>textMessage.setFromUserName(toUserName);<br>textMessage.setCreateTime(new Date().getTime());<br>textMessage.setMsgType(MessageUtil.RESP_MESSAGE_TYPE_TEXT);<br>textMessage.setFuncFlag(0);<br>textMessage.setContent(&quot;自行车&quot; + emoji(0x1F6B2) + &quot; 男性&quot; + emoji(0x1F6B9) + &quot; 钱袋&quot; + emoji(0x1F4B0));<br>respMessage = MessageUtil.textMessageToXml(textMessage);<br>} catch (Exception e) {<br>e.printStackTrace();<br>}</p>
<p>return respMessage;<br>}</p>
<p>/**</p>
<ul>
<li>emoji表情转换(hex -&gt; utf-16)<br>*</li>
<li>@param hexEmoji</li>
<li>@return<br>*/<br>public static String emoji(int hexEmoji) {<br>return String.valueOf(Character.toChars(hexEmoji));<br>}<br>}</li>
</ul>
<p>[/java]</p>
<p>上面代码的作用是：无论用户发送什么类型的消息，都返回包含三个emoji表情的文本消息。假设不明确CoreService类怎么回事，请查看本系列教程的第5篇，或者你仅仅须要认真看第42行代码，就知道怎么样把emoji表情代码放在文本消息的Content中了。最后再来看下执行效果截图：</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP解析键值没有双引号的json数组,js json string 转php json]]></title>
      <url>http://www.ibmer.info/php-js-json.html</url>
      <content type="html"><![CDATA[<h4 id="PHP解析键值没有双引号的json数组-js-json-string-转php-json"><a href="#PHP解析键值没有双引号的json数组-js-json-string-转php-json" class="headerlink" title="PHP解析键值没有双引号的json数组,js json string 转php json"></a>PHP解析键值没有双引号的json数组,js json string 转php json</h4><p>在js中传递过来的json，很多时候都是不规范的json,</p>
<p>PHP如果想直接调用js 中的json数据，一般通过json_decode都会出现null的问题，</p>
<p>原因是编码，单引号，换行等问题导致无法解析，Google和百度找半天都没有解决方案，或者不完全的。</p>
<p>ibmer.info这里给出一个处理的类，可以方便处理。</p>
<p>&nbsp;</p>
<h3 id="类使用方法"><a href="#类使用方法" class="headerlink" title="类使用方法"></a>类使用方法</h3><p>&nbsp;</p>
<ul>
<li>Converts to and from JSON format.</li>
</ul>
<p>*</p>
<ul>
<li>Brief example of use:<br>*</li>
<li>&lt;code&gt;</li>
<li>// create a new instance of Services_JSON</li>
<li>$json = new Services_JSON();<br>*</li>
<li>// convert a complexe value to JSON notation, and send it to the browser</li>
<li>$value = array(‘foo’, ‘bar’, array(1, 2, ‘baz’), array(3, array(4)));</li>
<li>$output = $json-&gt;encode($value);<br>*</li>
<li>print($output);</li>
<li>// prints: [“foo”,”bar”,[1,2,”baz”],[3,[4]]]<br>*</li>
<li>// accept incoming POST data, assumed to be in JSON notation</li>
<li>$input = file_get_contents(‘php://input’, 1000000);</li>
<li>$value = $json-&gt;decode($input);</li>
<li>&lt;/code&gt;</li>
</ul>
<p>&nbsp;</p>
<h3 id="类源代码。"><a href="#类源代码。" class="headerlink" title="类源代码。"></a>类源代码。</h3><p>[php]</p>
<p>&lt;?php<br>if ( !class_exists( ‘Services_JSON’ ) ) :<br>/<em> vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: </em>/<br>/**</p>
<ul>
<li>Converts to and from JSON format.<br>*</li>
<li>JSON (JavaScript Object Notation) is a lightweight data-interchange</li>
<li>format. It is easy for humans to read and write. It is easy for machines</li>
<li>to parse and generate. It is based on a subset of the JavaScript</li>
<li>Programming Language, Standard ECMA-262 3rd Edition - December 1999.</li>
<li>This feature can also be found in Python. JSON is a text format that is</li>
<li>completely language independent but uses conventions that are familiar</li>
<li>to programmers of the C-family of languages, including C, C++, C#, Java,</li>
<li>JavaScript, Perl, TCL, and many others. These properties make JSON an</li>
<li>ideal data-interchange language.<br>*</li>
<li>This package provides a simple encoder and decoder for JSON notation. It</li>
<li>is intended for use with client-side Javascript applications that make</li>
<li>use of HTTPRequest to perform server communication functions - data can</li>
<li>be encoded into JSON notation for use in a client-side javascript, or</li>
<li>decoded from incoming Javascript requests. JSON format is native to</li>
<li>Javascript, and can be directly eval()’ed with no further parsing</li>
<li>overhead<br>*</li>
<li>All strings should be in ASCII or UTF-8 format!<br>*</li>
<li>LICENSE: Redistribution and use in source and binary forms, with or</li>
<li>without modification, are permitted provided that the following</li>
<li>conditions are met: Redistributions of source code must retain the</li>
<li>above copyright notice, this list of conditions and the following</li>
<li>disclaimer. Redistributions in binary form must reproduce the above</li>
<li>copyright notice, this list of conditions and the following disclaimer</li>
<li>in the documentation and/or other materials provided with the</li>
<li>distribution.<br>*</li>
<li>THIS SOFTWARE IS PROVIDED ``AS IS’’ AND ANY EXPRESS OR IMPLIED</li>
<li>WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</li>
<li>MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN</li>
<li>NO EVENT SHALL CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,</li>
<li>INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,</li>
<li>BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS</li>
<li>OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</li>
<li>ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR</li>
<li>TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE</li>
<li>USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH</li>
<li>DAMAGE.<br>*</li>
<li>@category</li>
<li>@package Services_JSON</li>
<li>@author Michal Migurski &lt;mike-json@teczno.com&gt;</li>
<li>@author Matt Knapp &lt;mdknapp[at]gmail[dot]com&gt;</li>
<li>@author Brett Stimmerman &lt;brettstimmerman[at]gmail[dot]com&gt;</li>
<li>@copyright 2005 Michal Migurski</li>
<li>@version CVS: $Id: JSON.php 288200 2009-09-09 15:41:29Z alan_k $</li>
<li>@license <a href="http://www.opensource.org/licenses/bsd-license.php" target="_blank" rel="external">http://www.opensource.org/licenses/bsd-license.php</a></li>
<li>@link <a href="http://pear.php.net/pepr/pepr-proposal-show.php?id=198" target="_blank" rel="external">http://pear.php.net/pepr/pepr-proposal-show.php?id=198</a><br>*/</li>
</ul>
<p>/**</p>
<ul>
<li>Marker constant for Services_JSON::decode(), used to flag stack state<br>*/<br>define(‘SERVICES_JSON_SLICE’, 1);</li>
</ul>
<p>/**</p>
<ul>
<li>Marker constant for Services_JSON::decode(), used to flag stack state<br>*/<br>define(‘SERVICES_JSON_IN_STR’, 2);</li>
</ul>
<p>/**</p>
<ul>
<li>Marker constant for Services_JSON::decode(), used to flag stack state<br>*/<br>define(‘SERVICES_JSON_IN_ARR’, 3);</li>
</ul>
<p>/**</p>
<ul>
<li>Marker constant for Services_JSON::decode(), used to flag stack state<br>*/<br>define(‘SERVICES_JSON_IN_OBJ’, 4);</li>
</ul>
<p>/**</p>
<ul>
<li>Marker constant for Services_JSON::decode(), used to flag stack state<br>*/<br>define(‘SERVICES_JSON_IN_CMT’, 5);</li>
</ul>
<p>/**</p>
<ul>
<li>Behavior switch for Services_JSON::decode()<br>*/<br>define(‘SERVICES_JSON_LOOSE_TYPE’, 16);</li>
</ul>
<p>/**</p>
<ul>
<li>Behavior switch for Services_JSON::decode()<br>*/<br>define(‘SERVICES_JSON_SUPPRESS_ERRORS’, 32);</li>
</ul>
<p>/**</p>
<ul>
<li>Converts to and from JSON format.<br>*</li>
<li>Brief example of use:<br>*</li>
<li>&lt;code&gt;</li>
<li>// create a new instance of Services_JSON</li>
<li>$json = new Services_JSON();<br>*</li>
<li>// convert a complexe value to JSON notation, and send it to the browser</li>
<li>$value = array(‘foo’, ‘bar’, array(1, 2, ‘baz’), array(3, array(4)));</li>
<li>$output = $json-&gt;encode($value);<br>*</li>
<li>print($output);</li>
<li>// prints: [&quot;foo&quot;,&quot;bar&quot;,[1,2,&quot;baz&quot;],[3,[4]]]<br>*</li>
<li>// accept incoming POST data, assumed to be in JSON notation</li>
<li>$input = file_get_contents(‘php://input’, 1000000);</li>
<li>$value = $json-&gt;decode($input);</li>
<li>&lt;/code&gt;<br><em>/<br>class Services_JSON<br>{<br>/*</em></li>
<li>constructs a new JSON instance<br>*</li>
<li>@param int $use object behavior flags; combine with boolean-OR<br>*</li>
<li>possible values:</li>
<li><ul>
<li>SERVICES_JSON_LOOSE_TYPE: loose typing.</li>
</ul>
</li>
<li>&quot;{…}&quot; syntax creates associative arrays</li>
<li>instead of objects in decode().</li>
<li><ul>
<li>SERVICES_JSON_SUPPRESS_ERRORS: error suppression.</li>
</ul>
</li>
<li>Values which can’t be encoded (e.g. resources)</li>
<li>appear as NULL instead of throwing errors.</li>
<li>By default, a deeply-nested resource will</li>
<li>bubble up with an error, so all return values</li>
<li>from encode() should be checked with isError()<br>*/<br>function Services_JSON($use = 0)<br>{<br>$this-&gt;use = $use;<br>}</li>
</ul>
<p>/**</p>
<ul>
<li>convert a string from one UTF-16 char to one UTF-8 char<br>*</li>
<li>Normally should be handled by mb_convert_encoding, but</li>
<li>provides a slower PHP-only method for installations</li>
<li>that lack the multibye string extension.<br>*</li>
<li>@param string $utf16 UTF-16 character</li>
<li>@return string UTF-8 character</li>
<li>@access private<br>*/<br>function utf162utf8($utf16)<br>{<br>// oh please oh please oh please oh please oh please<br>if(function_exists(‘mb_convert_encoding’)) {<br>return mb_convert_encoding($utf16, ‘UTF-8’, ‘UTF-16’);<br>}</li>
</ul>
<p>$bytes = (ord($utf16[0]) &lt;&lt; 8) | ord($utf16[1]);</p>
<p>switch(true) {<br>case ((0x7F &amp; $bytes) == $bytes):<br>// this case should never be reached, because we are in ASCII range<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return chr(0x7F &amp; $bytes);</p>
<p>case (0x07FF &amp; $bytes) == $bytes:<br>// return a 2-byte UTF-8 character<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return chr(0xC0 | (($bytes &gt;&gt; 6) &amp; 0x1F))<br>. chr(0x80 | ($bytes &amp; 0x3F));</p>
<p>case (0xFFFF &amp; $bytes) == $bytes:<br>// return a 3-byte UTF-8 character<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return chr(0xE0 | (($bytes &gt;&gt; 12) &amp; 0x0F))<br>. chr(0x80 | (($bytes &gt;&gt; 6) &amp; 0x3F))<br>. chr(0x80 | ($bytes &amp; 0x3F));<br>}</p>
<p>// ignoring UTF-32 for now, sorry<br>return ‘’;<br>}</p>
<p>/**</p>
<ul>
<li>convert a string from one UTF-8 char to one UTF-16 char<br>*</li>
<li>Normally should be handled by mb_convert_encoding, but</li>
<li>provides a slower PHP-only method for installations</li>
<li>that lack the multibye string extension.<br>*</li>
<li>@param string $utf8 UTF-8 character</li>
<li>@return string UTF-16 character</li>
<li>@access private<br>*/<br>function utf82utf16($utf8)<br>{<br>// oh please oh please oh please oh please oh please<br>if(function_exists(‘mb_convert_encoding’)) {<br>return mb_convert_encoding($utf8, ‘UTF-16’, ‘UTF-8’);<br>}</li>
</ul>
<p>switch(strlen($utf8)) {<br>case 1:<br>// this case should never be reached, because we are in ASCII range<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return $utf8;</p>
<p>case 2:<br>// return a UTF-16 character from a 2-byte UTF-8 char<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return chr(0x07 &amp; (ord($utf8[0]) &gt;&gt; 2))<br>. chr((0xC0 &amp; (ord($utf8[0]) &lt;&lt; 6))<br>| (0x3F &amp; ord($utf8[1])));</p>
<p>case 3:<br>// return a UTF-16 character from a 3-byte UTF-8 char<br>// see: <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>return chr((0xF0 &amp; (ord($utf8[0]) &lt;&lt; 4))<br>| (0x0F &amp; (ord($utf8[1]) &gt;&gt; 2)))<br>. chr((0xC0 &amp; (ord($utf8[1]) &lt;&lt; 6))<br>| (0x7F &amp; ord($utf8[2])));<br>}</p>
<p>// ignoring UTF-32 for now, sorry<br>return ‘’;<br>}</p>
<p>/**</p>
<ul>
<li>encodes an arbitrary variable into JSON format (and sends JSON Header)<br>*</li>
<li>@param mixed $var any number, boolean, string, array, or object to be encoded.</li>
<li>see argument 1 to Services_JSON() above for array-parsing behavior.</li>
<li>if var is a strng, note that encode() always expects it</li>
<li>to be in ASCII or UTF-8 format!<br>*</li>
<li>@return mixed JSON string representation of input var or an error if a problem occurs</li>
<li>@access public<br><em>/<br>function encode($var)<br>{<br>header(‘Content-type: application/json’);<br>return $this-&gt;_encode($var);<br>}<br>/*</em></li>
<li>encodes an arbitrary variable into JSON format without JSON Header - warning - may allow CSS!!!!)<br>*</li>
<li>@param mixed $var any number, boolean, string, array, or object to be encoded.</li>
<li>see argument 1 to Services_JSON() above for array-parsing behavior.</li>
<li>if var is a strng, note that encode() always expects it</li>
<li>to be in ASCII or UTF-8 format!<br>*</li>
<li>@return mixed JSON string representation of input var or an error if a problem occurs</li>
<li>@access public<br><em>/<br>function encodeUnsafe($var)<br>{<br>return $this-&gt;_encode($var);<br>}<br>/*</em></li>
<li>PRIVATE CODE that does the work of encodes an arbitrary variable into JSON format<br>*</li>
<li>@param mixed $var any number, boolean, string, array, or object to be encoded.</li>
<li>see argument 1 to Services_JSON() above for array-parsing behavior.</li>
<li>if var is a strng, note that encode() always expects it</li>
<li>to be in ASCII or UTF-8 format!<br>*</li>
<li>@return mixed JSON string representation of input var or an error if a problem occurs</li>
<li>@access public<br>*/<br>function _encode($var)<br>{</li>
</ul>
<p>switch (gettype($var)) {<br>case ‘boolean’:<br>return $var ? ‘true’ : ‘false’;</p>
<p>case ‘NULL’:<br>return ‘null’;</p>
<p>case ‘integer’:<br>return (int) $var;</p>
<p>case ‘double’:<br>case ‘float’:<br>return (float) $var;</p>
<p>case ‘string’:<br>// STRINGS ARE EXPECTED TO BE IN ASCII OR UTF-8 FORMAT<br>$ascii = ‘’;<br>$strlen_var = strlen($var);</p>
<p>/*</p>
<ul>
<li>Iterate over every character in the string,</li>
<li>escaping with a slash or encoding to UTF-8 where necessary<br>*/<br>for ($c = 0; $c &lt; $strlen_var; ++$c) {</li>
</ul>
<p>$ord_var_c = ord($var[$c]);</p>
<p>switch (true) {<br>case $ord_var_c == 0x08:<br>$ascii .= ‘\b’;<br>break;<br>case $ord_var_c == 0x09:<br>$ascii .= ‘\t’;<br>break;<br>case $ord_var_c == 0x0A:<br>$ascii .= ‘\n’;<br>break;<br>case $ord_var_c == 0x0C:<br>$ascii .= ‘\f’;<br>break;<br>case $ord_var_c == 0x0D:<br>$ascii .= ‘\r’;<br>break;</p>
<p>case $ord_var_c == 0x22:<br>case $ord_var_c == 0x2F:<br>case $ord_var_c == 0x5C:<br>// double quote, slash, slosh<br>$ascii .= ‘\‘.$var[$c];<br>break;</p>
<p>case (($ord_var_c &gt;= 0x20) &amp;&amp; ($ord_var_c &lt;= 0x7F)):<br>// characters U-00000000 - U-0000007F (same as ASCII)<br>$ascii .= $var[$c];<br>break;</p>
<p>case (($ord_var_c &amp; 0xE0) == 0xC0):<br>// characters U-00000080 - U-000007FF, mask 110XXXXX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>if ($c+1 &gt;= $strlen_var) {<br>$c += 1;<br>$ascii .= ‘?’;<br>break;<br>}</p>
<p>$char = pack(‘C*’, $ord_var_c, ord($var[$c + 1]));<br>$c += 1;<br>$utf16 = $this-&gt;utf82utf16($char);<br>$ascii .= sprintf(‘\u%04s’, bin2hex($utf16));<br>break;</p>
<p>case (($ord_var_c &amp; 0xF0) == 0xE0):<br>if ($c+2 &gt;= $strlen_var) {<br>$c += 2;<br>$ascii .= ‘?’;<br>break;<br>}<br>// characters U-00000800 - U-0000FFFF, mask 1110XXXX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$char = pack(‘C*’, $ord_var_c,<br>@ord($var[$c + 1]),<br>@ord($var[$c + 2]));<br>$c += 2;<br>$utf16 = $this-&gt;utf82utf16($char);<br>$ascii .= sprintf(‘\u%04s’, bin2hex($utf16));<br>break;</p>
<p>case (($ord_var_c &amp; 0xF8) == 0xF0):<br>if ($c+3 &gt;= $strlen_var) {<br>$c += 3;<br>$ascii .= ‘?’;<br>break;<br>}<br>// characters U-00010000 - U-001FFFFF, mask 11110XXX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$char = pack(‘C*’, $ord_var_c,<br>ord($var[$c + 1]),<br>ord($var[$c + 2]),<br>ord($var[$c + 3]));<br>$c += 3;<br>$utf16 = $this-&gt;utf82utf16($char);<br>$ascii .= sprintf(‘\u%04s’, bin2hex($utf16));<br>break;</p>
<p>case (($ord_var_c &amp; 0xFC) == 0xF8):<br>// characters U-00200000 - U-03FFFFFF, mask 111110XX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>if ($c+4 &gt;= $strlen_var) {<br>$c += 4;<br>$ascii .= ‘?’;<br>break;<br>}<br>$char = pack(‘C*’, $ord_var_c,<br>ord($var[$c + 1]),<br>ord($var[$c + 2]),<br>ord($var[$c + 3]),<br>ord($var[$c + 4]));<br>$c += 4;<br>$utf16 = $this-&gt;utf82utf16($char);<br>$ascii .= sprintf(‘\u%04s’, bin2hex($utf16));<br>break;</p>
<p>case (($ord_var_c &amp; 0xFE) == 0xFC):<br>if ($c+5 &gt;= $strlen_var) {<br>$c += 5;<br>$ascii .= ‘?’;<br>break;<br>}<br>// characters U-04000000 - U-7FFFFFFF, mask 1111110X<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$char = pack(‘C*’, $ord_var_c,<br>ord($var[$c + 1]),<br>ord($var[$c + 2]),<br>ord($var[$c + 3]),<br>ord($var[$c + 4]),<br>ord($var[$c + 5]));<br>$c += 5;<br>$utf16 = $this-&gt;utf82utf16($char);<br>$ascii .= sprintf(‘\u%04s’, bin2hex($utf16));<br>break;<br>}<br>}<br>return ‘&quot;’.$ascii.’&quot;’;</p>
<p>case ‘array’:<br>/*</p>
<ul>
<li>As per JSON spec if any array key is not an integer</li>
<li>we must treat the the whole array as an object. We</li>
<li>also try to catch a sparsely populated associative</li>
<li>array with numeric keys here because some JS engines</li>
<li>will create an array with empty indexes up to</li>
<li>max_index which can cause memory issues and because</li>
<li>the keys, which may be relevant, will be remapped</li>
<li>otherwise.<br>*</li>
<li>As per the ECMA and JSON specification an object may</li>
<li>have any string as a property. Unfortunately due to</li>
<li>a hole in the ECMA specification if the key is a</li>
<li>ECMA reserved word or starts with a digit the</li>
<li>parameter is only accessible using ECMAScript’s</li>
<li>bracket notation.<br>*/</li>
</ul>
<p>// treat as a JSON object<br>if (is_array($var) &amp;&amp; count($var) &amp;&amp; (array_keys($var) !== range(0, sizeof($var) - 1))) {<br>$properties = array_map(array($this, ‘name_value’),<br>array_keys($var),<br>array_values($var));</p>
<p>foreach($properties as $property) {<br>if(Services_JSON::isError($property)) {<br>return $property;<br>}<br>}</p>
<p>return ‘{‘ . join(‘,’, $properties) . ‘}’;<br>}</p>
<p>// treat it like a regular array<br>$elements = array_map(array($this, ‘_encode’), $var);</p>
<p>foreach($elements as $element) {<br>if(Services_JSON::isError($element)) {<br>return $element;<br>}<br>}</p>
<p>return ‘[‘ . join(‘,’, $elements) . ‘]’;</p>
<p>case ‘object’:<br>$vars = get_object_vars($var);</p>
<p>$properties = array_map(array($this, ‘name_value’),<br>array_keys($vars),<br>array_values($vars));</p>
<p>foreach($properties as $property) {<br>if(Services_JSON::isError($property)) {<br>return $property;<br>}<br>}</p>
<p>return ‘{‘ . join(‘,’, $properties) . ‘}’;</p>
<p>default:<br>return ($this-&gt;use &amp; SERVICES_JSON_SUPPRESS_ERRORS)<br>? ‘null’<br>: new Services_JSON_Error(gettype($var).&quot; can not be encoded as JSON string&quot;);<br>}<br>}</p>
<p>/**</p>
<ul>
<li>array-walking function for use in generating JSON-formatted name-value pairs<br>*</li>
<li>@param string $name name of key to use</li>
<li>@param mixed $value reference to an array element to be encoded<br>*</li>
<li>@return string JSON-formatted name-value pair, like ‘&quot;name&quot;:value’</li>
<li>@access private<br>*/<br>function name_value($name, $value)<br>{<br>$encoded_value = $this-&gt;_encode($value);</li>
</ul>
<p>if(Services_JSON::isError($encoded_value)) {<br>return $encoded_value;<br>}</p>
<p>return $this-&gt;_encode(strval($name)) . ‘:’ . $encoded_value;<br>}</p>
<p>/**</p>
<ul>
<li>reduce a string by removing leading and trailing comments and whitespace<br>*</li>
<li>@param $str string string value to strip of comments and whitespace<br>*</li>
<li>@return string string value stripped of comments and whitespace</li>
<li>@access private<br>*/<br>function reduce_string($str)<br>{<br>$str = preg_replace(array(</li>
</ul>
<p>// eliminate single line comments in ‘// …’ form<br>‘#^\s*//(.+)$#m’,</p>
<p>// eliminate multi-line comments in ‘/<em> … </em>/‘ form, at start of string<br>‘#^\s<em>/\</em>(.+)*/#Us’,</p>
<p>// eliminate multi-line comments in ‘/<em> … </em>/‘ form, at end of string<br>‘#/*(.+)*/\s*$#Us’</p>
<p>), ‘’, $str);</p>
<p>// eliminate extraneous space<br>return trim($str);<br>}</p>
<p>/**</p>
<ul>
<li>decodes a JSON string into appropriate variable<br>*</li>
<li>@param string $str JSON-formatted string<br>*</li>
<li>@return mixed number, boolean, string, array, or object</li>
<li>corresponding to given JSON input string.</li>
<li>See argument 1 to Services_JSON() above for object-output behavior.</li>
<li>Note that decode() always returns strings</li>
<li>in ASCII or UTF-8 format!</li>
<li>@access public<br>*/<br>function decode($str)<br>{<br>$str = $this-&gt;reduce_string($str);</li>
</ul>
<p>switch (strtolower($str)) {<br>case ‘true’:<br>return true;</p>
<p>case ‘false’:<br>return false;</p>
<p>case ‘null’:<br>return null;</p>
<p>default:<br>$m = array();</p>
<p>if (is_numeric($str)) {<br>// Lookie-loo, it’s a number</p>
<p>// This would work on its own, but I’m trying to be<br>// good about returning integers where appropriate:<br>// return (float)$str;</p>
<p>// Return float or int, as appropriate<br>return ((float)$str == (integer)$str)<br>? (integer)$str<br>: (float)$str;</p>
<p>} elseif (preg_match(‘/^(&quot;|\’).*(\1)$/s’, $str, $m) &amp;&amp; $m[1] == $m[2]) {<br>// STRINGS RETURNED IN UTF-8 FORMAT<br>$delim = substr($str, 0, 1);<br>$chrs = substr($str, 1, -1);<br>$utf8 = ‘’;<br>$strlen_chrs = strlen($chrs);</p>
<p>for ($c = 0; $c &lt; $strlen_chrs; ++$c) {</p>
<p>$substr_chrs_c_2 = substr($chrs, $c, 2);<br>$ord_chrs_c = ord($chrs[$c]);</p>
<p>switch (true) {<br>case $substr_chrs_c_2 == ‘\b’:<br>$utf8 .= chr(0x08);<br>++$c;<br>break;<br>case $substr_chrs_c_2 == ‘\t’:<br>$utf8 .= chr(0x09);<br>++$c;<br>break;<br>case $substr_chrs_c_2 == ‘\n’:<br>$utf8 .= chr(0x0A);<br>++$c;<br>break;<br>case $substr_chrs_c_2 == ‘\f’:<br>$utf8 .= chr(0x0C);<br>++$c;<br>break;<br>case $substr_chrs_c_2 == ‘\r’:<br>$utf8 .= chr(0x0D);<br>++$c;<br>break;</p>
<p>case $substr_chrs_c_2 == ‘\&quot;’:<br>case $substr_chrs_c_2 == ‘\\’’:<br>case $substr_chrs_c_2 == ‘\\‘:<br>case $substr_chrs_c_2 == ‘\/‘:<br>if (($delim == ‘&quot;’ &amp;&amp; $substr_chrs_c_2 != ‘\\’’) ||<br>($delim == &quot;’&quot; &amp;&amp; $substr_chrs_c_2 != ‘\&quot;’)) {<br>$utf8 .= $chrs[++$c];<br>}<br>break;</p>
<p>case preg_match(‘/\\u[0-9A-F]{4}/i’, substr($chrs, $c, 6)):<br>// single, escaped unicode character<br>$utf16 = chr(hexdec(substr($chrs, ($c + 2), 2)))<br>. chr(hexdec(substr($chrs, ($c + 4), 2)));<br>$utf8 .= $this-&gt;utf162utf8($utf16);<br>$c += 5;<br>break;</p>
<p>case ($ord_chrs_c &gt;= 0x20) &amp;&amp; ($ord_chrs_c &lt;= 0x7F):<br>$utf8 .= $chrs[$c];<br>break;</p>
<p>case ($ord_chrs_c &amp; 0xE0) == 0xC0:<br>// characters U-00000080 - U-000007FF, mask 110XXXXX<br>//see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$utf8 .= substr($chrs, $c, 2);<br>++$c;<br>break;</p>
<p>case ($ord_chrs_c &amp; 0xF0) == 0xE0:<br>// characters U-00000800 - U-0000FFFF, mask 1110XXXX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$utf8 .= substr($chrs, $c, 3);<br>$c += 2;<br>break;</p>
<p>case ($ord_chrs_c &amp; 0xF8) == 0xF0:<br>// characters U-00010000 - U-001FFFFF, mask 11110XXX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$utf8 .= substr($chrs, $c, 4);<br>$c += 3;<br>break;</p>
<p>case ($ord_chrs_c &amp; 0xFC) == 0xF8:<br>// characters U-00200000 - U-03FFFFFF, mask 111110XX<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$utf8 .= substr($chrs, $c, 5);<br>$c += 4;<br>break;</p>
<p>case ($ord_chrs_c &amp; 0xFE) == 0xFC:<br>// characters U-04000000 - U-7FFFFFFF, mask 1111110X<br>// see <a href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8" target="_blank" rel="external">http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</a><br>$utf8 .= substr($chrs, $c, 6);<br>$c += 5;<br>break;</p>
<p>}</p>
<p>}</p>
<p>return $utf8;</p>
<p>} elseif (preg_match(‘/^[.<em>]$/s’, $str) || preg_match(‘/^{.</em>}$/s’, $str)) {<br>// array, or object notation</p>
<p>if ($str[0] == ‘[‘) {<br>$stk = array(SERVICES_JSON_IN_ARR);<br>$arr = array();<br>} else {<br>if ($this-&gt;use &amp; SERVICES_JSON_LOOSE_TYPE) {<br>$stk = array(SERVICES_JSON_IN_OBJ);<br>$obj = array();<br>} else {<br>$stk = array(SERVICES_JSON_IN_OBJ);<br>$obj = new stdClass();<br>}<br>}</p>
<p>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_SLICE,<br>‘where’ =&gt; 0,<br>‘delim’ =&gt; false));</p>
<p>$chrs = substr($str, 1, -1);<br>$chrs = $this-&gt;reduce_string($chrs);</p>
<p>if ($chrs == ‘’) {<br>if (reset($stk) == SERVICES_JSON_IN_ARR) {<br>return $arr;</p>
<p>} else {<br>return $obj;</p>
<p>}<br>}</p>
<p>//print(&quot;\nparsing {$chrs}\n&quot;);</p>
<p>$strlen_chrs = strlen($chrs);</p>
<p>for ($c = 0; $c &lt;= $strlen_chrs; ++$c) {</p>
<p>$top = end($stk);<br>$substr_chrs_c_2 = substr($chrs, $c, 2);</p>
<p>if (($c == $strlen_chrs) || (($chrs[$c] == ‘,’) &amp;&amp; ($top[‘what’] == SERVICES_JSON_SLICE))) {<br>// found a comma that is not inside a string, array, etc.,<br>// OR we’ve reached the end of the character list<br>$slice = substr($chrs, $top[‘where’], ($c - $top[‘where’]));<br>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_SLICE, ‘where’ =&gt; ($c + 1), ‘delim’ =&gt; false));<br>//print(&quot;Found split at {$c}: &quot;.substr($chrs, $top[‘where’], (1 + $c - $top[‘where’])).&quot;\n&quot;);</p>
<p>if (reset($stk) == SERVICES_JSON_IN_ARR) {<br>// we are in an array, so just push an element onto the stack<br>array_push($arr, $this-&gt;decode($slice));</p>
<p>} elseif (reset($stk) == SERVICES_JSON_IN_OBJ) {<br>// we are in an object, so figure<br>// out the property name and set an<br>// element in an associative array,<br>// for now<br>$parts = array();</p>
<p>if (preg_match(‘/^\s<em>([&quot;\’].</em>[^\][&quot;\’])\s<em>:\s</em>(\S.*),?$/Uis’, $slice, $parts)) {<br>// &quot;name&quot;:value pair<br>$key = $this-&gt;decode($parts[1]);<br>$val = $this-&gt;decode($parts[2]);</p>
<p>if ($this-&gt;use &amp; SERVICES_JSON_LOOSE_TYPE) {<br>$obj[$key] = $val;<br>} else {<br>$obj-&gt;$key = $val;<br>}<br>} elseif (preg_match(‘/^\s<em>(\w+)\s</em>:\s<em>(\S.</em>),?$/Uis’, $slice, $parts)) {<br>// name:value pair, where name is unquoted<br>$key = $parts[1];<br>$val = $this-&gt;decode($parts[2]);</p>
<p>if ($this-&gt;use &amp; SERVICES_JSON_LOOSE_TYPE) {<br>$obj[$key] = $val;<br>} else {<br>$obj-&gt;$key = $val;<br>}<br>}</p>
<p>}</p>
<p>} elseif ((($chrs[$c] == ‘&quot;’) || ($chrs[$c] == &quot;’&quot;)) &amp;&amp; ($top[‘what’] != SERVICES_JSON_IN_STR)) {<br>// found a quote, and we are not inside a string<br>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_IN_STR, ‘where’ =&gt; $c, ‘delim’ =&gt; $chrs[$c]));<br>//print(&quot;Found start of string at {$c}\n&quot;);</p>
<p>} elseif (($chrs[$c] == $top[‘delim’]) &amp;&amp;<br>($top[‘what’] == SERVICES_JSON_IN_STR) &amp;&amp;<br>((strlen(substr($chrs, 0, $c)) - strlen(rtrim(substr($chrs, 0, $c), ‘\‘))) % 2 != 1)) {<br>// found a quote, we’re in a string, and it’s not escaped<br>// we know that it’s not escaped becase there is <em>not</em> an<br>// odd number of backslashes at the end of the string so far<br>array_pop($stk);<br>//print(&quot;Found end of string at {$c}: &quot;.substr($chrs, $top[‘where’], (1 + 1 + $c - $top[‘where’])).&quot;\n&quot;);</p>
<p>} elseif (($chrs[$c] == ‘[‘) &amp;&amp;<br>in_array($top[‘what’], array(SERVICES_JSON_SLICE, SERVICES_JSON_IN_ARR, SERVICES_JSON_IN_OBJ))) {<br>// found a left-bracket, and we are in an array, object, or slice<br>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_IN_ARR, ‘where’ =&gt; $c, ‘delim’ =&gt; false));<br>//print(&quot;Found start of array at {$c}\n&quot;);</p>
<p>} elseif (($chrs[$c] == ‘]’) &amp;&amp; ($top[‘what’] == SERVICES_JSON_IN_ARR)) {<br>// found a right-bracket, and we’re in an array<br>array_pop($stk);<br>//print(&quot;Found end of array at {$c}: &quot;.substr($chrs, $top[‘where’], (1 + $c - $top[‘where’])).&quot;\n&quot;);</p>
<p>} elseif (($chrs[$c] == ‘{‘) &amp;&amp;<br>in_array($top[‘what’], array(SERVICES_JSON_SLICE, SERVICES_JSON_IN_ARR, SERVICES_JSON_IN_OBJ))) {<br>// found a left-brace, and we are in an array, object, or slice<br>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_IN_OBJ, ‘where’ =&gt; $c, ‘delim’ =&gt; false));<br>//print(&quot;Found start of object at {$c}\n&quot;);</p>
<p>} elseif (($chrs[$c] == ‘}’) &amp;&amp; ($top[‘what’] == SERVICES_JSON_IN_OBJ)) {<br>// found a right-brace, and we’re in an object<br>array_pop($stk);<br>//print(&quot;Found end of object at {$c}: &quot;.substr($chrs, $top[‘where’], (1 + $c - $top[‘where’])).&quot;\n&quot;);</p>
<p>} elseif (($substr_chrs_c_2 == ‘/*’) &amp;&amp;<br>in_array($top[‘what’], array(SERVICES_JSON_SLICE, SERVICES_JSON_IN_ARR, SERVICES_JSON_IN_OBJ))) {<br>// found a comment start, and we are in an array, object, or slice<br>array_push($stk, array(‘what’ =&gt; SERVICES_JSON_IN_CMT, ‘where’ =&gt; $c, ‘delim’ =&gt; false));<br>$c++;<br>//print(&quot;Found start of comment at {$c}\n&quot;);</p>
<p>} elseif (($substr_chrs_c_2 == ‘*/‘) &amp;&amp; ($top[‘what’] == SERVICES_JSON_IN_CMT)) {<br>// found a comment end, and we’re in one now<br>array_pop($stk);<br>$c++;</p>
<p>for ($i = $top[‘where’]; $i &lt;= $c; ++$i)<br>$chrs = substr_replace($chrs, ‘ ‘, $i, 1);</p>
<p>//print(&quot;Found end of comment at {$c}: &quot;.substr($chrs, $top[‘where’], (1 + $c - $top[‘where’])).&quot;\n&quot;);</p>
<p>}</p>
<p>}</p>
<p>if (reset($stk) == SERVICES_JSON_IN_ARR) {<br>return $arr;</p>
<p>} elseif (reset($stk) == SERVICES_JSON_IN_OBJ) {<br>return $obj;</p>
<p>}</p>
<p>}<br>}<br>}</p>
<p>/**</p>
<ul>
<li>@todo Ultimately, this should just call PEAR::isError()<br>*/<br>function isError($data, $code = null)<br>{<br>if (class_exists(‘pear’)) {<br>return PEAR::isError($data, $code);<br>} elseif (is_object($data) &amp;&amp; (get_class($data) == ‘services_json_error’ ||<br>is_subclass_of($data, ‘services_json_error’))) {<br>return true;<br>}</li>
</ul>
<p>return false;<br>}<br>}</p>
<p>if (class_exists(‘PEAR_Error’)) {</p>
<p>class Services_JSON_Error extends PEAR_Error<br>{<br>function Services_JSON_Error($message = ‘unknown error’, $code = null,<br>$mode = null, $options = null, $userinfo = null)<br>{<br>parent::PEAR_Error($message, $code, $mode, $options, $userinfo);<br>}<br>}</p>
<p>} else {</p>
<p>/**</p>
<ul>
<li>@todo Ultimately, this class shall be descended from PEAR_Error<br>*/<br>class Services_JSON_Error<br>{<br>function Services_JSON_Error($message = ‘unknown error’, $code = null,<br>$mode = null, $options = null, $userinfo = null)<br>{</li>
</ul>
<p>}<br>}</p>
<p>}<br>endif;</p>
<p>[/php]</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP采集利器：Snoopy]]></title>
      <url>http://www.ibmer.info/php-snoopy.html</url>
      <content type="html"><![CDATA[<p>下载地址:<a href="http://sourceforge.net/projects/snoopy/" target="_blank" rel="external">http://sourceforge.net/projects/snoopy/</a></p>
<p>Snoopy是一个php类，用来模拟浏览器的功能，可以获取网页内容，发送表单。Snoopy正确运行需要你的服务器的PHP版本在4以上，并且支持PCRE（Perl Compatible Regular Expressions），基本的LAMP服务都支持。</p>
<p>一、Snoopy的一些特点:</p>
<p>　　1.抓取网页的内容 fetch</p>
<p>　　2.抓取网页的文本内容 (去除HTML标签) fetchtext</p>
<p>　　3.抓取网页的链接，表单 fetchlinks fetchform</p>
<p>　　4.支持代理主机</p>
<p>　　5.支持基本的用户名/密码验证</p>
<p>　　6.支持设置user_agent, referer(来路), cookies和header content(头文件)</p>
<p>　　7.支持浏览器重定向，并能控制重定向深度</p>
<p>　　8.能把网页中的链接扩展成高质量的url(默认)</p>
<p>　　9.提交数据并且获取返回值</p>
<p>　　10.支持跟踪HTML框架</p>
<p>　　11.支持重定向的时候传递cookies，要求php4以上就可以了，由于本身是php一个类，无需扩支持，服务器不支持curl时候的最好选择。</p>
<p>二、类方法:</p>
<p>fetch($URI)<br>———–</p>
<p>　　这是为了抓取网页的内容而使用的方法。$URI参数是被抓取网页的URL地址。抓取的结果被存储在 $this-&gt;results 中。如果你正在抓取的是一个框架，Snoopy将会将每个框架追踪后存入数组中，然后存入 $this-&gt;results。</p>
<p>fetchtext($URI)<br>—————</p>
<p>　　本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中的文字内容。</p>
<p>fetchform($URI)<br>—————</p>
<p>　　本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中表单内容(form)。</p>
<p>fetchlinks($URI)<br>—————-</p>
<p>　　本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。<br>默认情况下，相对链接将自动补全，转换成完整的URL。</p>
<p>submit($URI,$formvars)<br>———————-</p>
<p>　　本方法向$URL指定的链接地址发送确认表单。$formvars是一个存储表单参数的数组。</p>
<p>submittext($URI,$formvars)<br>————————–</p>
<p>　　本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回登陆后网页中的文字内容。</p>
<p>submitlinks($URI)<br>—————-</p>
<p>　　本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。<br>默认情况下，相对链接将自动补全，转换成完整的URL。</p>
<p>三、类属性: (缺省值在括号里)</p>
<p>$host 连接的主机<br>$port 连接的端口<br>$proxy_host 使用的代理主机，如果有的话<br>$proxy_port 使用的代理主机端口，如果有的话<br>$agent 用户代理伪装 (Snoopy v0.1)<br>$referer 来路信息，如果有的话<br>$cookies cookies， 如果有的话<br>$rawheaders 其他的头信息, 如果有的话<br>$maxredirs 最大重定向次数， 0=不允许 (5)<br>$offsiteok whether or not to allow redirects off-site. (true)<br>$expandlinks 是否将链接都补全为完整地址 (true)<br>$user 认证用户名, 如果有的话<br>$pass 认证用户名, 如果有的话<br>$accept http 接受类型 (image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, <em>/</em>)<br>$error 哪里报错, 如果有的话<br>$response_code 从服务器返回的响应代码<br>$headers 从服务器返回的头信息<br>$maxlength 最长返回数据长度<br>$read_timeout 读取操作超时 (requires PHP 4 Beta 4+)<br>设置为0为没有超时<br>$timed_out 如果一次读取操作超时了，本属性返回 true (requires PHP 4 Beta 4+)<br>$maxframes 允许追踪的框架最大数量<br>$status 抓取的http的状态<br>$temp_dir 网页服务器能够写入的临时文件目录 (/tmp)<br>$curl_path cURL binary 的目录, 如果没有cURL binary就设置为 false</p>
<p>四、以下是demo</p>
<div class="cnblogs_Highlighter" style="color: #000000;"><br><div id="highlighter_800217" class="syntaxhighlighter nogutter  php"><br>[php]&lt;/div&gt;<br>&lt;div class=&quot;syntaxhighlighter nogutter  php&quot;&gt;include &quot;Snoopy.class.php&quot;;<br>$snoopy = new Snoopy;<br><br>$snoopy-&gt;proxy_host = &quot;www.baidu.com&quot;;<br>$snoopy-&gt;proxy_port = &quot;8080&quot;;<br><br>$snoopy-&gt;agent = &quot;(compatible; MSIE 4.01; MSN 2.5; AOL 4.0; Windows 98)&quot;;<br>$snoopy-&gt;referer = &quot;<a href="http://www.baidu.com/&amp;quot" target="_blank" rel="external">http://www.baidu.com/&amp;quot</a>;;<br><br>$snoopy-&gt;cookies[&quot;SessionID&quot;] = 238472834723489l;<br>$snoopy-&gt;cookies[&quot;favoriteColor&quot;] = &quot;RED&quot;;<br><br>$snoopy-&gt;rawheaders[&quot;Pragma&quot;] = &quot;no-cache&quot;;<br><br>$snoopy-&gt;maxredirs = 2;<br>$snoopy-&gt;offsiteok = false;<br>$snoopy-&gt;expandlinks = false;<br><br>$snoopy-&gt;user = &quot;joe&quot;;<br>$snoopy-&gt;pass = &quot;bloe&quot;;<br><br>if($snoopy-&gt;fetchtext(&quot;<a href="http://www.baidu.com&amp;quot" target="_blank" rel="external">http://www.baidu.com&amp;quot</a>;))<br>{<br>echo &quot; &lt;PRE&gt;&quot;.htmlspecialchars($snoopy-&gt;results).&quot; &lt;/PRE&gt;\n&quot;; &lt;BR&gt;<br>} &lt;BR&gt;<br>else &lt;BR&gt;<br>echo &quot;error fetching document: &quot;.$snoopy-&gt;error.&quot;\n&quot;;<br><br>snoopy采集phpchina示例<br>&lt;?php<br>//采集phpchina<br>set_time_limit(0);<br>require_once(&quot;Snoopy.class.php&quot;);<br>$snoopy=new Snoopy();<br>//登陆论坛<br>$submit_url = &quot;<a href="http://www.phpchina.com/bbs/logging.php?action=login&amp;quot" target="_blank" rel="external">http://www.phpchina.com/bbs/logging.php?action=login&amp;quot</a>;;<br>$submit_vars[&quot;loginmode&quot;] = &quot;normal&quot;;<br>$submit_vars[&quot;styleid&quot;] = &quot;1&quot;;<br>$submit_vars[&quot;cookietime&quot;] = &quot;315360000&quot;;<br>$submit_vars[&quot;loginfield&quot;] = &quot;username&quot;;<br>$submit_vars[&quot;username&quot;] = &quot;<strong><em>&quot;; //你的用户名<br>$submit_vars[&quot;password&quot;] = &quot;**</em></strong>&quot;; //你的密码<br>$submit_vars[&quot;questionid&quot;] = &quot;0&quot;;<br>$submit_vars[&quot;answer&quot;] = &quot;&quot;;<br>$submit_vars[&quot;loginsubmit&quot;] = &quot;提 交&quot;;<br>$snoopy-&gt;submit($submit_url,$submit_vars);<br>if ($snoopy-&gt;results)<br>{<br>//获取连接地址<br>$snoopy-&gt;fetchlinks(&quot;<a href="http://www.phpchina.com/bbs&amp;quot" target="_blank" rel="external">http://www.phpchina.com/bbs&amp;quot</a>;);<br>$url=array();<br>$url=$snoopy-&gt;results;<br>//print_r($url);<br>foreach ($url as $key=&gt;$value)<br>{<br>//匹配<a href="http://www.phpchina.com/bbs/forumdisplay.php?fid=156&amp;sid=VfcqTR地址即论坛板块地址" target="_blank" rel="external">http://www.phpchina.com/bbs/forumdisplay.php?fid=156&amp;sid=VfcqTR地址即论坛板块地址</a><br>if (!preg_match(&quot;/^(http:\/\/www.phpchina.com\/bbs\/forumdisplay.php\?fid=)[0-9]<em>&amp;sid=[a-zA-Z]{6}/i&quot;,$value))<br>{<br>unset($url[$key]);<br>}<br>}<br>//print_r($url);<br>//获取到板块数组$url，循环访问，此处获取第一个模块第一页的数据<br>$i=0;<br>foreach ($url as $key=&gt;$value)<br>{<br>if ($i&gt;=1)<br>{<br>//测试限制<br>break;<br>}<br>else<br>{<br>//访问该模块，提取帖子的连接地址，正式访问里需要提取帖子分页的数据，然后根据分页数据提取帖子数据<br>$snoopy=new Snoopy();<br>$snoopy-&gt;fetchlinks($value);<br>$tie=array();<br>$tie[$i]=$snoopy-&gt;results;<br>//print_r($tie);<br>//转换数组<br>foreach ($tie[$i] as $key=&gt;$value)<br>{<br>//匹配<a href="http://www.phpchina.com/bbs/viewthread.php?tid=68127&amp;amp" target="_blank" rel="external">http://www.phpchina.com/bbs/viewthread.php?tid=68127&amp;amp</a>; extra=page%3D1&amp;page=1&amp;sid=iBLZfK<br>if (!preg_match(&quot;/^(http:\/\/www.phpchina.com\/bbs\/viewthread.php\?tid=)[0-9]</em>&amp;extra=page\%3D1&amp;page=[0-9]<em>&amp;sid=[a-zA-Z]{6}/i&quot;,$value))<br>{<br>unset($tie[$i][$key]);<br>}<br>}<br>//print_r($tie[$i]);<br>//归类数组，将同一个帖子不同页面的内容放一个数组里<br>$left=’’;//连接左边公用地址<br>$j=0;<br>$page=array();<br>foreach ($tie[$i] as $key=&gt;$value)<br>{<br>$left=substr($value,0,52);<br>$m=0;<br>foreach ($tie[$i] as $pkey=&gt;$pvalue)<br>{<br>//重组数组<br>if (substr($pvalue,0,52)==$left)<br>{<br>$page[$j][$m]=$pvalue;<br>$m++;<br>}<br>}<br>$j++;<br>}<br>//去除重复项开始<br>//$page=array_unique($page);只能用于一维数组<br>$paget[0]=$page[0];<br>$nums=count($page);<br>for ($n=1;$n &lt;$nums;$n++)<br>{<br>$paget[$n]=array_diff($page[$n],$page[$n-1]);<br>}<br>//去除多维数组重复值结束<br>//去除数组空值<br>unset($page);<br>$page=array();//重新定义page数组<br>$page=array_filter($paget);<br>//print_r($page);<br>$u=0;<br>$title=array();<br>$content=array();<br>$temp=’’;<br>$tt=array();<br>foreach ($page as $key=&gt;$value)<br>{<br>//外围循环，针对一个帖子<br>if (is_array($value))<br>{<br>foreach ($value as $k1=&gt;$v1)<br>{<br>//页内循环，针对一个帖子的N页<br>$snoopy=new Snoopy();<br>$snoopy-&gt;fetch($v1);<br>$temp=$snoopy-&gt;results;<br>//读取标题<br>if (!preg_match_all(&quot;/ &lt;h2&gt;(.</em>) &lt;\/h2&gt;/i&quot;,$temp,$tt))<br>{<br>echo &quot;no title&quot;;<br>exit;<br>}<br>else<br>{<br>$title[$u]=$tt[1][1];<br>}<br>unset($tt);<br>//读取内容<br>if (!preg_match<em>all(&quot;/ &lt;div id=\&quot;postmessage</em>[0-9]{1,8}\&quot; class=\&quot;t_msgfont\&quot;&gt;(.<em>) &lt;\/div&gt;/i&quot;,$temp,$tt))<br>{<br>print_r($tt);<br>echo &quot;no content1&quot;;<br>exit;<br>}<br>else<br>{<br>foreach ($tt[1] as $c=&gt;$c2)<br>{<br>$content[$u].=$c2;<br>}<br>}<br>}<br>}<br>else<br>{<br>//直接取页内容<br>$snoopy=new Snoopy();<br>$snoopy-&gt;fetch($value);<br>$temp=$snoopy-&gt;results;<br>//读取标题<br>if (!preg_match_all(&quot;/ &lt;h2&gt;(.</em>) &lt;\/h2&gt;/i&quot;,$temp,$tt))<br>{<br>echo &quot;no title&quot;;<br>exit;<br>}<br>else<br>{<br>$title[$u]=$tt[1][1];<br>}<br>unset($tt);<br>//读取内容<br>if (!preg_match<em>all(&quot;/ &lt;div id=\&quot;postmessage</em>[0-9]<em>\&quot; class=\&quot;t_msgfont\&quot;&gt;(.</em>) &lt;\/div&gt;/i&quot;,$temp,$tt))<br>{<br>echo &quot;no content2&quot;;<br>exit;<br>}<br>else<br>{<br>foreach ($tt[1] as $c=&gt;$c2)<br>{<br>$content[$u].=$c2;<br>}<br>}<br>}<br>$u++;<br>}<br>print_r($content);<br>}<br>$i++;<br>}<br>}<br>else<br>{<br>echo &quot;login failed&quot;;<br>exit;<br>}<br>?&gt;&lt;/div&gt;<br>&lt;div class=&quot;syntaxhighlighter nogutter  php&quot;&gt;[/php]<br></div><br></div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ftplet]]></title>
      <url>http://www.ibmer.info/ftplet.html</url>
      <content type="html"><![CDATA[<div id="rightColumn"><br><br># Ftplet<br><br>## Overview<br><br>The Ftplet API is a simple API used to handle different FtpServer notifications. Apache FtpServer is a Ftplet container, allowing administrators to deploy Ftplet to carry out a variety of complex FTP event handler tasks.<br><br>Implementing a custom Ftplet is generally a simple task, most of whose complexity lies in coding the actual work to be done by the Ftplet. This is largely due to the simplicity of the Ftplet interface and the fact that a DefaultFtplet class is provided as part of the Ftplet package.<br><br>The Ftplet interface supports two lifecycle methods to provide initialization (the init() method) and shutdown (the destroy() method). Main processing is done in different notification methods, which take a FtpSession object and a FtpRequest object. All the notification methods return FtpletResult object to indicate the future action.<br><br>There will be one instance of Ftplet object. Notification methods will be called from different connections running in different threads. So Ftplet implementation has to be thread-safe. Each connection will have its own request (FtpRequest) and session (FtpSession) objects.<br><br>## Main Classes<br><br>### FtpletResult<br><br>This class encapsulates the return values of the ftplet methods. There are four static FtpletResult values.<br><br><em>   <strong>DEFAULT</strong> : This return value indicates that the next ftplet method will be called. If no other ftplet is available, the FtpServer will process the request.
</em>   <strong>NO_FTPLET</strong> : This return value indicates that the other ftplet methods will not be called but the FtpServer will continue processing this request.<br><em>   <strong>SKIP</strong> : It indicates that the server will skip everything. No further processing will be done for this request.
</em>   <strong>DISCONNECT</strong> : It indicates that the server will skip and disconnect the client. No other request from the same client will be served.<br>So, DEFAULT &lt; NO_FTPLET &lt; SKIP &gt; DISCONNECT. If the Ftplet returns null, DEFAULT is assumed.<br><br>## FtpSession<br><br>The session object is kept for the entire user session. So the attributes set by setAttribute() will be always available later unless that attribute is removed. Different session will have different FtpSession objects. From here we can get user information, data streams, user file system view etc.<br><br>Ftplets can use this to send custom codes and messages to client.<br><br>## FtpRequest<br><br>Provides the client request information to a ftplet. Contains the FTP command and argument.<br><br>## Ftplet<br><br>There will be only one instance of Ftplet. During startup the Ftplets will be initialized. The initialization sequence is same as the Ftplet sequence in the configuration. Then all notification methods will be called and when the FtpServer goes down, the Ftplet will be destroyed. The following method describes all the notification methods.<br><table><br><thead><br><tr><br><th>Method</th><br><th>Description</th><br></tr><br></thead><br><tbody><br><tr><br><td>onConnect</td><br><td>Client connect notification method. This is the first method FtpServer will call. If it returns SKIP, IP restriction check, connection limit check will not be performed and the server will not send the welcome message (220).</td><br></tr><br><tr><br><td>onDisconnect</td><br><td>Client disconnect notification method. This is the last method FtpServer will call. Whatever it returns, the client connection will be closed.</td><br></tr><br><tr><br><td>beforeCommand</td><br><td>Called before the server invoke the command.</td><br></tr><br><tr><br><td>afterCommand</td><br><td>Called after the server as invoked the command.</td><br></tr><br></tbody><br></table><br><br>## DefaultFtplet<br><br>DefaultFtplet provides some convenience methods for common FTP commands. Users can easily extend the DefaultFtplet class and choose what methods to override and handle.<br><table><br><thead><br><tr><br><th>Method</th><br><th>Description</th><br></tr><br></thead><br><tbody><br><tr><br><td>onLogin</td><br><td>Client login notification method. This will be called after the user authentication. In this case the FtpServer has already sent the login OK (230) reply. This is called during FTP PASS request. The FTP session will be disconnected in the return value is FtpletResult.DISCONNECT.</td><br></tr><br><tr><br><td>onDeleteStart</td><br><td>Before file deletion this method will be called. Before this FtpServer will not check anything like file existence or permission. The requested file name can be get from request argument. We can get the file object from the request file system view. This is called in DELE FTP command. The method should send some responses (like 250, 450, 550) in case of SKIP return value. In this case, the server will skip the command processing and the ftplet has to send appropriate response values.</td><br></tr><br><tr><br><td>onDeleteEnd</td><br><td>This method will be called after the file deletion, successful or not. In this case the FtpServer has already sent the reply message. This is called in DELE FTP command.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>This method will be called before the file upload. The file name can be get from the request argument. We can get the data input stream from request. This will be called before the permission check. This is called during STOR command. If the method returns SKIP, it has to send responses before and after processing. For example, before opening the data input stream, the method has to notify the client with a response code 150. Similarly, after the data transfer, the method has to notify the client with a response code 226. In case of any error, the method should send different response codes like 450, 425, 426, 551.</td><br></tr><br><tr><br><td>onUploadEnd</td><br><td>This notification method will be called to indicate that the file transfer is successful and the server has send the replies. In case of any error this method will not be called. This is called in STOR command.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>This is file download request notification method called during RETR command. This will be called before the file download. We can get the file name argument from request. Similarly, the data output stream can be get from the request. This will be called before the file existance and permissoin check. If the method returns SKIP, it has to send responses before and after processing. For example, before opening the data output stream, the method has to notify the client with a response code 150. Similarly, after the data transfer, the method has to notify the client with a response code 226. In case of any error, the method should send different response codes like 450, 425, 426, 551.</td><br></tr><br><tr><br><td>onDownloadEnd</td><br><td>This notification method will be called to indicate that the file transfer is successful and the server has send the replies in RETR command.</td><br></tr><br><tr><br><td>onRmdirStart</td><br><td>Before directory deletion this method will be called during RMD command. Before this FtpServer will not check anything like directory existance or permission. The requested directory name can be get from request argument. If the method returns the SKIP, it has to send appropriate response codes to clients like 250, 450, 550.</td><br></tr><br><tr><br><td>onRmdirEnd</td><br><td>This method will be called after the invocation of the RMD command. In this case the FtpServer has already sent the reply message.</td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>Before directory creation this method will be called during MKD command. Before this FtpServer will not check anything like directory existance or permission. The requested directory name can be get from request argument. If it returns SKIP, it has to send appropriate response codes to clients like 250, 550.</td><br></tr><br><tr><br><td>onMkdirEnd</td><br><td>This method will be called if the directory creation is successful in MKD command. In this case the FtpServer has already sent the reply message.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>This is file append request notification method called in APPE command. The file name can be get from the request argument. We can get the data input stream from request. This will be called before the permission check. If the method returns SKIP, it has to send responses before and after processing. For example, before opening the data input stream, the method has to notify the client with a response code 150. Similarly, after the data transfer, the method has to notify the client with a response code 226. In case of any error, the method should send different response codes like 450, 425, 426, 551.</td><br></tr><br><tr><br><td>onAppendEnd</td><br><td>This is file append success notification method called in APPE command.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>This is unique file create request notification method called in STOU command. We can get the data input stream from request. This will be called before the permission check. If the method returns SKIP, it has to send responses before and after processing. For example, before opening the data input stream, the method has to notify the client with a response code 150. Similarly, after the data transfer, the method has to notify the client with a response code 226. In case of any error, the method should send different response codes like 450, 425, 426, 551.</td><br></tr><br><tr><br><td>onUploadUniqueEnd</td><br><td>This is unique file create success notification method called in STOU command. This notification method will be called to indicate the the server has send the replies.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>This is file rename start notification method called in RNTO command. This will be called before the file existance or permission check. The “rename from” file object can be get from request object. If it returns SKIP, it has to send appropriate response codes like 503, 553, 250.</td><br></tr><br><tr><br><td>onRenameEnd</td><br><td>This is file rename success notification method called in RNFR command. This will be called before the file existance or permission check. The “rename from” file object an be get from request object. This notification method will be called after the invocation of the RNTO command and the server has send the reply message.</td><br></tr><br><tr><br><td>onSite</td><br><td>This is SITE command start notification method. It gives a chance to implement custom SITE command. If this method returns SKIP or DISCONNECT, the existing SITE commands will not be executed.</td><br></tr><br></tbody><br></table><br><br>## Response Codes<br><br>This section gives an overview on different response codes which might be useful in developing custom ftplet. These commands might be used when the ftplet method return value is SKIP.<br><table><br><thead><br><tr><br><th>Method</th><br><th>Response Code</th><br><th>Description</th><br></tr><br></thead><br><tbody><br><tr><br><td>onConnect</td><br><td>220</td><br><td>Service ready for new user.</td><br></tr><br><tr><br><td>onConnect</td><br><td>530</td><br><td>No server access from the IP.</td><br></tr><br><tr><br><td>onConnect</td><br><td>530</td><br><td>Maximum server connection has been reached.</td><br></tr><br><tr><br><td>onDisconnect</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onLogin</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onDeleteStart</td><br><td>250</td><br><td>Requested file action okay</td><br></tr><br><tr><br><td>onDeleteStart</td><br><td>450</td><br><td>No permission to delete.</td><br></tr><br><tr><br><td>onDeleteStart</td><br><td>550</td><br><td>Not a valid file.</td><br></tr><br><tr><br><td>onDeleteStart</td><br><td>450</td><br><td>Can’t delete file.</td><br></tr><br><tr><br><td>onDeleteEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onUploadStart</td><br><td>150</td><br><td>File status okay; about to open data connection.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>226</td><br><td>Transfer complete.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>550</td><br><td>Invalid path.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>550</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>425</td><br><td>Can’t open data connection.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>426</td><br><td>Data connection error.</td><br></tr><br><tr><br><td>onUploadStart</td><br><td>551</td><br><td>Error on output file.</td><br></tr><br><tr><br><td>onUploadEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>150</td><br><td>File status okay; about to open data connection.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>226</td><br><td>Transfer complete.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>550</td><br><td>No such file or directory.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>550</td><br><td>Not a plain file.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>550</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>425</td><br><td>Can’t open data connection.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>426</td><br><td>Data connection error.</td><br></tr><br><tr><br><td>onDownloadStart</td><br><td>551</td><br><td>Error on input file.</td><br></tr><br><tr><br><td>onDownloadEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onRmdirStart</td><br><td>250</td><br><td>Directory removed.</td><br></tr><br><tr><br><td>onRmdirStart</td><br><td>550</td><br><td>Not a valid directory.</td><br></tr><br><tr><br><td>onRmdirStart</td><br><td>550</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onRmdirStart</td><br><td>550</td><br><td>Can’t remove directory.</td><br></tr><br><tr><br><td>onRmdirEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>250</td><br><td>Directory created.</td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>550</td><br><td>Not a valid file.</td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>550</td><br><td>Permission denied</td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>550</td><br><td>Directory already exists.</td><br></tr><br><tr><br><td>onMkdirStart</td><br><td>550</td><br><td>Can’t create directory.</td><br></tr><br><tr><br><td>onMkdirEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onAppendStart</td><br><td>150</td><br><td>File status okay; about to open data connection.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>226</td><br><td>Transfer complete.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>550</td><br><td>Not a plain file.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>550</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>425</td><br><td>Can’t open data connection.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>426</td><br><td>Data connection error.</td><br></tr><br><tr><br><td>onAppendStart</td><br><td>551</td><br><td>Error on output file.</td><br></tr><br><tr><br><td>onAppendEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>150</td><br><td>File status okay; about to open data connection.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>250</td><br><td>filename: Transfer started.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>226</td><br><td>filename: Transfer complete.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>550</td><br><td>Unique file name error.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>550</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>425</td><br><td>Can’t open data connection.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>426</td><br><td>Data connection error.</td><br></tr><br><tr><br><td>onUploadUniqueStart</td><br><td>551</td><br><td>Error on output file.</td><br></tr><br><tr><br><td>onUploadUniqueEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onRenameStart</td><br><td>250</td><br><td>Requested file action okay, file renamed.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>503</td><br><td>Can’t find the file which has to be renamed.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>553</td><br><td>Not a valid file name.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>553</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>553</td><br><td>No such file or directory.</td><br></tr><br><tr><br><td>onRenameStart</td><br><td>553</td><br><td>Can’t rename file.</td><br></tr><br><tr><br><td>onRenameEnd</td><br><td></td><br><td></td><br></tr><br><tr><br><td>onSite</td><br><td>200</td><br><td>Command SITE okay.</td><br></tr><br><tr><br><td>onSite</td><br><td>530</td><br><td>Permission denied.</td><br></tr><br><tr><br><td>onSite</td><br><td>502</td><br><td>Not implemented.</td><br></tr><br><tr><br><td>onSite</td><br><td>500</td><br><td>Execution failed.</td><br></tr><br></tbody><br></table><br><br>## Configuration<br><br>Ftplet will get the Ftplet specific configuration as the init() method argument.<br><br>## Implementation<br><br>Ftplets are regular POJOs. If running the server as embedded they can be added to the FtpletContainer as normal instances of the object. If using the XML configuration, they are configured and Spring beans within the ftplets element. Here’s an example:<br><div class="codehilite"><br><pre><span class="nt">&lt;ftplets&gt;</span><br>    <span class="nt">&lt;ftplet</span> <span class="na">name=</span><span class="s">“ftplet1”</span><span class="nt">&gt;</span><br>        <span class="nt">&lt;beans:bean</span> <span class="na">class=</span><span class="s">“org.apache.ftpserver.examples.MyFtplet”</span><span class="nt">&gt;</span><br>            <span class="nt">&lt;beans:property</span> <span class="na">name=</span><span class="s">“foo”</span> <span class="na">value=</span><span class="s">“123”</span> <span class="nt">/&gt;</span><br>        <span class="nt">&lt;/beans:bean&gt;</span><br>    <span class="nt">&lt;/ftplet&gt;</span><br><span class="nt">&lt;/ftplets&gt;</span><br></pre><br></div>

<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>The Ftplet must be added to Apache FtpServer classpath so that the Ftplet can be loaded. There are three ways you can do that.</p>
<ol>
<li>Modify your system CLASSPATH environment variable to include your ftplet classes.</li>
<li>Copy your ftplet class files (unpacked) in the common/classes bdirectory of the FtpServer installation.</li>
<li>Place a jar file containing the custom ftplet class files in the common/lib subdirectory of the FtpServer installation.<br></li></ol></div>

]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Launchpad Does Not Work With Firefox version 10+]]></title>
      <url>http://www.ibmer.info/ilmt-redhat-browser-no-found.html</url>
      <content type="html"><![CDATA[<h2 id="在Redhat6-4中安装ILMT7-2-2-会提示browser没有安装。"><a href="#在Redhat6-4中安装ILMT7-2-2-会提示browser没有安装。" class="headerlink" title="在Redhat6.4中安装ILMT7.2.2,会提示browser没有安装。"></a>在Redhat6.4中安装ILMT7.2.2,会提示browser没有安装。</h2><p>可以通过下面方法修复。</p>
<p>&nbsp;</p>
<h2 id="Problem-Abstract"><a href="#Problem-Abstract" class="headerlink" title="Problem(Abstract)"></a>Problem(Abstract)</h2><p>When you try to install using the Launchpad, the Launchpad does not open. Instead, a supported browser error message is shown.</p>
<h2 id="Symptom"><a href="#Symptom" class="headerlink" title="Symptom"></a>Symptom</h2><div class="ibm-domino-rtf"><br><br>The error message contains the following text:<br><tt><br>Unable to find supported browser</tt><br><br><tt><br>An error occurred while starting the launchpad. This error typically occurs when the launchpad is unable to find a supported browser</tt>.<br><br></div>

<h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><div class="ibm-domino-rtf"><br><br>When Firefox has been updated to Version 10 or later, the Launchpad cannot identify it as having been installed.<br><br></div>

<h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><div class="ibm-domino-rtf"><br><br>Unix/Linux<br><br></div>

<h2 id="Diagnosing-the-problem"><a href="#Diagnosing-the-problem" class="headerlink" title="Diagnosing the problem"></a>Diagnosing the problem</h2><div class="ibm-domino-rtf"><br><br>Use the <tt>firefox -version</tt> command to determine the exact version of Firefox that you have installed.<br><br></div>

<h2 id="Resolving-the-problem"><a href="#Resolving-the-problem" class="headerlink" title="Resolving the problem"></a>Resolving the problem</h2><div class="ibm-domino-rtf"><br><br>To get the Launchpad working in different versions, you need to edit the <tt>&lt;install_root&gt;/launchpad/browser.sh</tt> command so that it contains the following additional strings in the supportedFirefoxVersion case statement:<br><br>The function should then look like this:<br><tt>supportedFirefoxVersion()</tt><br><br><tt>{</tt><br><tt>       case “$<em>“ in</em></tt><br><tt>               Firefox\ [1-9].<em>) return 0;;</em></tt><br><tt>               Firefox/[1-9].<em>) return 0;;</em></tt><br><tt>               Firefox\ [1-9][0-9].<em>) return 0;;</em></tt><br><tt>               Firefox\ 1[0-9].*) return 0;;</tt><br><tt> …</tt><br><br></div>]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ilmt </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DB2 install on redhat64]]></title>
      <url>http://www.ibmer.info/db2-install-on-redhat64.html</url>
      <content type="html"><![CDATA[<p>db2安装时候，报相关包错误，</p>
<p>[shell]</p>
<p>[root@localhost server]# ./db2setup -r /root/db2/db2.rsp<br>WARNING:<br> The 32 bit library file libstdc++.so.6 is not found on the system.<br> 32-bit applications may be affected.<br>WARNING:<br> The required library file libstdc++.so.5 is not found on the system.<br>WARNING:<br>DBT3534W The db2prereqcheck utility determined that ASLR is set to ON and that this could cause issues with some tools.<br>WARNING:<br> The 32-bit library file libpam.so is not found on the system.<br> Check the following web site for the up-to-date system requirements<br> of IBM DB2 9.7<br> <a href="http://www.ibm.com/software/data/db2/udb/sysreqs.html" target="_blank" rel="external">http://www.ibm.com/software/data/db2/udb/sysreqs.html</a><br> <a href="http://www.software.ibm.com/data/db2/linux/validate" target="_blank" rel="external">http://www.software.ibm.com/data/db2/linux/validate</a><br> Aborting the current installation …<br> Run installation with the option &quot;-f sysreq&quot; parameter to force the installation.</p>
<p>[/shell]</p>
<p>1.执行db2_install的时候报了错，安装通过了，后来发现解压包下有个预检的脚本，拿来重新执行了下<br>[root@localhost lib64]# /server/db2prereqcheck<br>WARNING:<br>The 32 bit library file libstdc++.so.6 is not found on the system.<br>32-bit applications may be affected.</p>
<p>2.安装库文件<br>[root@localhost lib64]# yum install libstdc++.so.6<br>………………..<br>Complete!</p>
<p>3.再次执行[root@localhost server]# ./db2prereqcheck就没有报错了</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DB2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Redhat中安装Centos YUM]]></title>
      <url>http://www.ibmer.info/redhat-centos-yum.html</url>
      <content type="html"><![CDATA[<p>Redhat Linux通常由于没有注册，导致yum程序无法使用，需要将其替换为centos的yum程序。</p>
<p>1. 下载Yum的安装包,由于体系结构的不同和包的更新，因此目录和文件名的版本号可能需要调整以下。</p>
<p><a href="http://centos.ustc.edu.cn/centos/" target="_blank" rel="external">http://centos.ustc.edu.cn/centos/</a><br>对应版本下载不同yum版本<br>都是在Packages中</p>
<p>2. 查出当前的yum程序，进行卸载</p>
<p>#rpm -qa | grep yum<br>然后删除</p>
<h1 id="rpm-e-yum-XXX-–nodeps"><a href="#rpm-e-yum-XXX-–nodeps" class="headerlink" title="rpm -e yum-XXX –nodeps"></a>rpm -e yum-XXX –nodeps</h1><p>3. 下载并导入KEY</p>
<p><a href="http://centos.ustc.edu.cn/centos/" target="_blank" rel="external">http://centos.ustc.edu.cn/centos/</a><br>对应版本下载对应key</p>
<h1 id="cd-etc-pki-rpm-gpg"><a href="#cd-etc-pki-rpm-gpg" class="headerlink" title="cd /etc/pki/rpm-gpg/"></a>cd /etc/pki/rpm-gpg/</h1><h1 id="wget-http-mirrors-sohu-com-centos-RPM-GPG-KEY-CentOS-5"><a href="#wget-http-mirrors-sohu-com-centos-RPM-GPG-KEY-CentOS-5" class="headerlink" title="wget http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-5"></a>wget <a href="http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-5" target="_blank" rel="external">http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-5</a></h1><h1 id="rpm-–import-etc-pki-rpm-gpg-RPM-GPG-KEY"><a href="#rpm-–import-etc-pki-rpm-gpg-RPM-GPG-KEY" class="headerlink" title="rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY*"></a>rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY*</h1><p>4. 安装yum安装包<br>rpm -ivh yum-*</p>
<p>5. 修改配置文件</p>
<p>vi /etc/yum.repos.d/rhel-debuginfo.repo</p>
<p>[shell]</p>
<p>[base]<br>name=Red Hat Enterprise Linux 6 -Base<br>baseurl=<a href="http://mirrors.sohu.com/centos/6.5/os/x86_64/" target="_blank" rel="external">http://mirrors.sohu.com/centos/6.5/os/x86_64/</a><br>gpgcheck=1</p>
<p>[update]<br>name=Red Hat Enterprise Linux 6 -Updates<br>baseurl=<a href="http://mirrors.sohu.com/centos/6.5/updates/x86_64/" target="_blank" rel="external">http://mirrors.sohu.com/centos/6.5/updates/x86_64/</a><br>gpgcheck=1</p>
<p>[extras]<br>name=Red Hat Enterprise Linux 6 -Extras<br>baseurl=<a href="http://mirrors.sohu.com/centos/6.5/extras/x86_64/" target="_blank" rel="external">http://mirrors.sohu.com/centos/6.5/extras/x86_64/</a><br>gpgcheck=1</p>
<p>[addons]<br>name=Red Hat Enterprise Linux 6 -Addons<br>baseurl=<a href="http://mirrors.sohu.com/centos/6.5/addons/x86_64/" target="_blank" rel="external">http://mirrors.sohu.com/centos/6.5/addons/x86_64/</a><br>gpgcheck=1</p>
<p>[/shell]</p>
<p>至此yum安装完成，可以 yum install 安装程序了, 注意不同版本跟换不同路径</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Apache ftpServer的安装与配置(配置保存在数据库)]]></title>
      <url>http://www.ibmer.info/apache-ftpserver-mysql.html</url>
      <content type="html"><![CDATA[<p>1 下载ftpServer，目前最新版本是1.0.6，地址<a href="http://mina.apache.org/ftpserver-project/downloads.html" target="_blank" rel="external">http://mina.apache.org/ftpserver-project/downloads.html</a></p>
<p>2 解压缩：tar -zvxf  ftpserver-1.0.6.tar.gz</p>
<p>3 进入配置文件目录：cd apache-ftpserver-1.0.6/res/conf</p>
<p>4 配置用户登录信息</p>
<p>（1）使用文件进行用户登录验证</p>
<p>修改文件 users.properties（其中蓝色字体为用户名，红色字体为密码）<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.userpassword=<span style="color: #ff0000;">admin</span><br>ftpserver.user.<span style="color: #0000ff;">admin</span>.homedirectory=./res/home<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.enableflag=true<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.writepermission=true<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.maxloginnumber=0<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.maxloginperip=0<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.idletime=0<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.uploadrate=0<br>ftpserver.user.<span style="color: #0000ff;">admin</span>.downloadrate=0</p>
<p>ftpserver.user.anonymous.userpassword=<br>ftpserver.user.anonymous.homedirectory=./res/home<br>ftpserver.user.anonymous.enableflag=true<br>ftpserver.user.anonymous.writepermission=false<br>ftpserver.user.anonymous.maxloginnumber=20<br>ftpserver.user.anonymous.maxloginperip=2<br>ftpserver.user.anonymous.idletime=300<br>ftpserver.user.anonymous.uploadrate=4800</p>
<p>执行命令：cp ftpd-typical.xml ftpd-file.xml</p>
<p>修改文件文件ftpd-file.xml，其中红色字体为修改部分，密码加密方式修改为clear</p>
<p>&lt;server xmlns=”<a href="http://mina.apache.org/ftpserver/spring/v1" target="_blank" rel="external">http://mina.apache.org/ftpserver/spring/v1</a>“<br>xmlns:xsi=”<a href="http://www.w3.org/2001/XMLSchema-instance" target="_blank" rel="external">http://www.w3.org/2001/XMLSchema-instance</a>“<br>xsi:schemaLocation=”<br><a href="http://mina.apache.org/ftpserver/spring/v1" target="_blank" rel="external">http://mina.apache.org/ftpserver/spring/v1</a> <a href="http://mina.apache.org/ftpserver/ftpserver-1.0.xsd" target="_blank" rel="external">http://mina.apache.org/ftpserver/ftpserver-1.0.xsd</a><br>“<br>id=”myServer”&gt;<br>&lt;listeners&gt;<br>&lt;nio-listener name=”default” port=”2121”&gt;<br>&lt;ssl&gt;<br>&lt;keystore file=”./res/ftpserver.jks” password=”password” /&gt;<br>&lt;/ssl&gt;<br>&lt;/nio-listener&gt;<br>&lt;/listeners&gt;<br>&lt;file-user-manager file=”./res/conf/users.properties”  <span style="color: #ff0000; font-family: Calibri; font-size: small;">encrypt-passwords = “clear” </span>/&gt;<br>&lt;/server&gt;</p>
<p>退回目录apache-ftpserver-1.0.6/，启动ftp服务 sh bin/ftpd.sh res/conf/ftpd-file.xml</p>
<p>执行：ftp 127.0.0.1 2121     输入用户和密码：admin    admin</p>
<p>（2）使用数据库进行验证，这里数据库选用mysql</p>
<p>选定一个数据库（这里使用ftpserver），根据文件apache-ftpserver-1.0.6/res/ftp-db.sql中的命令创建数据库</p>
<p>在数据库中增加一条记录：insert into FTP_USER values(“user1”,”123456”,”./res/home/user1”,1,0,0,0,0,0,0);</p>
<p>创建配置文件：</p>
<p>cd apache-ftpserver-1.0.6/res/conf</p>
<p>cp ftpd-typical.xml ftpd-db.xml</p>
<p>修改配置文件ftpd-db.xml</p>
<p>&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;<br>&lt;!–<br>Licensed to the Apache Software Foundation (ASF) under one or more<br>contributor license agreements. See the NOTICE file distributed with<br>this work for additional information regarding copyright ownership.<br>The ASF licenses this file to you under the Apache License, Version<br>2.0 (the “License”); you may not use this file except in compliance<br>with the License. You may obtain a copy of the License at<br><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="external">http://www.apache.org/licenses/LICENSE-2.0</a> Unless required by<br>applicable law or agreed to in writing, software distributed under the<br>License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR<br>CONDITIONS OF ANY KIND, either express or implied. See the License for<br>the specific language governing permissions and limitations under the<br>License.<br>–&gt;<br>&lt;server xmlns=”<a href="http://mina.apache.org/ftpserver/spring/v1" target="_blank" rel="external">http://mina.apache.org/ftpserver/spring/v1</a>“<br>xmlns:xsi=”<a href="http://www.w3.org/2001/XMLSchema-instance" target="_blank" rel="external">http://www.w3.org/2001/XMLSchema-instance</a>“<br><span style="color: #ff0000;"> xmlns:beans=”</span><a href="http://www.springframework.org/schema/beans" target="_blank" rel="external"><span style="color: #ff0000;">http://www.springframework.org/schema/beans</span></a><span style="color: #ff0000;">“<br>xsi:schemaLocation=”<br></span><a href="http://www.springframework.org/schema/beans" target="_blank" rel="external"><span style="color: #ff0000;">http://www.springframework.org/schema/beans</span></a><br><span style="color: #ff0000;">           </span><a href="http://www.springframework.org/schema/beans/spring-beans-2.5.xsd" target="_blank" rel="external"><span style="color: #ff0000;">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></a><br><span style="color: #ff0000;">           </span><a href="http://mina.apache.org/ftpserver/spring/v1" target="_blank" rel="external"><span style="color: #ff0000;">http://mina.apache.org/ftpserver/spring/v1</span></a><br><span style="color: #ff0000;">           </span><a href="http://mina.apache.org/ftpserver/ftpserver-1.0.xsd" target="_blank" rel="external"><span style="color: #ff0000;">http://mina.apache.org/ftpserver/ftpserver-1.0.xsd</span></a><br>“<br>id=”myServer”&gt;<br>&lt;listeners&gt;<br>&lt;nio-listener name=”default” port=”2121”&gt;<br>&lt;ssl&gt;<br>&lt;keystore file=”./res/ftpserver.jks” password=”password” /&gt;<br>&lt;/ssl&gt;<br>&lt;/nio-listener&gt;<br>&lt;/listeners&gt;<br><span style="color: #339966;">&lt;!–<br>&lt;file-user-manager file=”./res/conf/users.properties” /&gt;<br>–&gt;<br></span>        &lt;db-user-manager <span style="color: #ff0000;">encrypt-passwords = “clear”&gt;<br></span>                &lt;data-source&gt;<br>&lt;beans:bean class=”org.apache.commons.dbcp.BasicDataSource”&gt;<br>&lt;beans:property name=”driverClassName” value=”com.mysql.jdbc.Driver” /&gt;<br>&lt;beans:property name=”url” value=”jdbc:mysql://<span style="color: #ff0000;">localhost</span>/<span style="color: #ff0000;">ftpserver</span>“ /&gt;<br>&lt;beans:property name=”username” value=”<span style="color: #ff0000;">root</span>“ /&gt;<br>&lt;beans:property name=”password” value=”<span style="color: #ff0000;">123456</span>“ /&gt;<br>&lt;/beans:bean&gt;<br>&lt;/data-source&gt;<br>&lt;insert-user&gt;INSERT INTO FTP_USER (userid, userpassword,<br>homedirectory, enableflag, writepermission, idletime, uploadrate,<br>downloadrate) VALUES (‘{userid}’, ‘{userpassword}’,<br>‘{homedirectory}’,<br>{enableflag}, {writepermission}, {idletime},<br>{uploadrate},<br>{downloadrate})<br>&lt;/insert-user&gt;<br>&lt;update-user&gt;UPDATE FTP_USER SET<br>userpassword=’{userpassword}’,homedirectory=’{homedirectory}’,enableflag={enableflag},writepermission={writepermission},idletime={idletime},uploadrate={uploadrate},downloadrate={downloadrate}<br>WHERE userid=’{userid}’<br>&lt;/update-user&gt;<br>&lt;delete-user&gt;DELETE FROM FTP_USER WHERE userid = ‘{userid}’<br>&lt;/delete-user&gt;<br>&lt;select-user&gt;SELECT userid, userpassword, homedirectory,<br>enableflag, writepermission, idletime, uploadrate, downloadrate,<br>maxloginnumber, maxloginperip FROM<br>FTP_USER WHERE userid = ‘{userid}’<br>&lt;/select-user&gt;<br>&lt;select-all-users&gt;SELECT userid FROM FTP_USER ORDER BY userid<br>&lt;/select-all-users&gt;<br>&lt;is-admin&gt;SELECT userid FROM FTP_USER WHERE userid=’{userid}’<br>AND<br>userid=’admin’<br>&lt;/is-admin&gt;<br>&lt;authenticate&gt;SELECT userpassword from FTP_USER WHERE<br>userid=’{userid}’&lt;/authenticate&gt;<br>&lt;/db-user-manager&gt;<br>&lt;/server&gt;<br>说明：server属性部分的红色字体一定要写，否则就会找不到beans，报错：The prefix “beans” for element “beans:bean” is not bound；db-user-manager 的属性部分的红色字体一定要写，这里的密码加密方式为clear，否则会登录不成功；下面的红色字体分别表示<span style="color: #ff0000;">localhost<span style="color: #000000;">（数据库所在的ip地址），</span>ftpserver<span style="color: #000000;">（数据库名称），</span>root<span style="color: #000000;">（连接数据库的用户名），</span>123456</span><span style="color: #000000;">（连接数据库密码）；绿色字体表示使用文件登录，需要注释掉。</span></p>
<p><span style="color: #000000;">增加数据库连接需要使用的jar，下载3个jar包</span><span style="color: #000000;">到目录apache-ftpserver-1.0.6/common/lib： commons-dbcp-1.2.2.jar、commons-pool-1.3.jar、mysql-connector-java-3.1.13-bin.jar</span></p>
<p><span style="color: #000000;">进入目录apache-ftpserver-1.0.6，启动服务：sh bin/ftpd.sh res/conf/ftpd-db.xml</span></p>
<p>执行：ftp 127.0.0.1 2121     输入用户和密码：user1  123456</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Apache FTPServer 集成到Spring(S2SH) WEB项目中]]></title>
      <url>http://www.ibmer.info/apache-ftpserver-s2sh.html</url>
      <content type="html"><![CDATA[<p><span style="color: #000000;">Apache FTPServer可以集成到自己的WEB项目中，单独用也非常不错。</span></p>
<p><span style="color: #000000;">测试了一下和Spring WEB项目结合。留下代码如下：</span></p>
<p>[xml]</p>
<p>&lt;listener&gt;<br>&lt;listener-class&gt;com.strong.utils.ftpservice.FtpServerListener&lt;/listener-class&gt;<br>&lt;/listener&gt;<br>&lt;context-param&gt;<br>&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br>&lt;param-value&gt;<br>/WEB-INF/classes/com/strong/spring/applicationFTP.xml<br>&lt;/param-value&gt;<br>&lt;/context-param&gt;</p>
<p>[/xml]</p>
<p>FtpServerListener.java</p>
<p>[java]<br>package ibmer.info.ftp;</p>
<p>import javax.servlet.ServletContextEvent;<br>import javax.servlet.ServletContextListener;</p>
<p>import org.apache.ftpserver.impl.DefaultFtpServer;<br>import org.springframework.web.context.WebApplicationContext;<br>import org.springframework.web.context.support.WebApplicationContextUtils;</p>
<p>public class FtpServerListener implements ServletContextListener {<br>    public void contextDestroyed(ServletContextEvent contextEvent) {<br>        System.out.println(&quot;Stopping FtpServer&quot;);<br>        DefaultFtpServer server = (DefaultFtpServer) contextEvent<br>                .getServletContext().getAttribute(&quot;FTPSERVER_CONTEXT_NAME&quot;);<br>        if (server != null) {<br>            server.stop();<br>            contextEvent.getServletContext().removeAttribute(<br>                    &quot;FTPSERVER_CONTEXT_NAME&quot;);<br>            System.out.println(&quot;FtpServer stopped&quot;);<br>        } else {<br>            System.out.println(&quot;No running FtpServer found&quot;);<br>        }<br>    }</p>
<pre><code>public void contextInitialized(ServletContextEvent contextEvent) {
    System.out.println(&amp;quot;Starting FtpServer&amp;quot;);
    WebApplicationContext ctx = WebApplicationContextUtils
            .getWebApplicationContext(contextEvent.getServletContext());
    DefaultFtpServer server = (DefaultFtpServer) ctx.getBean(&amp;quot;myServer&amp;quot;);
    contextEvent.getServletContext().setAttribute(&amp;quot;FTPSERVER_CONTEXT_NAME&amp;quot;,
            server);
    try {
        server.start();
        System.out.println(&amp;quot;FtpServer started&amp;quot;);
    } catch (Exception e) {
        throw new RuntimeException(&amp;quot;Failed to start FtpServer&amp;quot;, e);
    }
}
</code></pre><p>}<br>[/java]</p>
<p>application-FTP.xml</p>
<p>[xml]<br>&lt;server xmlns=&quot;<a href="http://mina.apache.org/ftpserver/spring/v1&amp;quot" target="_blank" rel="external">http://mina.apache.org/ftpserver/spring/v1&amp;quot</a>; xmlns:xsi=&quot;<a href="http://www.w3.org/2001/XMLSchema-instance&amp;quot" target="_blank" rel="external">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>; xsi:schemaLocation=&quot;<a href="http://mina.apache.org/ftpserver/spring/v1" target="_blank" rel="external">http://mina.apache.org/ftpserver/spring/v1</a> <a href="http://mina.apache.org/ftpserver/ftpserver-1.0.xsd&amp;quot" target="_blank" rel="external">http://mina.apache.org/ftpserver/ftpserver-1.0.xsd&amp;quot</a>;<br>  id=&quot;StrongFTP&quot; max-logins=&quot;500&quot; anon-enabled=&quot;false&quot; max-anon-logins=&quot;123&quot; max-login-failures=&quot;124&quot; login-failure-delay=&quot;125&quot;&gt;<br>  &lt;listeners&gt;<br>    &lt;nio-listener name=&quot;default&quot; port=&quot;2222&quot; implicit-ssl=&quot;false&quot; idle-timeout=&quot;60&quot; local-address=&quot;127.0.0.1&quot; /&gt;<br>  &lt;/listeners&gt;<br>  &lt;file-user-manager file=&quot;users.properties&quot; encrypt-passwords=&quot;true&quot; /&gt;<br>&lt;/server&gt;<br>[/xml]</p>
<p>在web.xml中调用application-FTP.xml或者在spring中import这个xml。</p>
<p>[xml]<br> &lt;context-param&gt;<br> &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br> &lt;param-value&gt;<br> classpath<em>:applicationContext</em>.xml<br> &lt;/param-value&gt;<br> &lt;/context-param&gt;<br>[/xml]</p>
<p>具体参数就不解释了，大家看文档。</p>
<p>原理是做一个ServletContextListener，tomcat启动时开始ftp服务器，结束时停止ftp服务器。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ILMT agent 7.2.2按虚拟机Redhat6.4中安装，CODAG104W警告]]></title>
      <url>http://www.ibmer.info/ilmt-agent-7-2-2-on-redhat.html</url>
      <content type="html"><![CDATA[<p>安装命令<br>rpm -Uvh ILMT-TAD4D-agent-7.2.2-linux-x86.rpm</p>
<p>[shell]</p>
<h1 id="rpm-Uvh-ILMT-TAD4D-agent-7-2-2-linux-x86-rpm"><a href="#rpm-Uvh-ILMT-TAD4D-agent-7-2-2-linux-x86-rpm" class="headerlink" title="rpm -Uvh ILMT-TAD4D-agent-7.2.2-linux-x86.rpm"></a>rpm -Uvh ILMT-TAD4D-agent-7.2.2-linux-x86.rpm</h1><p>準備中… ########################################### [100%]<br>1:ILMT-TAD4D-agent       ########################################### [100%]<br>CODAG104W VMware Tools are not installed. In some cases agent may not report proper topology.<br>CODAG010I The command has successfully executed.<br>#<br>[/shell]</p>
<p>※<br>仮想マシンにVMware Toolsをインストールしているにも関わらず、警告メッセージが出力されることがあります。</p>
<p>vmware tools即使安装了，也是可能提示CODAG104W这个安装警告，大家忽略就好。</p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=jpn1J1002437&amp;aid=2" target="_blank" rel="external">可以参考官方文档</a></p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ilmt </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ESXi4.1 相关下载信息]]></title>
      <url>http://www.ibmer.info/esxi4-1-download.html</url>
      <content type="html"><![CDATA[<p>VMware-VMvisor-Installer-4.1.0.update1-348481.x86_64，也就是ESXi4.1UPdata1，安装也是非常的简单。<br>安装完后<br>1、在主机上设置好IP，<br>2、在任意一台PC机上连接：<a href="http://X.X.X.X,可以看到如下图" target="_blank" rel="external">http://X.X.X.X,可以看到如下图</a></p>
<p>VMware ESXi 4.1WelcomeGetting Started<br>If you need to access this host remotely, use the following program to install vSphere Client software. After running the installer, start the client and log in to this host.<br>Download vSphere Client<br>To streamline your IT operations with vSphere, use the following program to install vCenter. vCenter will help you consolidate and optimize workload distribution across ESX hosts, reduce new system deployment time from weeks to seconds, monitor your virtual computing environment around the clock, avoid service disruptions due to planned hardware maintenance or unexpected failure, centralize access control, and automate system administration tasks.<br>Download VMware vCenter<br>If you need more help, please refer to our documentation library:<br>vSphere 4.1 Documentation<br>For AdministratorsvSphere Remote Command Line<br>The Remote Command Line allows you to use command line tools to manage vSphere from a client machine. These tools can be used in shell scripts to automate day-to-day operations.<br>Download the Virtual Appliance<br>Download the Windows Installer (exe)<br>Download the Linux Installer (tar.gz)<br>Web-Based Datastore Browser<br>Use your web browser to find and download files (for example, virtual machine and virtual disk files).<br>For DevelopersvSphere Web Services SDK<br>Learn about our latest SDKs, Toolkits, and APIs for managing VMware ESX, ESXi, and VMware vCenter. Get sample code, reference documentation, participate in our Forum Discussions, and view our latest Sessions and Webinars.<br>unable to connect the mks:could not connect to pipe</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vmware </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android微信分享到朋友圈-通过微信SDK发布]]></title>
      <url>http://www.ibmer.info/android-wechat-share-sdk.html</url>
      <content type="html"><![CDATA[<p>[java]<br>WXImageObject imgObj = new WXImageObject();<br>imgObj.setImagePath(path);</p>
<p>WXMediaMessage msg = new WXMediaMessage();<br>msg.mediaObject = imgObj;</p>
<p>Bitmap bmp = BitmapFactory.decodeFile(path);<br>Bitmap thumbBmp = Bitmap.createScaledBitmap(bmp, THUMB_SIZE, THUMB_SIZE, true);<br>bmp.recycle();<br>msg.thumbData = Util.bmpToByteArray(thumbBmp, true);</p>
<p>SendMessageToWX.Req req = new SendMessageToWX.Req();<br>req.transaction = buildTransaction(&quot;img&quot;);<br>req.message = msg;<br>req.scene =  SendMessageToWX.Req.WXSceneTimeline ;<br>api.sendReq(req);<br>[/java]</p>
<p>以上代码可以分享一张图片到微信朋友圈</p>
<p>那么能否一次发布多张图片呢？？<br>现在SDK版本是不能处理多个图片。<br>通过查看源代码，发现有下面内容：</p>
<p>[java]<br>public static final int TYPE_UNKNOWN = 0;<br>public static final int TYPE_TEXT = 1;<br>public static final int TYPE_IMAGE = 2;<br>public static final int TYPE_MUSIC = 3;<br>public static final int TYPE_VIDEO = 4;<br>public static final int TYPE_URL = 5;<br>public static final int TYPE_FILE = 6;<br>public static final int TYPE_APPDATA = 7;<br>public static final int TYPE_EMOJI = 8;<br>SDK 通过Bundle来传递数据，用&lt;key,value&gt;记录每种数据类型，并且都是单条的记录，如图片数据 WXImageObject ：</p>
<p>paramBundle.putByteArray(&quot;_wximageobject_imageData&quot;, this.imageData);<br>paramBundle.putString(&quot;_wximageobject_imagePath&quot;, this.imagePath);<br>paramBundle.putString(&quot;_wximageobject_imageUrl&quot;, this.imageUrl);<br>[/java]</p>
<p>只有单一的 imageData ！！！所以不能支持多个图片！</p>
<p>通过系统调用分享到朋友圈，<a href="http://www.ibmer.info/android-wechat-share.html" title="Android微信分享到朋友圈">可以参考</a>.</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
            <tag> 微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android微信分享到朋友圈]]></title>
      <url>http://www.ibmer.info/android-wechat-share.html</url>
      <content type="html"><![CDATA[<p>随着微信越来越火，越来越多的应用要求有分享到微信的功能。虽然有很多平台都帮集成有分享功能，比如友盟。但是个人觉得友盟集成的东西太多了，自己封装得太过分了，很多资源文件也要带进去，所以感觉不是怎么好，所以自己也研究了一下微信的调用其SDK分享。下面说说步骤。</p>
<p>第一：下载官方的sdk demo。</p>
<p>下载地址：<a href="http://open.weixin.qq.com/download/?lang=zh_CN" target="_blank" rel="external">http://open.weixin.qq.com/download/?lang=zh_CN</a></p>
<p>第二：解压，并将工程导入到eclipse</p>
<p>解压出来的时候，发现根目录下有一个debug.keystore文件，这个文件很关键的哦。</p>
<p>然后我们运行看看，你会发现分享根本就不成功，是微信原因吗，当然不是。</p>
<p>第三：在上面说到项目的根目录下有一个debug.keystore文件，因为我们编译、签名apk的时候，用的是我们自带的那个debug.keystore，每台电脑都是不一样的签名文件，而且微信那个APP_ID已经签名文件debug.keystore绑定了的，所以为什么我们直接运行时候是不成功的。</p>
<p>解决方法就是将微信的那个debug.keystore拷贝到我们电脑默认的那个debug.keystore位置，将其覆盖（建议先备份）。</p>
<p>在window系统，这个签名文件在c:\用户\你的用户名.android目录下（注意.android文件夹默认是隐藏的）。</p>
<p>再次运行，分享就成功了。<br>如果是我们的应用，将APP_ID替换成我们在官网上面申请的APP_ID就行了。<br>其实我们分享信息到微信，还有一种更简单的方法，不用其提供的SDK API，直接调用微信相关的Activity，这样更加省事，例如：</p>
<p>[java]<br>/**</p>
<pre><code> * 分享信息到朋友
 *
 * @param file,假如图片的路径为path，那么file = new File(path);
 */
private void shareToFriend(File file) {
    Intent intent = new Intent();
    ComponentName componentName = new ComponentName(&amp;quot;com.tencent.mm&amp;quot;, &amp;quot;com.tencent.mm.ui.tools.ShareImgUI&amp;quot;);
    intent.setComponent(componentName);
    intent.setAction(Intent.ACTION_SEND);
    intent.setType(&amp;quot;image/*&amp;quot;);
    intent.putExtra(Intent.EXTRA_TEXT, &amp;quot;测试微信&amp;quot;);
    intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file));
    startActivity(intent);
}
</code></pre><p>[/java]</p>
<p>&nbsp;</p>
<p>[java]<br>/**</p>
<pre><code> * 分享信息到朋友圈
 *
 * @param file，假如图片的路径为path，那么file = new File(path);
 */
private void shareToTimeLine(File file) {
    Intent intent = new Intent();
    ComponentName componentName = new ComponentName(&amp;quot;com.tencent.mm&amp;quot;, &amp;quot;com.tencent.mm.ui.tools.ShareToTimeLineUI&amp;quot;);
    intent.setComponent(componentName);
    intent.setAction(Intent.ACTION_SEND);
    intent.setType(&amp;quot;image/*&amp;quot;);
    intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file));
    startActivity(intent);
}
</code></pre><p>[/java]</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[解决android.os.NetworkOnMainThreadException]]></title>
      <url>http://www.ibmer.info/android-os-networkonmainthreadexception.html</url>
      <content type="html"><![CDATA[<p>[java]<br>public class<br>NetworkOnMainThreadException</p>
<p>extends RuntimeException<br>java.lang.Object<br>?    java.lang.Throwable<br>     ?    java.lang.Exception<br>          ?    java.lang.RuntimeException<br>               ?    android.os.NetworkOnMainThreadException<br>Class Overview</p>
<p>The exception that is thrown when an application attempts to perform a networking operation on its main thread.</p>
<p>This is only thrown for applications targeting the Honeycomb SDK or higher. Applications targeting earlier SDK versions are allowed to do networking on their main event loop threads, but it’s heavily discouraged. See the document Designing for Responsiveness.</p>
<p>Also see StrictMode.<br>[/java]</p>
<p>所以事情就很清楚了。一个APP如果在主线程中请求网络操作，将会抛出此异常。Android这个设计是为了防止网络请求时间过长而导致界面假死的情况发生。</p>
<p>解决方案有两个，一个是使用StrictMode，二是使用线程来操作网络请求。<br>第一种方法：简单暴力，强制使用，代码修改简单（但是非常不推荐）<br>在MainActivity文件的setContentView(R.layout.activity_main)下面加上如下代码</p>
<p>[java]<br>if (android.os.Build.VERSION.SDK_INT &gt; 9) {<br>    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();<br>    StrictMode.setThreadPolicy(policy);<br>}<br>[/java]</p>
<p>第二种方法就是我使用的方法也是我要推荐的方法，将请求网络资源的代码使用Thread去操作。在Runnable中做HTTP请求，不用阻塞UI线程。</p>
<p>[java]<br>public void onCreate(Bundle savedInstanceState) {<br>    super.onCreate(savedInstanceState);<br>    this.setContentView(R.layout.main_view);<br>    new Thread(runnable).start();<br>}</p>
<p>Handler handler = new Handler(){<br>    @Override<br>    public void handleMessage(Message msg) {<br>        super.handleMessage(msg);<br>        Bundle data = msg.getData();<br>        String val = data.getString(&quot;value&quot;);<br>        Log.i(TAG,&quot;请求结果:&quot; + val);<br>    }<br>}</p>
<p>Runnable runnable = new Runnable(){<br>    @Override<br>    public void run() {<br>        // TODO: http request.<br>        Message msg = new Message();<br>        Bundle data = new Bundle();<br>        data.putString(&quot;value&quot;,&quot;请求结果&quot;);<br>        msg.setData(data);<br>        handler.sendMessage(msg);<br>    }<br>}<br>[/java]</p>
<p>上面是比较通用的方法：</p>
<p>// Android 4.0 之后不能在主线程中请求HTTP请求</p>
<p>[java]<br>            new Thread(new Runnable(){<br>                @Override<br>                public void run() {<br>                    cachedImage = asyncImageLoader.loadDrawable(imageUrl, position);<br>                    imageView.setImageDrawable(cachedImage);<br>                }<br>            }).start();<br>[/java]</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决android.os.NetworkOnMainThreadException]]></title>
      <url>http://www.ibmer.info/e8-a7-a3-e5-86-b3android-os-networkonmainthreadexception.html</url>
      <content type="html"><![CDATA[<p>[java]<br>public class<br>NetworkOnMainThreadException</p>
<p>extends RuntimeException<br>java.lang.Object<br>?    java.lang.Throwable<br>     ?    java.lang.Exception<br>          ?    java.lang.RuntimeException<br>               ?    android.os.NetworkOnMainThreadException<br>Class Overview</p>
<p>The exception that is thrown when an application attempts to perform a networking operation on its main thread.</p>
<p>This is only thrown for applications targeting the Honeycomb SDK or higher. Applications targeting earlier SDK versions are allowed to do networking on their main event loop threads, but it’s heavily discouraged. See the document Designing for Responsiveness.</p>
<p>Also see StrictMode.<br>[/java]</p>
<p>所以事情就很清楚了。一个APP如果在主线程中请求网络操作，将会抛出此异常。Android这个设计是为了防止网络请求时间过长而导致界面假死的情况发生。</p>
<p>解决方案有两个，一个是使用StrictMode，二是使用线程来操作网络请求。<br>第一种方法：简单暴力，强制使用，代码修改简单（但是非常不推荐）<br>在MainActivity文件的setContentView(R.layout.activity_main)下面加上如下代码</p>
<p>[java]<br>if (android.os.Build.VERSION.SDK_INT &gt; 9) {<br>    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();<br>    StrictMode.setThreadPolicy(policy);<br>}<br>[/java]</p>
<p>第二种方法就是我使用的方法也是我要推荐的方法，将请求网络资源的代码使用Thread去操作。在Runnable中做HTTP请求，不用阻塞UI线程。</p>
<p>[java]<br>public void onCreate(Bundle savedInstanceState) {<br>    super.onCreate(savedInstanceState);<br>    this.setContentView(R.layout.main_view);<br>    new Thread(runnable).start();<br>}</p>
<p>Handler handler = new Handler(){<br>    @Override<br>    public void handleMessage(Message msg) {<br>        super.handleMessage(msg);<br>        Bundle data = msg.getData();<br>        String val = data.getString(&quot;value&quot;);<br>        Log.i(TAG,&quot;请求结果:&quot; + val);<br>    }<br>}</p>
<p>Runnable runnable = new Runnable(){<br>    @Override<br>    public void run() {<br>        // TODO: http request.<br>        Message msg = new Message();<br>        Bundle data = new Bundle();<br>        data.putString(&quot;value&quot;,&quot;请求结果&quot;);<br>        msg.setData(data);<br>        handler.sendMessage(msg);<br>    }<br>}<br>[/java]</p>
<p>上面是比较通用的方法：</p>
<p>// Android 4.0 之后不能在主线程中请求HTTP请求</p>
<p>[java]<br>            new Thread(new Runnable(){<br>                @Override<br>                public void run() {<br>                    cachedImage = asyncImageLoader.loadDrawable(imageUrl, position);<br>                    imageView.setImageDrawable(cachedImage);<br>                }<br>            }).start();<br>[/java]</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 使用小技巧之 ：new Handler().postDelayed()  延迟intent跳转]]></title>
      <url>http://www.ibmer.info/android-handler-postdelayed.html</url>
      <content type="html"><![CDATA[<p>关键点： new Handler().postDelayed(Runable,delaytime);</p>
<p>[java]<br>Runnable r = new Runnable() {<br>@Override<br>public void run() {<br>// TODO Auto-generated method stub<br>startGoPage();<br>}<br>};</p>
<p>new Handler().postDelayed(r, 2000);</p>
<p>=————————=</p>
<p>startGoPage()｛<br>Inent intent = new Inent(xx.this,xxx.class);<br>startActivity(intent);<br>finish();<br>｝</p>
<p>[/java]</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里云开放8080,8088等非80端口]]></title>
      <url>http://www.ibmer.info/iptables-open.html</url>
      <content type="html"><![CDATA[<p>阿里云，通过主机宝配置好虚拟网站后，怎么样都访问不到非80的网站。</p>
<p>原因其实很简单，因为iptables中没有被开放你所设置的端口。</p>
<h3 id="使用Ubuntu的同学，可以通过下面方法开放端口"><a href="#使用Ubuntu的同学，可以通过下面方法开放端口" class="headerlink" title="使用Ubuntu的同学，可以通过下面方法开放端口:"></a>使用Ubuntu的同学，可以通过下面方法开放端口:</h3><p>&nbsp;</p>
<p>&nbsp;</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://help.ubuntu.com/community/IptablesHowTo" target="_blank" rel="external">https://help.ubuntu.com/community/IptablesHowTo</a></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[ecshop安装错误]]></title>
      <url>http://www.ibmer.info/ecshop-install-error.html</url>
      <content type="html"><![CDATA[<p>出现下面这就话：<br>Strict Standards: Only variables should be passed by reference in E:\Tools\ECShop_V2.7.3_UTF8_release1106\upload\includes\cls_template.php<br>on line 418<br>第418行：$tag_sel = array_shift(explode(‘ ‘, $tag));</p>
<p>###<br>解决办法 1<br>5.3以上版本的问题，应该也和配置有关 只要418行把这一句拆成两句就没有问题了 $tag_sel = array_shift(explode(‘ ‘, $tag)); 改成： $tag_arr = explode(‘ ‘, $tag); $tag_sel = array_shift($tag_arr);<br>（实验过，绝对可行） 因为array_shift的参数是引用传递的，5.3以上默认只能传递具体的变量，而不能通过函数返回值</p>
<h3 id="解决办法-2-：-或则如果这样php-ini配置的话：-error-reporting-E-ALL-E-STRICT"><a href="#解决办法-2-：-或则如果这样php-ini配置的话：-error-reporting-E-ALL-E-STRICT" class="headerlink" title="解决办法 2 ： 或则如果这样php.ini配置的话： error_reporting = E_ALL | E_STRICT"></a>解决办法 2 ： 或则如果这样php.ini配置的话： error_reporting = E_ALL | E_STRICT</h3><p>&nbsp;</p>
<p>其实最好还是把php版本该城5.3一下。</p>
<p>比如nginx中安装多个 版本的php，可以通过修改conf文件，主要修改内容：</p>
<p>nginx修改</p>
<p>fastcgi_pass   unix:/dev/shm/php.sock;</p>
<p>成为</p>
<p>fastcgi_pass   127.0.0.1:9001;</p>
<p>这样就可以控制php的版本。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ecshop </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MockServer的测试思想与实现]]></title>
      <url>http://www.ibmer.info/mockserver-test.html</url>
      <content type="html"><![CDATA[<p>　　背景</p>
<p>　　在Linux后台服务类模块测试中，经常会遇到被测模块需要通过socket接口调用其它模块的情况，多数时候，我们可以直接连接被调用的模块来进行测试。但有时这并不是个好主意，比如被调用的模块部署成本很高、操作比较繁琐、数据构造困难、性能不够好等，更重要的是一些接口的异常情况可能根本无法直接模拟。</p>
<p>　　所以在实际测试中，我们少不了要自己编写一些桩程序来模拟被调用模块的行为。而当我们写过几个桩程序后就会发现，所有的桩程序都大同小异，只是具体的接口协议不同而已，而像链接管理、配置管理、日志管理等工作，完全都是一样的。那么是否可以通过某种方式，将相同的部分抽离出来，构造一个桩程序时，只需要考虑接口的逻辑，是不是就可以节省许多重复的工作呢？</p>
<p>　　什么是MOCK</p>
<p>　　Mock原本是一种在单测中使用的测试技术。</p>
<p>　　Mock的定义</p>
<p>　　“Mock Objects simulate parts of the behavior of domain code, and are able to check whether they are used as defined. Domain classes can be tested in isolation by simulating their collaborators with Mock Objects.”。前面这段话摘自EasyMock的说明文档，简单来说单测CASE可以认为是一些驱动代码，而Mock Object则像是一些桩。</p>
<p>　　Mock框架简介</p>
<p>　　在实际使用中，自己从头实现一个Mock对象是件繁琐的工作，而且经常出现各种低级错误，影响实际使用的效果。所以一些通用的Mock框架应运而生。如 “EasyMock”、“GMock”等。</p>
<p>　　“Hand-writing classes for Mock Objects is not needed.</p>
<p>　　Supports refactoring-safe Mock Objects: test code will not break at runtime when renaming methods or reordering method parameters</p>
<p>　　Supports return values and exceptions.</p>
<p>　　Supports checking the order of method calls, for one or more Mock Objects. ”</p>
<p>　　上面是EasyMock文档中提到的Mock框架带来的几点好处，总结一下就是：可以使用一种非常简洁的方式描述对象的行为，而不需要真的去实现它。</p>
<p>　　关于EasyMock的详细信息，可以参考 EasyMock的使用文档</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 测试，test </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse快捷键大全(转载)]]></title>
      <url>http://www.ibmer.info/eclipse-hotkey.html</url>
      <content type="html"><![CDATA[<p>Ctrl+1 快速修复(最经典的快捷键,就不用多说了)<br>Ctrl+D: 删除当前行<br>Ctrl+Alt+↓ 复制当前行到下一行(复制增加)<br>Ctrl+Alt+↑ 复制当前行到上一行(复制增加)<br>Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)<br>Alt+↑ 当前行和上面一行交互位置(同上)<br>Alt+← 前一个编辑的页面<br>Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)<br>Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性<br>Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)<br>Shift+Ctrl+Enter 在当前行插入空行(原理同上条)<br>Ctrl+Q 定位到最后编辑的地方<br>Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)<br>Ctrl+M 最大化当前的Edit或View (再按则反之)<br>Ctrl+/ 注释当前行,再按则取消注释<br>Ctrl+O 快速显示 OutLine<br>Ctrl+T 快速显示当前类的继承结构<br>Ctrl+W 关闭当前Editer<br>Ctrl+K 参照选中的Word快速定位到下一个<br>Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)<br>Ctrl+/(小键盘) 折叠当前类中的所有代码<br>Ctrl+×(小键盘) 展开当前类中的所有代码<br>Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)<br>Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)<br>Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)<br>Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)<br>Ctrl+Shift+F4 关闭所有打开的Editer<br>Ctrl+Shift+X 把当前选中的文本全部变味小写<br>Ctrl+Shift+Y 把当前选中的文本全部变为小写<br>Ctrl+Shift+F 格式化当前代码<br>Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)</p>
<p>下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了)<br>Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)<br>Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)<br>Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)<br>Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)<br>Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)<br>Alt+Shift+I 合并变量(可能这样说有点不妥Inline)<br>Alt+Shift+V 移动函数和变量(不怎么常用)<br>Alt+Shift+Z 重构的后悔药(Undo)</p>
<p>编辑<br>作用域 功能 快捷键<br>全局 查找并替换 Ctrl+F<br>文本编辑器 查找上一个 Ctrl+Shift+K<br>文本编辑器 查找下一个 Ctrl+K<br>全局 撤销 Ctrl+Z<br>全局 复制 Ctrl+C<br>全局 恢复上一个选择 Alt+Shift+↓<br>全局 剪切 Ctrl+X<br>全局 快速修正 Ctrl1+1<br>全局 内容辅助 Alt+/<br>全局 全部选中 Ctrl+A<br>全局 删除 Delete<br>全局 上下文信息 Alt+？<br>Alt+Shift+?<br>Ctrl+Shift+Space<br>Java编辑器 显示工具提示描述 F2<br>Java编辑器 选择封装元素 Alt+Shift+↑<br>Java编辑器 选择上一个元素 Alt+Shift+←<br>Java编辑器 选择下一个元素 Alt+Shift+→<br>文本编辑器 增量查找 Ctrl+J<br>文本编辑器 增量逆向查找 Ctrl+Shift+J<br>全局 粘贴 Ctrl+V<br>全局 重做 Ctrl+Y </p>
<p>查看<br>作用域 功能 快捷键<br>全局 放大 Ctrl+=<br>全局 缩小 Ctrl+- </p>
<p>窗口<br>作用域 功能 快捷键<br>全局 激活编辑器 F12<br>全局 切换编辑器 Ctrl+Shift+W<br>全局 上一个编辑器 Ctrl+Shift+F6<br>全局 上一个视图 Ctrl+Shift+F7<br>全局 上一个透视图 Ctrl+Shift+F8<br>全局 下一个编辑器 Ctrl+F6<br>全局 下一个视图 Ctrl+F7<br>全局 下一个透视图 Ctrl+F8<br>文本编辑器 显示标尺上下文菜单 Ctrl+W<br>全局 显示视图菜单 Ctrl+F10<br>全局 显示系统菜单 Alt+- </p>
<p>导航<br>作用域 功能 快捷键<br>Java编辑器 打开结构 Ctrl+F3<br>全局 打开类型 Ctrl+Shift+T<br>全局 打开类型层次结构 F4<br>全局 打开声明 F3<br>全局 打开外部javadoc Shift+F2<br>全局 打开资源 Ctrl+Shift+R<br>全局 后退历史记录 Alt+←<br>全局 前进历史记录 Alt+→<br>全局 上一个 Ctrl+,<br>全局 下一个 Ctrl+.<br>Java编辑器 显示大纲 Ctrl+O<br>全局 在层次结构中打开类型 Ctrl+Shift+H<br>全局 转至匹配的括号 Ctrl+Shift+P<br>全局 转至上一个编辑位置 Ctrl+Q<br>Java编辑器 转至上一个成员 Ctrl+Shift+↑<br>Java编辑器 转至下一个成员 Ctrl+Shift+↓<br>文本编辑器 转至行 Ctrl+L </p>
<p>搜索<br>作用域 功能 快捷键<br>全局 出现在文件中 Ctrl+Shift+U<br>全局 打开搜索对话框 Ctrl+H<br>全局 工作区中的声明 Ctrl+G<br>全局 工作区中的引用 Ctrl+Shift+G </p>
<p>文本编辑<br>作用域 功能 快捷键<br>文本编辑器 改写切换 Insert<br>文本编辑器 上滚行 Ctrl+↑<br>文本编辑器 下滚行 Ctrl+↓ </p>
<p>文件<br>作用域 功能 快捷键<br>全局 保存 Ctrl+X<br>Ctrl+S<br>全局 打印 Ctrl+P<br>全局 关闭 Ctrl+F4<br>全局 全部保存 Ctrl+Shift+S<br>全局 全部关闭 Ctrl+Shift+F4<br>全局 属性 Alt+Enter<br>全局 新建 Ctrl+N </p>
<p>项目<br>作用域 功能 快捷键<br>全局 全部构建 Ctrl+B </p>
<p>源代码<br>作用域 功能 快捷键<br>Java编辑器 格式化 Ctrl+Shift+F<br>Java编辑器 取消注释 Ctrl+\<br>Java编辑器 注释 Ctrl+/<br>Java编辑器 添加导入 Ctrl+Shift+M<br>Java编辑器 组织导入 Ctrl+Shift+O<br>Java编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。<br>也可以使用Ctrl+1自动修正。 </p>
<p>运行<br>作用域 功能 快捷键<br>全局 单步返回 F7<br>全局 单步跳过 F6<br>全局 单步跳入 F5<br>全局 单步跳入选择 Ctrl+F5<br>全局 调试上次启动 F11<br>全局 继续 F8<br>全局 使用过滤器单步执行 Shift+F5<br>全局 添加/去除断点 Ctrl+Shift+B<br>全局 显示 Ctrl+D<br>全局 运行上次启动 Ctrl+F11<br>全局 运行至行 Ctrl+R<br>全局 执行 Ctrl+U </p>
<p>重构<br>作用域 功能 快捷键<br>全局 撤销重构 Alt+Shift+Z<br>全局 抽取方法 Alt+Shift+M<br>全局 抽取局部变量 Alt+Shift+L<br>全局 内联 Alt+Shift+I<br>全局 移动 Alt+Shift+V<br>全局 重命名 Alt+Shift+R<br>全局 重做 Alt+Shift+Y</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> eclipse </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android SDK Download List]]></title>
      <url>http://www.ibmer.info/android-sdk-download-list.html</url>
      <content type="html"><![CDATA[<h1 id="Android-SDK-Download-List"><a href="#Android-SDK-Download-List" class="headerlink" title="Android SDK Download List!"></a>Android SDK Download List!</h1><p>&nbsp;</p>
<h3 id="百度云下载"><a href="#百度云下载" class="headerlink" title="百度云下载"></a>百度云下载</h3><p>个人下载了一些放在了百度云上</p>
<p><a href="http://pan.baidu.com/s/1hq1M6CO" target="_blank" rel="external">下载链接</a>：<a href="http://pan.baidu.com/s/1hq1M6CO" target="_blank" rel="external">http://pan.baidu.com/s/1hq1M6CO</a> 密码：8wnf</p>
<p>&nbsp;</p>
<h3 id="官方下载"><a href="#官方下载" class="headerlink" title="官方下载"></a>官方下载</h3><p><div>Name API Rev. Down Note</div></p>
<table><br><tbody><br><tr><br><td class="u-head">Platforms</td><br></tr><br><tr><br><td>Android SDK Platform 1.1_r1</td><br><td>2</td><br><td>1</td><br><td>any windows 44.66MB <a href="http://dl.google.com/android/repository/android-1.1_r1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.1_r1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 43.47MB <a href="http://dl.google.com/android/repository/android-1.1_r1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.1_r1-macosx.zip" target="_blank" rel="external">SSL下载</a><br>any linux 43.37MB <a href="http://dl.google.com/android/repository/android-1.1_r1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.1_r1-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td><span title=""><span class="u-obsolete">(Obsolete)</span></span></td><br></tr><br><tr><br><td>Android SDK Platform 1.5_r3</td><br><td>3</td><br><td>04</td><br><td>any windows 52.09MB <a href="http://dl.google.com/android/repository/android-1.5_r04-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.5_r04-windows.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 50.01MB <a href="http://dl.google.com/android/repository/android-1.5_r04-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.5_r04-macosx.zip" target="_blank" rel="external">SSL下载</a><br>any linux 50.88MB <a href="http://dl.google.com/android/repository/android-1.5_r04-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.5_r04-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 1.6_r2</td><br><td>4</td><br><td>03</td><br><td>any linux 60.51MB <a href="http://dl.google.com/android/repository/android-1.6_r03-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.6_r03-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 59.53MB <a href="http://dl.google.com/android/repository/android-1.6_r03-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.6_r03-macosx.zip" target="_blank" rel="external">SSL下载</a><br>any windows 61.66MB <a href="http://dl.google.com/android/repository/android-1.6_r03-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-1.6_r03-windows.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 2.0, revision 1</td><br><td>5</td><br><td>01</td><br><td>any linux 71.62MB <a href="http://dl.google.com/android/repository/android-2.0_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0_r01-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 71.48MB <a href="http://dl.google.com/android/repository/android-2.0_r01-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0_r01-macosx.zip" target="_blank" rel="external">SSL下载</a><br>any windows 72.75MB <a href="http://dl.google.com/android/repository/android-2.0_r01-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0_r01-windows.zip" target="_blank" rel="external">SSL下载</a></td><br><td><span title=""><span class="u-obsolete">(Obsolete)</span></span></td><br></tr><br><tr><br><td>Android SDK Platform 2.0.1_r1</td><br><td>6</td><br><td>01</td><br><td>any linux 75.52MB <a href="http://dl.google.com/android/repository/android-2.0.1_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0.1_r01-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 75.37MB <a href="http://dl.google.com/android/repository/android-2.0.1_r01-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0.1_r01-macosx.zip" target="_blank" rel="external">SSL下载</a><br>any windows 76.66MB <a href="http://dl.google.com/android/repository/android-2.0.1_r01-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.0.1_r01-windows.zip" target="_blank" rel="external">SSL下载</a></td><br><td><span title=""><span class="u-obsolete">(Obsolete)</span></span></td><br></tr><br><tr><br><td>Android SDK Platform 2.1_r3</td><br><td>7</td><br><td>03</td><br><td>any any 66.89MB <a href="http://dl.google.com/android/repository/android-2.1_r03-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.1_r03-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 2.2_r3</td><br><td>8</td><br><td>03</td><br><td>any any 71.19MB <a href="http://dl.google.com/android/repository/android-2.2_r03-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.2_r03-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 2.3.1_r2</td><br><td>9</td><br><td>02</td><br><td>any any 75.09MB <a href="http://dl.google.com/android/repository/android-2.3.1_r02-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.3.1_r02-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td><span title=""><span class="u-obsolete">(Obsolete)</span></span></td><br></tr><br><tr><br><td>Android SDK Platform 2.3.3._r2</td><br><td>10</td><br><td>02</td><br><td>any any 81.51MB <a href="http://dl.google.com/android/repository/android-2.3.3_r02-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-2.3.3_r02-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 3.0, revision 2</td><br><td>11</td><br><td>02</td><br><td>any any 99.67MB <a href="http://dl.google.com/android/repository/android-3.0_r02-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-3.0_r02-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 3.1, revision 3</td><br><td>12</td><br><td>03</td><br><td>any any 101.54MB <a href="http://dl.google.com/android/repository/android-3.1_r03-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-3.1_r03-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 3.2, revision 1</td><br><td>13</td><br><td>01</td><br><td>any any 103.40MB <a href="http://dl.google.com/android/repository/android-3.2_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-3.2_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.0</td><br><td>14</td><br><td>3</td><br><td>any any 43.79MB <a href="http://dl.google.com/android/repository/android-14_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-14_r03.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.0.3</td><br><td>15</td><br><td>3</td><br><td>any any 42.36MB <a href="http://dl.google.com/android/repository/android-15_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-15_r03.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.1.2</td><br><td>16</td><br><td>4</td><br><td>any any 45.78MB <a href="http://dl.google.com/android/repository/android-16_r04.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-16_r04.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.2.2</td><br><td>17</td><br><td>2</td><br><td>any any 45.83MB <a href="http://dl.google.com/android/repository/android-17_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-17_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.3</td><br><td>18</td><br><td>2</td><br><td>any any 54.66MB <a href="http://dl.google.com/android/repository/android-18_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android-18_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">System Images</td><br></tr><br><tr><br><td>Android SDK Platform 4.0 armeabi-v7a</td><br><td>14</td><br><td>2</td><br><td>any any 95.01MB <a href="http://dl.google.com/android/repository/sysimg_armv7a-14_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sysimg_armv7a-14_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.0.3 armeabi-v7a</td><br><td>15</td><br><td>2</td><br><td>any any 91.77MB <a href="http://dl.google.com/android/repository/sysimg_armv7a-15_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sysimg_armv7a-15_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.1 armeabi-v7a</td><br><td>16</td><br><td>3</td><br><td>any any 107.32MB <a href="http://dl.google.com/android/repository/sysimg_armv7a-16_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sysimg_armv7a-16_r03.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.2.2 armeabi-v7a</td><br><td>17</td><br><td>2</td><br><td>any any 111.15MB <a href="http://dl.google.com/android/repository/sysimg_armv7a-17_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sysimg_armv7a-17_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Platform 4.3 armeabi-v7a</td><br><td>18</td><br><td>2</td><br><td>any any 119.65MB <a href="http://dl.google.com/android/repository/sysimg_armv7a-18_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sysimg_armv7a-18_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">Samples</td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 7, revision 1">Sample for SDK API 7</span></td><br><td>7</td><br><td>01</td><br><td>any any 7.32MB <a href="http://dl.google.com/android/repository/samples-2.1_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-2.1_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 8, revision 1">Sample for SDK API 8</span></td><br><td>8</td><br><td>01</td><br><td>any any 7.60MB <a href="http://dl.google.com/android/repository/samples-2.2_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-2.2_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 9, revision 1">Sample for SDK API 9</span></td><br><td>9</td><br><td>01</td><br><td>any any 8.12MB <a href="http://dl.google.com/android/repository/samples-2.3_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-2.3_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 10, revision 1">Sample for SDK API 10</span></td><br><td>10</td><br><td>01</td><br><td>any any 8.14MB <a href="http://dl.google.com/android/repository/samples-2.3.3_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-2.3.3_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 11, revision 1">Sample for SDK API 11</span></td><br><td>11</td><br><td>01</td><br><td>any any 11.42MB <a href="http://dl.google.com/android/repository/samples-3.0_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-3.0_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 12, revision 1">Sample for SDK API 12</span></td><br><td>12</td><br><td>01</td><br><td>any any 11.59MB <a href="http://dl.google.com/android/repository/samples-3.1_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-3.1_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="Android SDK Samples for Android API 13, revision 1">Sample for SDK API 13</span></td><br><td>13</td><br><td>01</td><br><td>any any 11.63MB <a href="http://dl.google.com/android/repository/samples-3.2_r01-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-3.2_r01-linux.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="">Sample for SDK API 14</span></td><br><td>14</td><br><td>2</td><br><td>any any 15.50MB <a href="http://dl.google.com/android/repository/samples-14_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-14_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="">Sample for SDK API 15</span></td><br><td>15</td><br><td>2</td><br><td>any any 15.61MB <a href="http://dl.google.com/android/repository/samples-15_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-15_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="">Sample for SDK API 16</span></td><br><td>16</td><br><td>1</td><br><td>any any 14.05MB <a href="http://dl.google.com/android/repository/samples-16_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-16_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="">Sample for SDK API 17</span></td><br><td>17</td><br><td>1</td><br><td>any any 14.15MB <a href="http://dl.google.com/android/repository/samples-17_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-17_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td><span title="">Sample for SDK API 18</span></td><br><td>18</td><br><td>1</td><br><td>any any 18.98MB <a href="http://dl.google.com/android/repository/samples-18_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/samples-18_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">PlatformTools</td><br></tr><br><tr><br><td>Android SDK Platform-tools</td><br><td></td><br><td>18_0_1</td><br><td>any windows 0.91MB <a href="http://dl.google.com/android/repository/platform-tools_r18.0.1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/platform-tools_r18.0.1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 0.96MB <a href="http://dl.google.com/android/repository/platform-tools_r18.0.1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/platform-tools_r18.0.1-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 0.93MB <a href="http://dl.google.com/android/repository/platform-tools_r18.0.1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/platform-tools_r18.0.1-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">Build Tools</td><br></tr><br><tr><br><td>Android SDK Build-tools</td><br><td></td><br><td>17_0_0</td><br><td>any windows 10.50MB <a href="http://dl.google.com/android/repository/build-tools_r17-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r17-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 11.15MB <a href="http://dl.google.com/android/repository/build-tools_r17-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r17-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 11.64MB <a href="http://dl.google.com/android/repository/build-tools_r17-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r17-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Build-tools</td><br><td></td><br><td>18_0_1</td><br><td>any windows 14.70MB <a href="http://dl.google.com/android/repository/build-tools_r18.0.1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.0.1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 15.86MB <a href="http://dl.google.com/android/repository/build-tools_r18.0.1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.0.1-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 15.86MB <a href="http://dl.google.com/android/repository/build-tools_r18.0.1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.0.1-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Build-tools</td><br><td></td><br><td>18_1_0</td><br><td>any windows 18.75MB <a href="http://dl.google.com/android/repository/build-tools_r18.1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 19.29MB <a href="http://dl.google.com/android/repository/build-tools_r18.1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 19.50MB <a href="http://dl.google.com/android/repository/build-tools_r18.1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Android SDK Build-tools</td><br><td></td><br><td>18_1_1</td><br><td>any windows 18.75MB <a href="http://dl.google.com/android/repository/build-tools_r18.1.1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1.1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 19.29MB <a href="http://dl.google.com/android/repository/build-tools_r18.1.1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1.1-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 19.50MB <a href="http://dl.google.com/android/repository/build-tools_r18.1.1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/build-tools_r18.1.1-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">Tools</td><br></tr><br><tr><br><td>Android SDK Tools</td><br><td></td><br><td>22_2_1</td><br><td>any windows 103.64MB <a href="http://dl.google.com/android/repository/tools_r22.2.1-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/tools_r22.2.1-windows.zip" target="_blank" rel="external">SSL下载</a><br>any linux 96.49MB <a href="http://dl.google.com/android/repository/tools_r22.2.1-linux.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/tools_r22.2.1-linux.zip" target="_blank" rel="external">SSL下载</a><br>any macosx 71.36MB <a href="http://dl.google.com/android/repository/tools_r22.2.1-macosx.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/tools_r22.2.1-macosx.zip" target="_blank" rel="external">SSL下载</a></td><br><td><span title="">MinPlatformToolsRev: 18</span></td><br></tr><br><tr><br><td class="u-head">Docs</td><br></tr><br><tr><br><td>Documentation for Android SDK</td><br><td>18</td><br><td>2</td><br><td>any any 144.33MB <a href="http://dl.google.com/android/repository/docs-18_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/docs-18_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td class="u-head">Sources</td><br></tr><br><tr><br><td>Sources for Android SDK</td><br><td>14</td><br><td>1</td><br><td>any any 15.40MB <a href="http://dl.google.com/android/repository/sources-14_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sources-14_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Sources for Android SDK</td><br><td>15</td><br><td>2</td><br><td>any any 15.71MB <a href="http://dl.google.com/android/repository/sources-15_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sources-15_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Sources for Android SDK</td><br><td>16</td><br><td>2</td><br><td>any any 17.05MB <a href="http://dl.google.com/android/repository/sources-16_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sources-16_r02.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Sources for Android SDK</td><br><td>17</td><br><td>1</td><br><td>any any 18.10MB <a href="http://dl.google.com/android/repository/sources-17_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sources-17_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br><tr><br><td>Sources for Android SDK</td><br><td>18</td><br><td>1</td><br><td>any any 19.29MB <a href="http://dl.google.com/android/repository/sources-18_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sources-18_r01.zip" target="_blank" rel="external">SSL下载</a></td><br><td></td><br></tr><br></tbody><br></table>

<p>## </p>
<p>Name API Rev. Down Note</p>
<p><table></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><td class="u-head">Extra System Images</td><br></p>
<p><tr></tr></p>
<p><td>Android 4.0.4 mips</td></p>
<p><td>15</td></p>
<p><td>1</td></p>
<p><td>any 112.06MB <a href="http://dl.google.com/android/repository/sys-img/mips/sysimg_mips-15_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/mips/sysimg_mips-15_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android 4.1.2 mips</td></p>
<p><td>16</td></p>
<p><td>4</td></p>
<p><td>any 116.81MB <a href="http://dl.google.com/android/repository/sys-img/mips/sysimg_mips-16_r04.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/mips/sysimg_mips-16_r04.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android 4.2.1 mips</td></p>
<p><td>17</td></p>
<p><td>1</td></p>
<p><td>any 125.68MB <a href="http://dl.google.com/android/repository/sys-img/mips/sysimg_mips-17_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/mips/sysimg_mips-17_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android SDK Platform 2.3.7 x86</td></p>
<p><td>10</td></p>
<p><td>2</td></p>
<p><td>any any 52.89MB <a href="http://dl.google.com/android/repository/sys-img/x86/sysimg_x86-10_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/x86/sysimg_x86-10_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android SDK Platform 4.0.4 x86</td></p>
<p><td>15</td></p>
<p><td>1</td></p>
<p><td>any any 107.40MB <a href="http://dl.google.com/android/repository/sys-img/x86/sysimg_x86-15_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/x86/sysimg_x86-15_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android SDK Platform 4.1.1 x86</td></p>
<p><td>16</td></p>
<p><td>1</td></p>
<p><td>any any 125.73MB <a href="http://dl.google.com/android/repository/sys-img/x86/sysimg_x86-16_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/x86/sysimg_x86-16_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android SDK Platform 4.2 x86</td></p>
<p><td>17</td></p>
<p><td>1</td></p>
<p><td>any any 132.37MB <a href="http://dl.google.com/android/repository/sys-img/x86/sysimg_x86-17_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/x86/sysimg_x86-17_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android SDK Platform 4.3 x86</td></p>
<p><td>18</td></p>
<p><td>1</td></p>
<p><td>any any 148.45MB <a href="http://dl.google.com/android/repository/sys-img/x86/sysimg_x86-18_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/sys-img/x86/sysimg_x86-18_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td class="u-head">Extra</td><br></p>
<p><tr></tr></p>
<p><td>Android Support Library</td></p>
<p><td></td></p>
<p><td>18</td></p>
<p><td>any any 4.23MB <a href="http://dl.google.com/android/repository/support_r18.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/support_r18.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td></td><br></p>
<p><tr></tr></p>
<p><td>Android Support Repository</td></p>
<p><td></td></p>
<p><td>2</td></p>
<p><td>any any 3.53MB <a href="http://dl.google.com/android/repository/android_m2repository_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/android_m2repository_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Local Maven repository for Support Libraries">Local Maven repository for Support Libraries</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Repository</td></p>
<p><td></td></p>
<p><td>3</td></p>
<p><td>any 2.65MB <a href="http://dl.google.com/android/repository/google_m2repository_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_m2repository_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Local Maven repository for Google Libraries">Local Maven repository for Google Libraries</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Play Licensing Library</td></p>
<p><td></td></p>
<p><td>2</td></p>
<p><td>any 0.07MB <a href="http://dl.google.com/android/repository/market_licensing-r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/market_licensing-r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Google Play Licensing client library">Google Play Licensing client library</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Play APK Expansion Library</td></p>
<p><td></td></p>
<p><td>3</td></p>
<p><td>any 0.11MB <a href="http://dl.google.com/android/repository/market_apk_expansion-r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/market_apk_expansion-r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Google Play APK Expansion library">Google Play APK Expansion library</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Play services</td></p>
<p><td></td></p>
<p><td>12</td></p>
<p><td>any 5.02MB <a href="http://dl.google.com/android/repository/google_play_services_3265130_r12.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_play_services_3265130_r12.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Google Play Services client library and sample code">Google Play Services client library and sample code</span></td><br></p>
<p><tr></tr></p>
<p><td>Google USB Driver</td></p>
<p><td></td></p>
<p><td>8</td></p>
<p><td>windows 8.28MB <a href="http://dl.google.com/android/repository/usb_driver_r08-windows.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/usb_driver_r08-windows.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="USB Driver for Windows, revision 8">USB Driver for Windows, revision 8</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Play Billing Library</td></p>
<p><td></td></p>
<p><td>5</td></p>
<p><td>any 0.42MB <a href="http://dl.google.com/android/repository/play_billing_r05.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/play_billing_r05.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Google Play Billing files and sample code">Google Play Billing files and sample code</span></td><br></p>
<p><tr></tr></p>
<p><td>Google AdMob Ads SDK</td></p>
<p><td></td></p>
<p><td>11</td></p>
<p><td>any 0.67MB <a href="http://dl.google.com/googleadmobadssdk/googleadmobadssdkandroid-6.4.1.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/googleadmobadssdk/googleadmobadssdkandroid-6.4.1.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="AdMob Ads SDK">AdMob Ads SDK</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Analytics App Tracking SDK</td></p>
<p><td></td></p>
<p><td>3</td></p>
<p><td>any 0.20MB <a href="http://dl.google.com/gaformobileapps/GoogleAnalyticsAndroid_2.0beta5.zip" target="_blank" rel="external">下载</a> <a href="https://dl.google.com/gaformobileapps/GoogleAnalyticsAndroid_2.0beta5.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Analytics App Tracking SDK">Analytics App Tracking SDK</span></td><br></p>
<p><tr></tr></p>
<p><td>Google Web Driver</td></p>
<p><td></td></p>
<p><td>2</td></p>
<p><td>any 3.87MB <a href="http://dl.google.com/android/repository/webdriver_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/webdriver_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="WebDriver">WebDriver</span></td><br></p>
<p><tr></tr></p>
<p><td>[Deprecated] Google Cloud Messaging for Android Library</td></p>
<p><td></td></p>
<p><td>3</td></p>
<p><td>any 5.63MB <a href="http://dl.google.com/android/repository/gcm_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/gcm_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="GCM library has been moved to Google Play Services (com.google.android.gms.gcm) and this standalone version is no longer supported">GCM library has been moved to Google Play Services (com.google.android.gms.gcm) and this standalone version is no longer supported</span></td><br></p>
<p><tr></tr></p>
<p><td class="u-head">Addon</td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>3</td></p>
<p><td>03</td></p>
<p><td>any 33.29MB <a href="http://dl.google.com/android/repository/google_apis-3-r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-3-r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>4</td></p>
<p><td>2</td></p>
<p><td>any 40.47MB <a href="http://dl.google.com/android/repository/google_apis-4_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-4_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, revision 2">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>5</td></p>
<p><td>01</td></p>
<p><td>any 46.85MB <a href="http://dl.google.com/android/repository/google_apis-5_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-5_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>6</td></p>
<p><td>1</td></p>
<p><td>any 50.91MB <a href="http://dl.google.com/android/repository/google_apis-6_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-6_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>7</td></p>
<p><td>1</td></p>
<p><td>any 51.20MB <a href="http://dl.google.com/android/repository/google_apis-7_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-7_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>8</td></p>
<p><td>2</td></p>
<p><td>any 56.75MB <a href="http://dl.google.com/android/repository/google_apis-8_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-8_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 8, revision 2">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>9</td></p>
<p><td>2</td></p>
<p><td>any 60.46MB <a href="http://dl.google.com/android/repository/google_apis-9_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-9_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 9, revision 2">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>10</td></p>
<p><td>2</td></p>
<p><td>any 62.73MB <a href="http://dl.google.com/android/repository/google_apis-10_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-10_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 10, revision 2">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>11</td></p>
<p><td>1</td></p>
<p><td>any 79.61MB <a href="http://dl.google.com/android/repository/google_apis-11_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-11_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 11, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>12</td></p>
<p><td>1</td></p>
<p><td>any 82.11MB <a href="http://dl.google.com/android/repository/google_apis-12_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-12_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 12, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>13</td></p>
<p><td>1</td></p>
<p><td>any 84.51MB <a href="http://dl.google.com/android/repository/google_apis-13_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-13_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs, API 13, revision 1">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>14</td></p>
<p><td>2</td></p>
<p><td>any any 101.60MB <a href="http://dl.google.com/android/repository/google_apis-14_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-14_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>15</td></p>
<p><td>2</td></p>
<p><td>any any 101.67MB <a href="http://dl.google.com/android/repository/google_apis-15_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-15_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>16</td></p>
<p><td>3</td></p>
<p><td>any any 121.38MB <a href="http://dl.google.com/android/repository/google_apis-16_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-16_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google TV Addon</td></p>
<p><td>12</td></p>
<p><td>2</td></p>
<p><td>linux 74.64MB <a href="http://dl.google.com/android/repository/google_tv-12_r02.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_tv-12_r02.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google TV, API 12, preview release">Google TV Addon</span></td><br></p>
<p><tr></tr></p>
<p><td>Google TV Addon</td></p>
<p><td>13</td></p>
<p><td>1</td></p>
<p><td>any 83.66MB <a href="http://dl.google.com/android/repository/google_tv-13_r01.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_tv-13_r01.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google TV, API 13">Google TV Addon</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>17</td></p>
<p><td>3</td></p>
<p><td>any any 130.80MB <a href="http://dl.google.com/android/repository/google_apis-17_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-17_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td>Google APIs</td></p>
<p><td>18</td></p>
<p><td>3</td></p>
<p><td>any any 136.52MB <a href="http://dl.google.com/android/repository/google_apis-18_r03.zip" target="_blank" rel="external">下载</a> <a href="https://dl-ssl.google.com/android/repository/google_apis-18_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Android + Google APIs">Google APIs</span></td><br></p>
<p><tr></tr></p>
<p><td class="u-head">Extra</td><br></p>
<p><tr></tr></p>
<p><td>Intel x86 Emulator Accelerator (HAXM)</td></p>
<p><td></td></p>
<p><td>3</td></p>
<p><td>windows 1.65MB <a href="http://software.intel.com/sites/default/files/haxm-windows_r03.zip" target="_blank" rel="external">下载</a> <a href="http://software.intel.com/sites/default/files/haxm-windows_r03.zip" target="_blank" rel="external">SSL下载</a><br>macosx 0.24MB <a href="http://software.intel.com/sites/default/files/haxm-macosx_r03.zip" target="_blank" rel="external">下载</a> <a href="http://software.intel.com/sites/default/files/haxm-macosx_r03.zip" target="_blank" rel="external">SSL下载</a></td></p>
<p><td><span title="Emulation speedup using Intel® VT processor technology. Read more at www.intel.com/software/android">Emulation speedup using Intel® VT processor technology. Read more at www.intel.com/software/android</span></td><br><br><br><br><br>&nbsp;</p>
<h3 id="SDK目录结构"><a href="#SDK目录结构" class="headerlink" title="SDK目录结构"></a>SDK目录结构</h3><pre>d:\android-sdk\tools
这个目录里有ddms.bat等文件

d:\android-sdk\system-images\android-17\armeabi-v7a
这个目录里有userdata.img等文件（r14及以上才有这个目录）

d:\android-sdk\platforms\android-4.0.2
这个目录里有android.jar等文件

d:\android-sdk\platform-tools
这个目录里有adb.exe等文件

d:\android-sdk\extras
这个目录里有android等目录
</pre>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> eclipse </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何设置mysql远程访问]]></title>
      <url>http://www.ibmer.info/mysql-remote-connect.html</url>
      <content type="html"><![CDATA[<p>Mysql默认是不可以通过远程机器访问的,通过下面的配置可以开启远程访问</p>
<p>实际原理是在mysql数据库中赋予外部访问权限，然后就可以用客户端访问了。</p>
<p>在MySQL Server端：</p>
<p>执行mysql 命令进入mysql 命令模式，</p>
<p>[sql]<br>mysql&gt; use mysql;<br>mysql&gt; GRANT ALL ON <em>.</em> TO admin@’%’ IDENTIFIED BY ‘admin’ WITH GRANT OPTION;</p>
<p>#这句话的意思 ，允许任何IP地址（上面的 % 就是这个意思）的电脑 用admin帐户  和密码（admin）来访问这个MySQL Server</p>
<p>#必须加类似这样的帐户，才可以远程登陆。 root帐户是无法远程登陆的，只可以本地登陆<br>[/sql]</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Database </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ecshop后台增加模块菜单详细教程]]></title>
      <url>http://www.ibmer.info/ecshop-admin-menu.html</url>
      <content type="html"><![CDATA[<p>一：ecshop后台管理 admin/includes/inc_menu.php 添加上你要添加的功能<br>admin/includes/inc_priv.php 对应在inc_menu里面添加的东西，添加到inc_priv.php里面<br>二：前台语言包 languages/zh_cn/admin/priv_action.php 对应前面的添加上相应的权限</p>
<p>三：根据你添加的功能 在语言包里添加上相对应的php文件</p>
<p>四：在languages/zh_cn/admin/common.php文件中,增加一变量$_LANG[‘00manage_accept’] = ‘新添内容’;</p>
<p>五：在表ecs_admin_action中添加菜单元素。在后台权限管理/管理员列表中才可以给其他用户增加新添得菜单权限</p>
<p>六：在language/zh_cn/admin/log_action.php中设置具体的管理员操作需要的-变量</p>
<p>&nbsp;</p>
<p>首先需要修改四个文件:inc_priv.php,inc_menu.php,priv_action.php,commn.php</p>
<p>1.首先打开language/zh_cn/admin/commn.php<br>假如当前的项要加在商品管理的菜单下<br>在其下面加入如代码：</p>
<p>[php]<br>$_LANG[‘77_goods_export’] = ‘进货管理’;<br>$_LANG[‘78_goods_export’] = ‘出货管理’;<br>[/php]</p>
<p>2.打开admin/includes/modules/inc_menu.php<br>加如下代码：</p>
<p>[php]<br>$modules[‘02_cat_and_goods’][‘77_goods_export’]             = ‘jh.php?act=list’;<br>$modules[‘02_cat_and_goods’][‘78_goods_export’]             = ‘ch.php?act=list’;<br>[/php]</p>
<p>配置好上面两个步骤之后  清理缓存，后台左侧商品管理菜单下就会多出两个菜单，<br>3.配置权限体系language/zh_cn/admin/priv_action.php</p>
<p>[php]<br>$_LANG[‘jhgl’] = ‘进货管理’;<br>$_LANG[‘chgl’] = ‘出货管理’;<br>[/php]</p>
<p>4.打开admin/includes/inc_priv.php</p>
<p>Php代码<br>$purview[‘77_goods_export’]    = ‘jhgl’;<br>$purview[‘78_goods_export’]    = ‘chgl’;</p>
<p>至此，权限分配完毕，可是在权限分配面板里，却没有看到进货管理和出货管理这两项的权限。<br>我当时也是遇到这个问题，找了好久，才找到解决办法，是需要在esc_admin_action这个表里加一些内容才可以</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ecshop </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[禁用和关闭ECSHOP缓存]]></title>
      <url>http://www.ibmer.info/ecshop-cache-close.html</url>
      <content type="html"><![CDATA[<p>ECSHOP的缓存机制从一定程度上可以减少ECSHOP反复读取数据库的几率，从而一定程度上降低服务器负担，提高访问速度。<br>但是启用缓存机制，对一些新手站长也有不利的地方。我就遇到很多新手站长经常问，我明明修改了什么什么，为什么前台就没变化呢，这就是缓存在作怪，一般到后台清除缓存就可以了。</p>
<p>鉴于上述原因，有一些站长就在想能不能“禁用ECSHOP缓存，关闭ECSHOP缓存”呢？答案是肯定的。<br>下面就来讲一讲“如何禁用ECSHOP缓存，如何关闭ECSHOP缓存？”</p>
<p>ECSHOP的缓存分两种，一种是SMARTY的页面缓存；另一种是SQL查询结果的缓存。<br>这两种缓存都是保存在templates/caches/文件夹下。<br>只要我们分别关闭这两个缓存，就可以完全禁用ECSHOP的缓存。<br>当然你也可以根据自己的需要关闭其中某一个。</p>
<p>１、关闭SMARTY的缓存：<br>打开includes/cls_template.php，找到下面一段</p>
<p>[php]<br>if (file_put_contents($hash_dir . ‘/‘ . $cachename . ‘.php’, ‘&lt;?php exit;?&gt;’ . $data . $out, LOCK_EX) === false)<br>{<br>trigger_error(‘can\’t write:’ . $hash_dir . ‘/‘ . $cachename . ‘.php’);<br>}<br>[/php]</p>
<p>将这一部分注释掉即可，改成</p>
<p>[php]<br>/<em><br>if (file_put_contents($hash_dir . ‘/‘ . $cachename . ‘.php’, ‘&lt;?php exit;?&gt;’ . $data . $out, LOCK_EX) === false)<br>{<br>trigger_error(‘can\’t write:’ . $hash_dir . ‘/‘ . $cachename . ‘.php’);<br>}
</em>/<br>[/php]</p>
<p>２、关闭SQL查询结果缓存</p>
<p>打开includes/cls_mysql.php<br>找到<br>var $max_cache_time=3600;//最大的缓存时间，以秒为单位<br>改为<br>var $max_cache_time=0;//最大的缓存时间，以秒为单位</p>
<p>经过上面修改后，就已经将ECSHOP的页面缓存和数据查询缓存都禁用了，这样当你做了任何修改后，前台都能马上体现出最新的变化，但是对服务器的压力会比禁用缓存之前稍微大那么一点。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ecshop </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[fonts.googleapis.com导致wordpress相应速度慢]]></title>
      <url>http://www.ibmer.info/fonts-googleapis-wp-slow.html</url>
      <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>阿里云应该不算很慢，今天有朋友反映<a href="http://ibmer.info" target="_blank" rel="external">本网站</a>  反映速度慢，我tracert一下，发现了wp访问了fonts.googleapis.com导致系统响应慢。消耗22S才能打开主页。。。</p>
<p><a href="/images/wp-uploads/2014/06/tracer-1.jpg"><img src="/images/wp-uploads/2014/06/tracer-1.jpg" alt="tracer-1"></a></p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>屏蔽主题styles.php中下面代码</p>
<p>//wp_enqueue_style( ‘theme-font’, add_query_arg( $query_args, “$protocol://fonts.googleapis.com/css” ), array(), null );</p>
<p>发现还有一个访问。</p>
<p><a href="/images/wp-uploads/2014/06/tracer-2.jpg"><img src="/images/wp-uploads/2014/06/tracer-2.jpg" alt="tracer-2"></a> 屏蔽wp-includes\script-loader.php下面代码，</p>
<p>//$open_sans_font_url = “//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=$subsets”;</p>
<p>再次访问，速度明显好了很多。</p>
<p><a href="/images/wp-uploads/2014/06/tracer-3.jpg"><img src="/images/wp-uploads/2014/06/tracer-3.jpg" alt="tracer-3"></a></p>
<p>### </p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[php通过curl发送短信]]></title>
      <url>http://www.ibmer.info/php-sms.html</url>
      <content type="html"><![CDATA[<h3 id="php发短信"><a href="#php发短信" class="headerlink" title="php发短信"></a>php发短信</h3><p>php发送短信是常用的功能，无论飞信，普通短信sms接口，都是可以通过CURL发送短信。</p>
<p>###<br>题外话：</p>
<p>其实在Linux中，直接可以用curl发送信息，下面以飞信为例子：</p>
<p>在Linux命令行下通过curl命令给自己的手机号（假设为13800138000）发送短信</p>
<p>curl “<a href="http://sms.api.bz/fetion.php?username=13800138000&amp;password=123456&amp;sendto=13800138000&amp;message=短信内容" target="_blank" rel="external">http://sms.api.bz/fetion.php?username=13800138000&amp;password=123456&amp;sendto=13800138000&amp;message=短信内容</a>“</p>
<p>&nbsp;</p>
<p>这样其实php代码只是做了上面的翻译而已，很简单能实现</p>
<h3 id="PHP代码"><a href="#PHP代码" class="headerlink" title="PHP代码"></a>PHP代码</h3><p>[php]<br>&lt;pre&gt;$testTime=mktime();<br>$org=1999;<br>$usr=&quot;ibmer&quot;;<br>$pwd=&quot;info&quot;;<br>$tel=&quot;13800138000&quot;;<br>$msg=&quot;测试短信【来自ibmer.info】&quot;;<br>$act=strtoupper($_GET[‘action’])</p>
<p>//http方式发送<br>if ( $act == strtoupper(&quot;http.send&quot;)){<br>    $msg=&quot;http.php=&gt;&quot;.$msg;<br>    $serverUrl=&quot;<a href="http://sms.api.bz/fetion.php&quot;;//短信供应商接口" target="_blank" rel="external">http://sms.api.bz/fetion.php&quot;;//短信供应商接口</a></p>
<pre><code>$msg=mb_convert_encoding($msg,&apos;gbk&apos;,&apos;utf-8&apos;);        //乱码处理（根据实际添加）
$post_data=&amp;quot;?username=13800138000&amp;amp;password=123456&amp;amp;sendto=13800138000&amp;amp;message=短信内容&amp;quot;;//传输字符串

$ch = curl_init();
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_HEADER, 0);                //返回内容中不包含 HTTP 头

curl_setopt($ch, CURLOPT_URL,$serverUrl);
curl_setopt($ch, CURLOPT_NOBODY, 0);                 //读取页面内容
curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);            //不自动显示内容

$response = curl_exec($ch);
curl_close($ch);
echo $response;
exit();                                           
</code></pre><p>}</p>
<p>[/php]</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MYSQL千万级数据量的优化方法积累]]></title>
      <url>http://www.ibmer.info/mysql-big-data-optimize.html</url>
      <content type="html"><![CDATA[<p><div><strong>1、分库分表</strong></div></p>
<p><div>很明显，一个主表（也就是很重要的表，例如用户表）无限制的增长势必严重影响性能，分库与分表是一个很不错的解决途径，也就是性能优化途径，现 在的案例是我们有一个1000多万条记录的用户表members,查询起来非常之慢，同事的做法是将其散列到100个表中，分别从members0到 members99，然后根据mid分发记录到这些表中，牛逼的代码大概是这样子：</div></p>
<p><div>&lt;?php</div></p>
<p><div>for($i=0;$i&lt; 100; $i++ ){</div></p>
<p><div>     //echo “CREATE TABLE db2.members{$i} LIKE db1.members&lt;br&gt;”;</div></p>
<p><div>     echo “INSERT INTO members{$i} SELECT * FROM members WHERE mid0={$i}&lt;br&gt;”;</div></p>
<p><div>}</div></p>
<p><div>?&gt;</div></p>
<p><div></div></p>
<p><div><strong>2、不停机修改mysql表结构</strong></div></p>
<p><div>同样还是members表，前期设计的表结构不尽合理，随着数据库不断运行，其冗余数据也是增长巨大，同事使用了下面的方法来处理：</div></p>
<p><div>先创建一个临时表：</div></p>
<p><div>CREATE TABLE members_tmp LIKE members</div></p>
<p><div>然后修改members_tmp的表结构为新结构，接着使用上面那个for循环来导出数据，因为1000万的数据一次性导出是不对的，mid是主键，一个区间一个区间的导，基本是一次导出5万条吧，这里略去了</div></p>
<p><div>接着重命名将新表替换上去：</div></p>
<p><div>RENAME TABLE members TO members_bak,members_tmp TO members;</div></p>
<p><div>就是这样，基本可以做到无损失，无需停机更新表结构，但实际上RENAME期间表是被锁死的，所以选择在线少的时候操作是一个技巧。经过这个操作，使得原先8G多的表，一下子变成了2G多</div></p>
<p><div></div></p>
<p><div>另外还讲到了mysql中float字段类型的时候出现的诡异现象，就是在pma中看到的数字根本不能作为条件来查询</div><br><strong>3、常用SQL语句优化：</strong></p>
<ol>
<li><p>数据库(表)设计合理<br>我们的表设计要符合3NF   3范式(规范的模式) , 有时我们需要适当的逆范式</p>
</li>
<li><p>sql语句的优化(索引，常用小技巧.)</p>
</li>
<li>数据的配置(缓存设大)</li>
<li>适当硬件配置和操作系统 (读写分离.)<br>数据的3NF</li>
</ol>
<p>1NF :就是具有原子性，不可分割.(只要使用的是关系性数据库，就自动符合)</p>
<p>2NF: 在满足1NF 的基础上，我们考虑是否满足2NF: 只要表的记录满足唯一性,也是说,你的同一张表，不可能出现完全相同的记录, 一般说我们在 表中设计一个主键即可.</p>
<p>3NF: 在满足2NF 的基础上，我们考虑是否满足3NF：即我们的字段信息可以通过关联的关系，派生即可.(通常我们通过外键来处理)</p>
<p>逆范式: 为什么需呀逆范式:</p>
<p>(相册的功能对应数据库的设计)</p>
<p>适当的逆范式.</p>
<p>&nbsp;</p>
<p>sql语句的优化</p>
<p>sql语句有几类</p>
<p>ddl (数据定义语言) [create alter drop]</p>
<p>dml(数据操作语言)[insert delete upate ]</p>
<p>select</p>
<p>dtl(数据事务语句) [commit rollback savepoint]</p>
<p>dcl(数据控制语句) [grant  revoke]</p>
<p>show status命令</p>
<p>该命令可以显示你的mysql数据库的当前状态.我们主要关心的是 “com”开头的指令</p>
<p>show status like ‘Com%’  &lt;=&gt; show session  status like ‘Com%’  //显示当前控制台的情况</p>
<p>show global  status like ‘Com%’ ; //显示数据库从启动到 查询的次数</p>
<p>显示连接数据库次数</p>
<p>show status like  ‘Connections’;</p>
<p>这里我们优化的重点是在 慢查询. (在默认情况下是10 ) mysql5.5.19</p>
<p>&nbsp;</p>
<p>显示查看慢查询的情况</p>
<p>show variables like ‘long_query_time’</p>
<p>&nbsp;</p>
<p>为了教学，我们搞一个海量表(mysql存储过程)</p>
<p>目的，就是看看怎样处理，在海量表中，查询的速度很快!</p>
<p>select * from emp where empno=123456;</p>
<p>需求：如何在一个项目中，找到慢查询的select , mysql数据库支持把慢查询语句，记录到日志中，程序员分析. (但是注意，默认情况下不启动.)</p>
<p>步骤:</p>
<ol>
<li><p>要这样启动mysql<br>进入到 mysql安装目录</p>
</li>
<li><p>启动 xx&gt;bin\mysqld.exe –slow-query-log   这点注意</p>
</li>
</ol>
<p>测试 ,比如我们把</p>
<p>select * from emp where empno=34678 ；</p>
<p>用了1.5秒，我现在优化.</p>
<p>&nbsp;</p>
<p>快速体验: 在emp表的 empno建立索引.</p>
<p>alter table emp add primary key(empno);</p>
<p>//删除主键索引</p>
<p>alter table emp drop primary key</p>
<p>然后，再查速度变快.</p>
<p>l         索引的原理</p>
<p>&nbsp;</p>
<p>介绍一款非常重要工具explain, 这个分析工具可以对 sql语句进行分析,可以预测你的sql执行的效率.</p>
<p>他的基本用法是:</p>
<p>explain sql语句\G</p>
<p>//根据返回的信息，我们可知,该sql语句是否使用索引，从多少记录中取出,可以看到排序的方式.</p>
<p>&nbsp;</p>
<p>l         在什么列上添加索引比较合适</p>
<p>&nbsp;</p>
<p>①     在经常查询的列上加索引.</p>
<p>②     列的数据，内容就只有少数几个值,不太适合加索引.</p>
<p>③     内容频繁变化，不合适加索引</p>
<p>&nbsp;</p>
<p>l         索引的种类</p>
<p>①     主键索引 (把某列设为主键，则就是主键索引)</p>
<p>②     唯一索引(unique) （即该列具有唯一性，同时又是索引）</p>
<p>③     index （普通索引）</p>
<p>④     全文索引(FULLTEXT)</p>
<p>select * from article where content like ‘%李连杰%’;</p>
<p>hello, i am a boy</p>
<p>l       你好，我是一个男孩  =&gt;中文 sphinx</p>
<p>&nbsp;</p>
<p>⑤     复合索引(多列和在一起)</p>
<p>create index myind on 表名 (列1,列2);</p>
<p>&nbsp;</p>
<p>l         如何创建索引</p>
<p>如果创建unique / 普通/fulltext 索引</p>
<p>1. create [unique|FULLTEXT] index 索引名 on 表名 (列名…)</p>
<p>2. alter table 表名 add index 索引名 (列名…)</p>
<p>//如果要添加主键索引</p>
<p>alter table 表名 add primary key (列…)</p>
<p>&nbsp;</p>
<p>删除索引</p>
<ol>
<li>drop index 索引名 on 表名</li>
<li>alter table 表名 drop index index_name;</li>
<li>alter table 表名 drop primary key<br>显示索引</li>
</ol>
<p>show index(es) from 表名</p>
<p>show keys from 表名</p>
<p>desc 表名</p>
<p>&nbsp;</p>
<p>如何查询某表的索引</p>
<p>show indexes from 表名</p>
<p>&nbsp;</p>
<p>l         使用索引的注意事项</p>
<p>查询要使用索引最重要的条件是查询条件中需要使用索引。</p>
<p>下列几种情况下有可能使用到索引：<br>1，对于创建的多列索引，只要查询条件使用了最左边的列，索引一般就会被使用。<br>2，对于使用like的查询，查询如果是  ‘�a’ 不会使用到索引 aaa%’ 会使用到索引。</p>
<p>下列的表将不使用索引：<br>1，如果条件中有or，即使其中有条件带索引也不会使用。<br>2，对于多列索引，不是使用的第一部分，则不会使用索引。<br>3，like查询是以%开头<br>4，如果列类型是字符串，那一定要在条件中将数据使用引号引用起来。否则不使用索引。<br>5，如果mysql估计使用全表扫描要比使用索引快，则不使用索引。</p>
<p>l         如何检测你的索引是否有效</p>
<p>&nbsp;</p>
<p>结论: Handler_read_key 越大越少</p>
<p>Handler_read_rnd_next 越小越好</p>
<p>fdisk</p>
<p>find</p>
<p>&nbsp;</p>
<p>l         MyISAM 和 Innodb区别是什么</p>
<ol>
<li>MyISAM 不支持外键, Innodb支持</li>
<li>MyISAM 不支持事务,不支持外键.</li>
<li>对数据信息的存储处理方式不同.（如果存储引擎是MyISAM的，则创建一张表，对于三个文件..,如果是Innodb则只有一张文件 *.frm,数据存放到ibdata1）<br>&nbsp;</li>
</ol>
<p>对于 MyISAM 数据库，需要定时清理</p>
<p>optimize table 表名</p>
<p>&nbsp;</p>
<p>l         常见的sql优化手法</p>
<ol>
<li><p>使用order by null  禁用排序<br>比如 select * from dept group by ename order by null</p>
</li>
<li><p>在精度要求高的应用中，建议使用定点数(decimal)来存储数值，以保证结果的准确性<br>3.  如果字段是字符类型的索引，用作条件查询时一定要加单引号，不然索引无效。</p>
</li>
<li><p>主键索引如果没用到，再查询for update这种情况，会造成表锁定。容易造成卡死。</p>
</li>
</ol>
<p>1000000.32 万</p>
<p>create table sal(t1 float(10,2));</p>
<p>create table sal2(t1 decimal(10,2));</p>
<p>&nbsp;</p>
<p>问?在php中 ,int 如果是一个有符号数，最大值. int- 4*8=32   2 31 -1</p>
<p>l         表的水平划分</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>l         垂直分割表</p>
<p>如果你的数据库的存储引擎是MyISAM的，则当创建一个表，后三个文件. <em>.frm 记录表结构. </em>.myd 数据  *.myi 这个是索引.</p>
<p>mysql5.5.19的版本，他的数据库文件，默认放在 （看 my.ini文件中的配置.）</p>
<p>l         读写分离</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Database </tag>
            
            <tag> 数据库优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySql中取出每个分组中的前N条记录 ]]></title>
      <url>http://www.ibmer.info/mysql-group-and-top-n.html</url>
      <content type="html"><![CDATA[<h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p><span style="font-size: small;">mysql中有个表：article（字段：id,type,date），type有1-10，10种类型。现在要用SQL找出每种类型中时间最新的前N个数据组成的集合。</span></p>
<h3 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h3><p>[sql]</p>
<p>select a1.* from article a1<br>inner join<br>(select a.Category,a.id from article a left join article b<br>on a.Category=b.Category and a.id&lt;=b.id<br>group by a.Category,a.id<br>having count(b.id)&lt;=2<br>)b1<br>on a1.Category=b1.Category and a1.id=b1.id<br>order by a1.Category,a1.id desc</p>
<p>[/sql]</p>
<p>方法2</p>
<p>[sql]<br>SELECT a.id , a.title , a.cate<br>FROM article AS a LEFT JOIN article AS b ON a.cate = b.cate AND a.id &lt; b.id<br>GROUP BY a.id , a.title , a.cate<br>HAVING COUNT (b .id ) &lt; 5<br>ORDER BY a.id DESC;<br>[/sql]</p>
<p>方法3</p>
<p>[sql]<br>SELECT <em> FROM article AS a<br>WHERE 5 &gt; ( SELECT COUNT(</em>) FROM article WHERE cate = a.cate AND id &gt; a.id )<br>ORDER BY id DESC;<br>[/sql]</p>
<p>讲解：关键是子查询，这里类似一个while循环，每条记录去匹配和它同类的下一条记录。计算以它开始算起记录条数，意思就是他当前所在的行号，当行号小于5的时候，证明他下面有至多5条记录，则符合子查询条件，返回到结果集里。这样就查询出了每类的前5条记录。 </p>
<p></p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Database </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android连接LEAP]]></title>
      <url>http://www.ibmer.info/android-leap-ibm-wifi.html</url>
      <content type="html"><![CDATA[<p>如果在IBM想要用android连接网络，这里有几个方法提供</p>
<p>1)如果你的android已经root，可以通过下面方法连接</p>
<p>/data/misc/wifi/wpa_supplicant.conf</p>
<p>[shell]<br>network={<br>ssid=&quot;IBM&quot;<br>key_mgmt=WPA-EAP<br>eap=LEAP<br>identity=&quot;xxx@cn.ibm.com&quot;<br>password=&quot;11234567&quot;<br>}</p>
<p>[/shell]</p>
<p>2.如果没有root，可以用下载软件设置</p>
<p>如LEAP WIFI FREE</p>
<p>或者<a href="/images/wp-uploads/hxy/IBMLeapMgr_v1.3.apk">IBMLeapMgr</a>连接网络。</p>
<p>可以扫描下载IBMLeapMgr:</p>
<p>[caption id=”attachment_126” align=”alignnone” width=”280”]<a href="/images/wp-uploads/2014/06/IBMLeapMgr.png"><img src="/images/wp-uploads/2014/06/IBMLeapMgr.png" alt="IBMLeapMgr下载连接"></a> IBMLeapMgr下载连接[/caption]</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IBM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[详解MySQL中EXPLAIN解释命令]]></title>
      <url>http://www.ibmer.info/mysql-explain.html</url>
      <content type="html"><![CDATA[<p>explain显示了mysql如何使用索引来处理select语句以及连接表。可以帮助选择更好的索引和写出更优化的查询语句。</p>
<p>使用方法，在select语句前加上explain就可以了：</p>
<p>如</p>
<p>explain <span class="keyword"><strong><span style="color: #006699;">select</span></strong></span> surname,first_name form a,b <span class="keyword"><strong><span style="color: #006699;">where</span></strong></span> a.id=b.id</p>
<p><strong>EXPLAIN列的解释：</strong></p>
<p>table：显示这一行的数据是关于哪张表的</p>
<p><span style="color: #ff0000;"><strong>type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、indexhe和ALL</strong></span></p>
<p>possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句</p>
<p>key： 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MYSQL忽略索引</p>
<p>key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好</p>
<p>ref：显示索引的哪一列被使用了，如果可能的话，是一个常数</p>
<p>rows：MYSQL认为必须检查的用来返回请求数据的行数</p>
<p>Extra：关于MYSQL如何解析查询的额外信息。将在表4.3中讨论，但这里可以看到的坏的例子是Using temporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢</p>
<p><strong>extra列返回的描述的意义</strong></p>
<p>Distinct:一旦MYSQL找到了与行相联合匹配的行，就不再搜索了</p>
<p>Not exists: MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了</p>
<p>Range checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一</p>
<p>Using filesort: 看到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行</p>
<p>Using index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候</p>
<p>Using temporary 看到这个的时候，查询需要优化了。这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上</p>
<p>Where used 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序）</p>
<p>system 表只有一行：system表。这是const连接类型的特殊情况</p>
<p>const:表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MYSQL先读这个值然后把它当做常数来对待</p>
<p>eq_ref:在连接中，MYSQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用</p>
<p>ref:这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好</p>
<p>range:这个连接类型使用索引返回一个范围中的行，比如使用&gt;或&lt;查找东西时发生的情况</p>
<p>index: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）</p>
<p>ALL:这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Database </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MyISAM InnoDB 区别]]></title>
      <url>http://www.ibmer.info/myisam-and-innodb.html</url>
      <content type="html"><![CDATA[<h3 id="MyISAM-和-InnoDB-区别"><a href="#MyISAM-和-InnoDB-区别" class="headerlink" title="　　MyISAM 和 InnoDB 区别"></a>　　MyISAM 和 InnoDB 区别</h3><p>InnoDB和MyISAM是许多人在使用MySQL时最常用的两个表类型，这两个表类型各有优劣，视具体应用而定。基本的差别 为：MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持。<span style="color: #ff0000;"><strong>MyISAM类型的表强调的是性能</strong></span>，其执行数度比InnoDB类型更快，但是不 提供事务支持，而<span style="color: #ff0000;"><strong>InnoDB提供事务支持已经外部键等高级数据库功能</strong></span>。</p>
<p>以下是一些细节和具体实现的差别：</p>
<p>◆1.InnoDB不支持FULLTEXT类型的索引。</p>
<p>◆2.InnoDB 中不保存表的具体行数，也就是说，执行select count(<em>) from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(</em>)语句包含 where条件时，两种表的操作是一样的。</p>
<p>◆3.对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</p>
<p>◆4.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</p>
<p>◆5.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性(例如外键)的表不适用。</p>
<p>另外，InnoDB表的行锁也不是绝对的，假如在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</p>
<p>两种类型最主要的差别就是Innodb 支持事务处理与外键和行级锁.而MyISAM不支持.所以MyISAM往往就容易被人认为只适合在小项目中使用。</p>
<p>我作为使用MySQL的用户角度出发，Innodb和MyISAM都是比较喜欢的，但是从我目前运维的数据库平台要达到需求：<strong><span style="color: #ff0000;">99.9%的稳定性，方便的扩展性和高可用性来说的话，MyISAM绝对是我的首选</span></strong>。</p>
<p>原因如下：</p>
<p>1、首先我目前平台上承载的大部分项目是读多写少的项目，而MyISAM的读性能是比Innodb强不少的。</p>
<p>2、MyISAM的索引和数据是分开的，并且索引是有压缩的，内存使用率就对应提高了不少。能加载更多索引，而Innodb是索引和数据是紧密捆绑的，没有使用压缩从而会造成Innodb比MyISAM体积庞大不小。</p>
<p>3、从平台角度来说，经常隔1，2个月就会发生应用开发人员不小心update一个表where写的范围不对，导致这个表没法正常用了，这个时 候MyISAM的优越性就体现出来了，随便从当天拷贝的压缩包取出对应表的文件，随便放到一个数据库目录下，然后dump成sql再导回到主库，并把对应 的binlog补上。如果是Innodb，恐怕不可能有这么快速度，别和我说让Innodb定期用导出xxx.sql机制备份，因为我平台上最小的一个数 据库实例的数据量基本都是几十G大小。</p>
<p>4、从我接触的应用逻辑来说，select count(*) 和order by 是最频繁的，大概能占了整个sql总语句的60%以上的操作，而这种操作Innodb其实也是会锁表的，很多人以为Innodb是行级锁，那个只是 where对它主键是有效，非主键的都会锁全表的。</p>
<p>5、还有就是经常有很多应用部门需要我给他们定期某些表的数据，MyISAM的话很方便，只要发给他们对应那表的frm.MYD,MYI的文 件，让他们自己在对应版本的数据库启动就行，而Innodb就需要导出xxx.sql了，因为光给别人文件，受字典数据文件的影响，对方是无法使用的。</p>
<p>6、如果和MyISAM比insert写操作的话，Innodb还达不到MyISAM的写性能，如果是针对基于索引的update操作，虽然MyISAM可能会逊色Innodb,但是那么高并发的写，从库能否追的上也是一个问题，还不如通过多实例分库分表架构来解决。</p>
<p>7、如果是用MyISAM的话，merge引擎可以大大加快应用部门的开发速度，他们只要对这个merge表做一些select count(*)操作，非常适合大项目总量约几亿的rows某一类型(如日志，调查统计)的业务表。</p>
<p>当然Innodb也不是绝对不用，用事务的项目如模拟炒股项目，我就是用Innodb的，活跃用户20多万时候，也是很轻松应付了，因此我个人也是很喜欢Innodb的，只是如果从数据库平台应用出发，我还是会首选MyISAM。</p>
<p>另外，可能有人会说你MyISAM无法抗太多写操作，但是我可以通过架构来弥补，说个我现有用的数据库平台容量：主从数据总量在几百T以上，每 天十多亿 pv的动态页面，还有几个大项目是通过数据接口方式调用未算进pv总数，(其中包括一个大项目因为初期memcached没部署,导致单台数据库每天处理 9千万的查询)。而我的整体数据库服务器平均负载都在0.5-1左右。</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Database </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 数据库优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[php时间函数大锦集]]></title>
      <url>http://www.ibmer.info/php-time-function.html</url>
      <content type="html"><![CDATA[<div id="cnblogs_post_body"><br><br>PHP中的时间函数有这么些:<br>(1)date<br>用法: date(格式,[时间]);<br>如果没有时间参数,则使用当前时间. 格式是一个字符串,其中以下字符有特殊意义:<br>U 替换成从一个起始时间(好象是1970年1月1日)以来的秒数<br><br>Y 替换成4位的年号.<br>y 替换成2位的年号.<br>F 替换成月份的英文全称.<br>M 替换成月份的英文简称.<br>m 替换成月份数.<br>z 替换成从当年1月1日以来的天数.<br>d 替换成日数.<br>l 替换成星期几的英文全称.<br>D 替换成星期几的英文简称.<br>w 替换成星期几(数字).<br>H 替换成小时数(24小时制).<br>h 替换成小时数(12小时制).<br>i 替换成分钟数.<br>s 替换成秒数.<br>A 替换成”AM”或”PM”.<br>a 替换成”am”或”pm”.<br>S 替换成序数字后缀,例如:”st”,”nd”,”rd”,”th”.<br>函数返回作过了替换的格式串.<br><br>(2)getdate(时间)<br>返回一个哈希表,各下标是:<br>“seconds” – 秒数<br>“minutes” – 分数<br>“hours” – 小时数<br>“mday” – 日数<br>“mon” – 月份数<br>“year” – 年号<br>“yday” – 1月1日以来的天数<br>“weekday” – 星期几,英文全称<br>“month” – 月份,英文全名<br>(3)gmdate<br>与date类似,但先将时间转换成格林威治标准时.<br>(4)mktime<br>用法:<br>mktime(小时数,分数,秒数,月,日,年); 返回一个时间值,可用于其他函数.<br><strong>(5)time()</strong><br>用法:<br>time(); 返回1970年1月1日零点以来的秒数.<br><strong>(6)microtime()</strong><br>用法:<br><span style="text-decoration: underline;">microtime(); 返回一个字符串,用空格分成两部分,后一部分相当于time()<br></span>的返回值,前一部分是微秒数.<br>(7)checkdate<br>checkdate(月,日,年); 返回逻辑真或逻辑假. 如果:<br>年在1900和32767之间(包括1900与32767);<br>月在1到12之间;<br>日在该月的允许日数范围内(考虑了闰年);<br><br>则返回逻辑真.<br>(8)set_time_limit<br>用法:<br>set_time_limit(秒数);<br>规定从该句运行时起程序必须在指定秒数内运行结束, 超时则程序出错退出.<br><br>1·　by：<br>PHP中所有函数都是UNIX纪元的，即从1970年1月1日开始的。日期是从这个时候开始的秒数。当一个函数调用从这时候计的秒数时，就把它当作(timestamp)时间戳。<br><br>本地时间函数<br><strong>1. **</strong>string date(string format,inieger timestamp)<strong>

</strong>该函数返回一个表示时间的字符串，是由string format 控制的。<br>如：<strong>

</strong>&lt;?<strong>

</strong>print(date(“Y年 m月d日”);//输出当前,年月日.<strong>

</strong>print(date(“Y年 m月d日”,60<em>60</em>24<em>365</em>10);//输出1980年1月1日.<strong>

</strong>?&gt;<strong>

</strong>也许你会问,怎麽没有timestamp呢?若timestamp为空时,或不写时,表示使用当前时间一刻timestamp.<strong>

</strong>表示年份的控制符： Y—四位的年份 y—两位的年份<strong>

</strong>表示月份的控制符： m—从1-12的月份 F—英文月份名 M—简写的月份名<strong>

</strong>表示日号的控制符： d—前面有0的月份中日期 j–前面没有0的日号<strong>

</strong>表示星期的控制符： l–英文星期 D–简写的星期<strong>

</strong>表示小时的控制符： h–从1到12小时 H—从0到23的小时<strong>

</strong>表示上下午的控制符 a —am或pm A—AM或PM<strong>

</strong>表示分钟的控制符： i—取值00-59<strong>

</strong>另外的 z–一年中的日期<em>*<br><br>2. array getdate(integer timestamp)<br><br>该函数返回一个矩阵.<br><br>如:<br><br>&lt;?<br><br>$current_date=getdate();<br><br>print($current_date(“hours”));<br><br>print($current_date(“minutes”);<br><br>print($current_date(“seconds”);<br><br>?&gt;<br><br>说明:<br><br>元素 描述<br><br>hours 24小时格式的小时<br><br>mday 月份中日期<br><br>minutes 分钟<br><br>mon 数字形式的月份<br><br>month 月份全称<br><br>seconds 秒数<br><br>wday 从0到6的数字形式的星期几<br><br>weekday 星期几的名称<br><br>year 年份<br><br>0 时间戳即从1970年1月1日到现在的秒数<br><br>yday 一年中数字形式的日期<br><br>3. boolean checkdate(integer month,integer day,integer year)<br><br>该函数检查日期是否合法.如:<br><br>&lt;?<br><br>if(checkdate(2,29,1980))<br><br>print(“日期合法!n”);<br><br>?&gt;<br><br>4. integer time()<br><br>该函数获得当前时间戳.如:<br><br>&lt;?<br><br>print(time());//输出一大串整数<br><br>?&gt;<br><br>5. integer mktime(integer hour,integer minutes,integer seconds,integer month, integer day,integer year)<br><br>该函数返回给出日期的时间戳,即从1970年1月1日到现在的秒数.<br><br>如某参数超出范围,该函数也可以解释它,如13月即为第二年的一月.<br><br>如:<br><br>&lt;?<br><br>$currenthour=date(“H”);<br><br>print(“50个小时后为:”);<br><br>print(date(“h:i A l F dS,Y”,mktime($currenthour+50)));<br><br>print(“&lt;br&gt;n”);<br><br>?&gt;<br><br>6. string microtime()<br><br>该函数返回一个字符串,由当前时间的毫秒数+空格+从1970年开始的秒数<br><br>&lt;?<br><br>print(“start:microtime()&lt;br&gt;n”);<br><br>for($index=0;$index&lt;1000;$index++)<br><br>print(“good!”);<br><br>print(“stop:microtime()&lt;br&gt;n”);<br><br>?&gt;<br><br>还有,各林威治标准时间函数,不常用我就不说了!常用的就这些。<br><br>——————————————————————————–<br><wbr><br>2·　by：楼主<br><br>一个问题举例<br>$nowdate=”1999-08-05” ;<br><br>$aa=getdate($nowdate);<br><br>$year=$aa[‘year’];<br><br>$month=$aa[‘mon’];<br><br>echo $year.”&lt;/br&gt;”;<br><br>echo $month;<br><br>为何得到：<br><br>1970<br><br>1<br><br>我希望得到：<br><br>1999<br><br>8<br><br>如何解决？<br>——————————————————————————–<br>$nowdate=”1999-08-05” ;<br><br>$aa=strtotime($nowdate);<br><br>$year=date(“Y”,$aa);<br><br>$month=date(“n”,$aa);<br><br>echo $year.”&lt;/br&gt;”;<br><br>echo $month;<br><br>——————————————————————————–<br>3·　by：<br><br>1，年-月-日<br><br>echo date(‘Y-m-j’);<br><br>2007-02-6<br>echo date(‘y-n-j’);<br><br>07-2-6<br><br>大写Y表示年四位数字，而小写y表示年的两位数字；<br><br>小写m表示月份的数字(带前导)，而小写n则表示不带前导的月份数字。<br><br>echo date(‘Y-M-j’);<br><br>2007-Feb-6<br><br>echo date(‘Y-m-d’);<br><br>2007-02-06<br><br>大写M表示月份的3个缩写字符，而小写m则表示月份的数字(带前导0);<br><br>没有大写的J，只有小写j表示月份的日期，无前导o；若需要月份带前导则使用小写d。<br><br>echo date(‘Y-M-j’);<br><br>2007-Feb-6<br><br>echo date(‘Y-F-jS’);<br><br>2007-February-6th<br><br>大写M表示月份的3个缩写字符，而大写F表示月份的英文全写。(没有小写f)<br><br>大写S表示日期的后缀，比如“st”、“nd”、“rd”和“th”，具体看日期数字为何。<br><br>小结：<br><br>表示年可以用大写的Y和小写y;<br><br>表示月可以用大写F、大写M、小写m和小写n(分别表示字符和数字的两种方式);<br><br>表示日可以用小写d和小写j，大写S表示日期的后缀。<br><br>2，时:分:秒<br><br>默认情况下，PHP解释显示的时间为“格林威治标准时间”，与我们本地的时间相差8个小时。<br><br>echo date(‘g:i:s a’);<br><br>5:56:57 am<br><br>echo date(‘h:i:s A’);<br><br>05:56:57 AM<br><br>小写g表示12小时制，无前导0，而小写h则表示有前导0的12小时制。<br><br>当使用12小时制时需要表明上下午，小写a表示小写的“am”和“pm”，大写A表示大写的“AM”和“PM”。<br><br>echo date(‘G:i:s’);<br><br>14:02:26<br><br>大写G表示24小时制的小时数，但是不带前导的；使用大写的H表示带前导的24小时制小时数<br><br>小结：<br><br>字母g表示小时不带前导，字母h表示小时带前导；<br><br>小写g、h表示12小时制，大写G、H表示24小时制。<br><br>3，闰年、星期、天<br><br>echo date(‘L’);<br><br>今年是否闰年：0<br><br>echo date(‘l’);<br><br>今天是：Tuesday<br><br>echo date(‘D’);<br><br>今天是：Tue<br><br>大写L表示判断今年是否闰年，布尔值，为真返回1，否则为0；<br><br>小写l表示当天是星期几的英文全写(Tuesday)；<br><br>而使用大写D表示星期几的3个字符缩写(Tue)。<br><br>echo date(‘w’);<br>今天星期：2<br><br>echo date(‘W’);<br><br>本周是全年中的第 06 周<br><br>小写w表示星期几，数字形式表示<br><br>大写W表示一年中的星期数<br><br>echo date(‘t’);<br><br>本月是 28 天<br><br>echo date(‘z’);<br><br>今天是今年的第 36 天<br><br>小写t表示当前月份又多少天<br><br>小写z表示今天是本年中第几天<br><br>4，其他<br><br>echo date(‘T’);<br><br>UTC<br><br>大写T表示服务器的时间区域设置<br><br>echo date(‘I’);<br><br>0<br><br>大写I表示判断当前是否为夏令时，为真返回1，否则为0<br><br>echo date(‘U’);<br><br>1170769424<br><br>大写U表示从1970年1月1日到现在的总秒数，就是Unix时间纪元的UNIX时间戳。<br><br>echo date(‘c’);<br><br>2007-02-06T14:24:43+00:00<br><br>小写c表示ISO8601日期，日期格式为YYYY-MM-DD，用字母T来间隔日期和时间，时间格式为HH:MM:SS，时区使用格林威治标准时间(GMT)的偏差来表示。<br><br>echo date(‘r’);<br><br>Tue, 06 Feb 2007 14:25:52 +0000<br><br>小写r表示RFC822日期。<br><br>——————————————————————————–<br><wbr><br>4·　by：<br><br>php中计算时间差有时候是件很麻烦的事!<br><br>不过我相信任何语言，只要撑握了其中规率就能找到办法，绝对是化腐朽为神奇的。<br><br>工作中经常要进行日期计算,下面总结几个工作中总结出的经验。先记下免得日后会忘！<br><br>1。第一种 计算时间段差（可以是分，秒，天）<br>$endtime=”2004-09-09 18:10:00”;<br><br>$d1=substr($endtime,17,2); //秒<br><br>$d2=substr($endtime,14,2); //分<br><br>$d3=substr($endtime,11,2); // 时<br><br>$d4=substr($endtime,8,2); //日<br><br>$d5=substr($endtime,5,2); //月<br><br>$d6=substr($endtime,0,4); //年<br>echo $d1.’-‘.$d2.’-‘.$d3.’-‘.$d5.’-‘.$d4.’-‘.$d6.”n”;<br><br>echo date(“Y-m-d H:i:s”).”n”;<br><br>$now_T=mktime(date(“H”),date(“i”),date(“s”),date(“m”),date(“d”),date(“Y”));<br><br>echo $now_T.”n”;<br><br>$now_S=mktime(“$d3”,”$d2”,”$d1”,”$d5”,”$d4”,”$d6”);<br><br>echo $now_S.”n”;<br><br>$end_TS=($now_S-$now_T)/60; <wbr> <wbr> //计算 剩余分钟<br><br>echo $end_TS;<br><br>?&gt;<br><br>注 $startdate=mktime(“0”,”0”,”0”,”1”,”1”,”2000”);<br><br><wbr> //所得到的值为从1970-1-1到参数时间的总秒数 那么 化为分 /60 <wbr> <wbr> 时 /3600 <wbr> <wbr> 天/3600/24 即可！ <wbr> <wbr><br>若mktime()中的参数缺省,那表示使用当前日期。<br><br>2. 如果有数据库就很容易了!若是MSSQL可以使用触发器!用专门计算日期差的函数datediff()便可!<br><br>若是MYSQL那就用两个日期字段的差值计算的计算结果保存在另一个数值型字段中!用时调用便可!<br><br>——————————————————————————–<br><wbr>5·　by：楼主<br><br>下列收集日期计算的方法：<br><br>某个日期加几天：<br><br>$tdate=date(“Y-m-d”);<br><br>$a=date( “Y-m-d”, mktime(0,0,0,date(“m”),date(“d”)+3,date(“Y”)));<br><br>$sql=”select </em> from memo where username=’$session_user_id’<br><br>and compid=$compid and telldate&gt;=’$tdate’ and telldate&lt;=’$a’<br><br>order by id desc”;<br><br>$ret=mysql_query($sql,$conn);<br><br>$a就是今天＋三天的时间！<br><br>$b=date( “Y-m-d”, mktime(0,0,0,date(“m”),date(“d”)-3,date(“Y”)));<br><br>$b就是今天-三天的时间！<br><br>////<br><br>某个日期加n天后的日期<br><br>$days=abs((strtotime(date(“Y-m-d”))-strtotime(“xxxx-xx-xx”))/86400);<br><br>/////<br><br>&lt;?PHP$Date_1=”2003-7-15”;//也可以是:$Date_1=”2003-7-15 23:29:14”;$Date_2=”1982-10-1”;$d1=strtotime($Date_1);$d2=strtotime($Date<em>2);$Days=round(($d1-$d2)/3600/24);Echo <wbr> <wbr> “偶已经奋斗了 $Days 天^</em>^”;?&gt;<br><br>——————————————————————————–<br><wbr><br>6·php中计算时间差的几种方法　by：楼主<br><br>一个简单的例子就是计算借书的天数,这需要php根据每天的日期进行计算,下面就来谈谈实现这种日期计算的几种方法:<br><br>(1) 如果有数据库就很容易了!若是MSSQL可以使用触发器!用专门计算日期差的函数datediff()便可!若是MYSQL那就用两个日期字段的差值计算的计算结果保存在另一个数值型字段中!用时调用便可!<br>(2)如果没有数据库,那就得完全用php的时间日期函数!下面主要说明之: <wbr> <wbr><br>例:计算1998年5月3日到1999-6-5的天数: <wbr> <wbr><br><br>&lt;? $startdate=mktime(“0”,”0”,”0”,”5”,”3”,”1998”);<br><br>$enddate=mktime(“0”,”0”,”0”,”6”,”5”,”1999”);<br>//所得到的值为从1970-1-1到参数时间的总秒数:是整数.那么<br><br>//下面的代码就好编多了:<br><br>$days=round(($enddate-$startdate)/3600/24) ;<br><br>//days为得到的天数;<br><br>若mktime()中的参数缺省,那表示使用当前日期,这样便可计算从借书日期至今的天数.<br><br>——————————————————————————–<br><wbr><br>7·　by：楼主<br><br>php中计算时间差有时候是件很麻烦的事!<br><br>不过我相信任何语言，只要撑握了其中规率就能找到办法，绝对是化腐朽为神奇的。<br><br>工作中经常要进行日期计算,下面总结几个工作中总结出的经验。先记下免得日后会忘！<br><br>1。第一种 计算时间段差（可以是分，秒，天）<br><br>$endtime=”2004-09-09 18:10:00”;<br><br>$d1=substr($endtime,17,2); //秒<br><br>$d2=substr($endtime,14,2); //分<br><br>$d3=substr($endtime,11,2); // 时<br><br>$d4=substr($endtime,8,2); //日<br><br>$d5=substr($endtime,5,2); //月<br><br>$d6=substr($endtime,0,4); //年<br><br>echo $d1.’-‘.$d2.’-‘.$d3.’-‘.$d5.’-‘.$d4.’-‘.$d6.”n”;<br><br>echo date(“Y-m-d H:i:s”).”n”;<br><br>$now_T=mktime(date(“H”),date(“i”),date(“s”),date(“m”),date(“d”),date(“Y”));<br><br>echo $now_T.”n”;<br><br>$now_S=mktime(“$d3”,”$d2”,”$d1”,”$d5”,”$d4”,”$d6”);<br><br>echo $now_S.”n”;<br><br>$end_TS=($now_S-$now_T)/60; <wbr> <wbr> //计算 剩余分钟<br><br>echo $end_TS;<br><br>?&gt;<br><br>注 $startdate=mktime(“0”,”0”,”0”,”1”,”1”,”2000”);<br><br><wbr> //所得到的值为从1970-1-1到参数时间的总秒数 那么 化为分 /60 <wbr> <wbr> 时 /3600 <wbr> <wbr> 天/3600/24 即可！ <wbr> <wbr><br><br>若mktime()中的参数缺省,那表示使用当前日期。<br><br>2. 如果有数据库就很容易了!若是MSSQL可以使用触发器!用专门计算日期差的函数datediff()便可!<br><br>若是MYSQL那就用两个日期字段的差值计算的计算结果保存在另一个数值型字段中!用时调用便可!<br><br>——————————————————————————–<br><wbr><br>8·　by<br>日期与时间函数库<br><br>——————————————————————————–<br>本函数库共有 12 个函数<br><br>checkdate: 验证日期的正确性。<br><br>date: 将服务器的时间格式化。<br><br>strftime: 将服务器的时间本地格式化。<br><br>getdate: 获得时间及日期信息。<br><br>gettimeofday: 取得目前时间。<br><br>gmdate: 取得目前与 GMT 差后的时间。<br><br>easter_date: 计算复活节日期。<br><br>easter_days: 计算复活节与三月廿一日之间日期数。<br><br>mktime: 取得 UNIX 时间戳记。<br><br>gmmktime: 取得 UNIX 时间戳记的格林威治时间。<br><br>time: 取得目前时间的 UNIX 时间戳记。<br><br>microtime: 取得目前时间的 UNIX 时间戳记的百万分之一秒值。<br><br>函数:checkdate()<br><br>——————————————————————————–<br>日期与时间函数库<br><br>checkdate<br><br>验证日期的正确性。<br><br>语法: int checkdate(int month, int day, int year);<br><br>返回值: 整数<br><br>函数种类: 时间日期<br><br>内容说明<br><br>若日期是有效的则返回 true，若日期有问题，则返回 false。本函数可以用来检查日期是否有效。有效范围如下：<br><br>年 为 0 至 32767 年<br><br>月 为 1 至 12 月<br><br>日 则随着月份及闰年变化<br><br>函数:date()<br><br>——————————————————————————–<br><br>日期与时间函数库<br>date<br><br>将服务器的时间格式化。<br><br>语法: string date(string format, int [timestamp]);<br><br>返回值: 字符串<br><br>函数种类: 时间日期<br><br>内容说明<br><br>返回值的字符串依配置的格式来决定。若有传入时间戳记值，则将时间戳记格式化返回；若无传入时间戳记值，则将目前服务器的时间格式化返回。要将日期转为其它的语系格式，应使用setlocale() 及 strftime() 二个函数。字符串格式化的选项如下：<br><br>a - “am” 或是 “pm”<br><br>A - “AM” 或是 “PM”<br><br>d - 几日，二位数字，若不足二位则前面补零; 如: “01” 至 “31”<br><br>D - 星期几，三个英文字母; 如: “Fri”<br><br>F - 月份，英文全名; 如: “January”<br><br>h - 12 小时制的小时; 如: “01” 至 “12”<br><br>H - 24 小时制的小时; 如: “00” 至 “23”<br><br>g - 12 小时制的小时，不足二位不补零; 如: “1” 至 12”<br><br>G - 24 小时制的小时，不足二位不补零; 如: “0” 至 “23”<br><br>i - 分钟; 如: “00” 至 “59”<br><br>j - 几日，二位数字，若不足二位不补零; 如: “1” 至 “31”<br><br>l - 星期几，英文全名; 如: “Friday”<br><br>m - 月份，二位数字，若不足二位则在前面补零; 如: “01” 至 “12”<br><br>n - 月份，二位数字，若不足二位则不补零; 如: “1” 至 “12”<br><br>M - 月份，三个英文字母; 如: “Jan”<br><br>s - 秒; 如: “00” 至 “59”<br><br>S - 字尾加英文序数，二个英文字母; 如: “th”，”nd”<br><br>t - 指定月份的天数; 如: “28” 至 “31”<br><br>U - 总秒数<br><br>w - 数字型的星期几，如: “0” (星期日) 至 “6” (星期六)<br><br>Y - 年，四位数字; 如: “1999”<br><br>y - 年，二位数字; 如: “99”<br><br>z - 一年中的第几天; 如: “0” 至 “365”<br><br>其它不在上列的字符则直接列出该字符。<br><br>使用范例<br><br>范例一:<br><br>&lt;?<br><br>print(date( “l dS of F Y h:i:s A” ));<br><br>print(“July 1, 2000 is on a “ . date(“l”, mktime(0,0,0,7,1,2000)));<br><br>?&gt;<br><br>范例二:<br><br>&lt;?<br><br>$tomorrow = mktime(0,0,0,date(“m”) ,date(“d”)+1,date(“Y”));<br><br>$lastmonth = mktime(0,0,0,date(“m”)-1,date(“d”), date(“Y”));<br><br>$nextyear = mktime(0,0,0,date(“m”), date(“d”, <wbr> <wbr> date(“Y”)+1);<br><br>?&gt;<br><br>函数:strftime()<br><br>——————————————————————————–<br>日期与时间函数库<br><br>strftime<br><br>将服务器的时间本地格式化。<br><br>语法: string strftime(string format, int [timestamp]);<br><br>返回值: 字符串<br><br>函数种类: 时间日期<br><br>内容说明<br><br>返回值的字符串依配置的格式来决定。若有传入时间戳记值，则将时间戳记格式化返回；若无传入时间戳记值，则将目前服务器的时间本地格式化返回。月份或者星期名称随着本地语系配置 setlocale() 的不同而改变。<br><br>返回的字符串可以依下列的格式而定：<br><br>%a 星期几的缩写。<br><br>%A 星期几的全名。<br><br>%b 月份名称的缩写。<br><br>%B 月份名称的全名。<br><br>%c 本地端日期时间较佳表示字符串。<br><br>%d 用数字表示本月的第几天 (范围为 00 至 31)。<br><br>%H 用 24 小时制数字表示小时数 (范围为 00 至 23)。<br><br>%I 用 12 小时制数字表示小时数 (范围为 01 至 12)。<br><br>%j 以数字表示当年度的第几天 (范围为 001 至 366)。<br><br>%m 月份的数字 (范围由 1 至 12)。<br><br>%M 分钟。<br><br>%p 以 ‘AM’ 或 ‘PM’ 表示本地端时间。<br><br>%S 秒数。<br><br>%U 数字表示为本年度的第几周，第一个星期由第一个周日开始。<br><br>%W 数字表示为本年度的第几周，第一个星期由第一个周一开始。<br><br>%w 用数字表示本周的第几天 ( 0 为周日)。<br><br>%x 不含时间的日期表示法。<br><br>%X 不含日期的时间表示法。<br><br>%y 二位数字表示年份 (范围由 00 至 99)。<br><br>%Y 完整的年份数字表示，即四位数。<br><br>%Z 时区或名称缩写。<br><br>%% % 字符。<br><br>使用范例<br>&lt;?php<br><br>setlocale (“LC_TIME”, “C”);<br><br>print(strftime(“%A in Finnish is “));<br><br>setlocale (“LC_TIME”, “fi”);<br><br>print(strftime(“%A, in French “));<br><br>setlocale (“LC_TIME”, “fr”);<br><br>print(strftime(“%A and in German “));<br><br>setlocale (“LC_TIME”, “de”);<br><br>print(strftime(“%A.<br><br>“));<br><br>?&gt;<br><br>函数:getdate()<br><br>——————————————————————————–<br><br>日期与时间函数库<br>getdate<br><br>获得时间及日期信息。<br><br>语法: array getdate(int timestamp);<br>返回值: 数组<br>函数种类: 时间日期<br>内容说明<br>返回数组的元素包括下列的项目：<br>“seconds” - 秒<br><br>“minutes” - 分<br><br>“hours” - 时<br><br>“mday” - 当月的第几天<br><br>“wday” - 当周的第几天数字<br><br>“mon” - 月份数字<br><br>“year” - 年，数字<br><br>“yday” - 当年的第几天数字; 如: “299”<br><br>“weekday” - 星期几全名; 如: “Friday”<br><br>“month” - 月份全名; 如: “January”<br>——————————————————————————–<br>函数:gettimeofday()<br>——————————————————————————–<br>日期与时间函数库<br>gettimeofday<br><br>取得目前时间。<br><br>语法: array gettimeofday(void)<br>返回值: 数组<br>函数种类: 时间日期<br>内容说明<br>返回数组的元素包括下列的项目：<br>“sec” - 秒<br><br>“usec” - 百万分之一秒<br><br>“minuteswest” - 格林威治时间的分<br><br>“dsttime” - 目的的时区<br><br>函数:gmdate()<br><br>——————————————————————————–<br>日期与时间函数库<br>gmdate<br><br>取得目前与 GMT 差后的时间。<br>语法: string gmdate(string format, int timestamp);<br>返回值: 字符串<br>函数种类: 时间日期<br>内容说明<br><br>本函数与 date() 函数相似，不同的是本函数返回与格林威治标准时间 (Greenwich Mean Time, GMT) 时间差后的时间。<br><br>使用范例<br><br>&lt;?php<br><br>echo date( “M d Y H:i:s”,mktime(0,0,0,1,1,1998) );<br><br>echo gmdate( “M d Y H:i:s”,mktime(0,0,0,1,1,1998) );<br><br>?&gt;<br><br>若执行本范例的机器在芬兰 (Finland, GMT +0200)，返回的结果为:<br><br>Jan 01 1998 00:00:00<br><br>Dec 31 1997 22:00:00<br>函数:easter_date()<br><br>——————————————————————————–<br>日期与时间函数库<br><br>easter_date<br><br>计算复活节日期。<br>语法: int easter_date(int [year]);<br><br>返回值: 整数<br>函数种类: 时间日期<br><br>内容说明<br>输入某一年份，则以 UNIX 时间戳记的格式返回该年的复活节日期，若没有输入年份，则计算当年的日期。值的注意的是输入的年份必需在公元 1970 至 2037 年之间，否则无法计算。<br><br>使用范例<br><br>&lt;?<br><br>echo date(“M-d-Y”, easter_date(1999));<br><br>echo date(“M-d-Y”, easter_date(2000));<br><br>echo date(“M-d-Y”, easter_date(2001));<br><br>?&gt;<br><br>返回结果为<br><br>Apr-04-1999<br><br>Apr-23-2000<br><br>Apr-15-2001<br><br>——————————————————————————–<br><wbr><br>9·　by：楼主<br><br>函数:easter_days()<br><br>——————————————————————————–<br>日期与时间函数库<br><br>easter_days<br><br>计算复活节与三月廿一日之间日期数。<br><br>语法: int easter_days(int [year]);<br>返回值: 整数<br><br>函数种类: 时间日期<br><br>内容说明<br><br>输入某一年份，则以计算该年复活节与三月二十一日之间的日期数，若没有输入年份，则以当年计算。这个函数可以用来替代 easter_date() 1970-2037 年外范围无法计算的问题。<br>使用范例<br>&lt;?<br><br>echo easter_days(1999);<br><br>echo easter_days(1492);<br><br>echo easter_days(1913);<br><br>?&gt;<br><br>返回结果为:<br><br>14 (4/4)<br><br>32 (4/22)<br><br>2 (3/23)<br>——————————————————————————–<br><wbr>10·　by：楼主<br><br>函数:mktime()<br>——————————————————————————–<br>日期与时间函数库<br>mktime<br><br>取得 UNIX 时间戳记。<br><br>语法: int mktime(int hour, int minute, int second, int month, int day, int year);<br><br>返回值: 整数<br><br>函数种类: 时间日期<br><br>内容说明<br>输入一个时间，则返回 UNIX 时间戳记的长整数。<br>使用范例<br><br>&lt;?<br><br>echo date( “M-d-Y”, mktime(0,0,0,12,32,1997) );<br><br>echo date( “M-d-Y”, mktime(0,0,0,13,1,1997) );<br><br>echo date( “M-d-Y”, mktime(0,0,0,1,1,1998) );<br><br>?&gt;<br><br>11·　by：楼主<br><br>函数:gmmktime()<br><br>——————————————————————————–<br>日期与时间函数库<br><br>gmmktime<br><br>取得 UNIX 时间戳记的格林威治时间。<br>语法: int gmmktime(int hour, int minute, int second, int month, int day, int year);<br><br>返回值: 整数<br><br>函数种类: 时间日期<br><br>内容说明<br><br>输入一个时间，则返回 UNIX 的格林威治时间戳记的长整数。<br><br>——————————————————————————–<br>12·　by：楼主<br><br>函数:time()<br><br>——————————————————————————–<br><br>日期与时间函数库<br>time<br><br>取得目前时间的 UNIX 时间戳记。<br><br>语法: int time(void);<br><br>返回值: 整数<br><br>函数种类: 时间日期<br>内容说明<br>返回目前时间的戳记值。<br>——————————————————————————–<br><wbr>13·　by：楼主<br><br>函数:microtime()<br><br>——————————————————————————–<br>日期与时间函数库<br>microtime<br><br>取得目前时间的 UNIX 时间戳记的百万分之一秒值。<br><br>语法: string microtime(void);<br><br>返回值: 字符串<br><br>函数种类: 时间日期<br><br>内容说明<br><br>返回目前时间的百万分之一秒戳记值。若操作系统没有提供 gettimeofday() 的系统呼叫函数，则本函数亦无效。<br><br></div>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP服务器的几个配置]]></title>
      <url>http://www.ibmer.info/php-server-setting.html</url>
      <content type="html"><![CDATA[<p>1.PHP短标签设置</p>
<p>打开php.ini，找到“short_open_tag = Off”，将其修改为“short_open_tag = On”，然后重启IIS或Apache即可。</p>
<p>; This directive determines whether or not PHP will recognize code between<br>; &lt;? and ?&gt; tags as PHP source which should be processed as such. It’s been<br>; recommended for several years that you not use the short tag “short cut” and<br>; instead to use the full &lt;?php and ?&gt; tag combination. With the wide spread use<br>; of XML and use of these tags by other languages, the server can become easily<br>; confused and end up parsing the wrong code in the wrong context. But because<br>; this short cut has been a feature for such a long time, it’s currently still<br>; supported for backwards compatibility, but we recommend you don’t use them.</p>
<p>2.上传文件太大了，修改上传文件大小限制</p>
<p>Maximum allowed size for uploaded files.</p>
<p>upload_max_filesize = 20M</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
            <tag> wordpress </tag>
            
            <tag> apache </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AIX解压和mount命令]]></title>
      <url>http://www.ibmer.info/aix-release-and-mount.html</url>
      <content type="html"><![CDATA[<h1 id="AIX上解压tar-gz"><a href="#AIX上解压tar-gz" class="headerlink" title="AIX上解压tar.gz"></a>AIX上解压tar.gz</h1><p>tar.gz file format<br>o  压缩<br>§ # tar cvf - folder | gzip &gt; filename.tar.gz<br>o  解压<br>§ # gunzip -c filename.tar.gz | tar -xvf -</p>
<h1 id="AIX上解压zip"><a href="#AIX上解压zip" class="headerlink" title="AIX上解压zip"></a>AIX上解压zip</h1><p>通过jar解压zip，觉得是最方便的，因为很多aix上没有安装其他zip解压软件。<br>§ # jar -xvf a.zip</p>
<h1 id="挂载ISO命令"><a href="#挂载ISO命令" class="headerlink" title="挂载ISO命令"></a>挂载ISO命令</h1><p>使用命令：loopmount -i xxx.iso -m /xxx -o “-V cdrfs -o ro”<br>注意2点：<br>1、iso文件处需要输入绝对路径；<br>2、挂载的路径如:/xxx需要是存放ISO文件的绝对路径。这样，我们就可以方便的在AIX下挂载ISO</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> OperatingSystem </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[DB2 V9.7静默安装]]></title>
      <url>http://www.ibmer.info/db2-v97-silent-install.html</url>
      <content type="html"><![CDATA[<h3 id="DB2-V9-7静默安装"><a href="#DB2-V9-7静默安装" class="headerlink" title="DB2 V9.7静默安装"></a>DB2 V9.7静默安装</h3><p>1.创建db2ese.rsp静默安装文件</p>
<p>[php]</p>
<p>LIC_AGREEMENT = ACCEPT<br>PROD = ENTERPRISE_SERVER_EDITION<br>FILE = /opt/IBM/db2/V9.7<br>INSTALL_TYPE = TYPICAL<br>DAS_CONTACT_LIST = LOCAL<br>DAS_USERNAME = dasusr1<br>DAS_GROUP_NAME = dasadm1<br>DAS_HOME_DIRECTORY = /home/dasusr1<br>DAS_PASSWORD = dasusr1<br>INSTANCE = db2inst1<br>db2inst1.TYPE = ese<br>db2inst1.NAME = db2inst1<br>db2inst1.GROUP_NAME = db2grp1<br>db2inst1.HOME_DIRECTORY = /home/db2inst1<br>db2inst1.PASSWORD = db2inst1<br>db2inst1.AUTOSTART = YES<br>db2inst1.SVCENAME = db2c_db2inst1<br>db2inst1.PORT_NUMBER = 50000<br>db2inst1.FCM_PORT_NUMBER = 60000<br>db2inst1.MAX_LOGICAL_NODES = 4<br>db2inst1.CONFIGURE_TEXT_SEARCH = NO<br>db2inst1.FENCED_USERNAME = db2fenc1<br>db2inst1.FENCED_GROUP_NAME = db2fgrp1<br>db2inst1.FENCED_HOME_DIRECTORY = /home/db2fenc1<br>db2inst1.FENCED_PASSWORD = db2fenc1<br>LANG = EN<br>INSTALL_TSAMP = NO<br>[/php]</p>
<p>2.DB2 V9.7安装指令</p>
<p>[shell]</p>
<p>#rm　-r /opt/IBM/db2/V9.7/lost+found</p>
<p>#cd　工作目录</p>
<p>#./db2setup -r /work/db2ese.rsp<br>DBI1191I  db2setup is installing and configuring DB2 according to the<br>      response file provided. Please wait.</p>
<p>iocp0 Filesystem size changed to 3276800<br>The execution completed successfully.</p>
<p>For more information see the DB2 installation log at &quot;/tmp/db2setup.log&quot;.</p>
<p>[/shell]</p>
<p>3.语言包静默安装文件db2nlpack.rsp</p>
<p>[shell]</p>
<p>PROD = NATIONAL_LANGUAGE_PACKAGE<br>FILE = /opt/IBM/db2/V9.7<br>INSTALL_TYPE = CUSTOM<br>LANG = EN<br>LANG = JP<br>[/shell]</p>
<p>4.语言包安装前，需要停止DB2</p>
<p>[shell]</p>
<p>#su - db2inst1<br>$db2 force application all<br>DB20000I  The FORCE APPLICATION command completed successfully.<br>DB21024I  This command is asynchronous and may not be effective immediately.</p>
<p>$db2 terminate<br>DB20000I  The TERMINATE command completed successfully.<br>$db2stop<br>2014-05-20 16:35:44     0   0   SQL1064N  DB2STOP processing was successful.<br>SQL1064N  DB2STOP processing was successful.<br>$exit</p>
<p>#su - dasusr1<br>$db2admin stop<br>SQL4407W  The DB2 Administration Server was stopped successfully.<br>$exit<br>#<br>[/shell]</p>
<p>5.语言包安装</p>
<p>[shell]</p>
<h1 id="db2setup-r-db2nlpack-rsp"><a href="#db2setup-r-db2nlpack-rsp" class="headerlink" title="./db2setup -r db2nlpack.rsp"></a>./db2setup -r db2nlpack.rsp</h1><p>DBI1191I  db2setup is installing and configuring DB2 according to the<br>      response file provided. Please wait.</p>
<p>The response file specified &quot;/tmp/GD_P/DB2/nlpack/db2nlpack.rsp&quot; is not<br>valid.</p>
<p>For more information see the DB2 installation log at &quot;/tmp/db2setup.log&quot;.</p>
<p>#/opt/IBM/db2/V9.7/install/db2ls -q -b /opt/IBM/db2V9.7/ -a | grep -i message<br>DB2_PRODUCT_MESSAGES_EN 9.7.0.9 9 Product Messages - English<br>DB2_PRODUCT_MESSAGES_JP 9.7.0.9 9 Product Messages - Japanese<br>#<br>[/shell]</p>
<p>6.Lincese安装</p>
<p>[shell]</p>
<p>lincese确认</p>
<p>#/opt/IBM/db2/V9.7/adm/db2licm -l</p>
<p>Product name:                     &quot;DB2 Enterprise Server Edition&quot;<br>License type:                     &quot;Trial&quot;<br>Expiry date:                      &quot;08/17/2014&quot;<br>Product identifier:               &quot;db2ese&quot;<br>Version information:              &quot;9.7&quot;</p>
<p>Product name:                     &quot;DB2 Connect Server&quot;<br>License type:                     &quot;Trial&quot;<br>Expiry date:                      &quot;08/17/2014&quot;<br>Product identifier:               &quot;db2consv&quot;<br>Version information:              &quot;9.7&quot;</p>
<p>lincese安装</p>
<p>#/opt/IBM/db2/V9.7/adm/db2licm -a /work/db2ese_o.lic</p>
<p>LIC1402I  License added successfully.<br>LIC1426I  This product is now licensed for use as outlined in your License Agreement.  USE OF THE PRODUCT CONSTITUTES ACCEPTANCE OF THE TERMS OF THE IBM LICENSE AGREEMENT, LOCATED IN THE FOLLOWING DIRECTORY: &quot;/opt/IBM/db2/license/en_US.iso88591&quot;</p>
<p>確認</p>
<p>#/opt/IBM/db2/V9.7/adm/db2licm -l</p>
<p>root@localhost:/opt/IBM/db2/adm)./db2licm -l<br>Product name:                     &quot;DB2 Enterprise Server Edition&quot;<br>License type:                     &quot;Restricted&quot;<br>Expiry date:                      &quot;Permanent&quot;<br>Product identifier:               &quot;db2ese&quot;<br>Version information:              &quot;9.7&quot;<br>Features:<br>DB2 Storage Optimization:         &quot;Not licensed&quot;</p>
<p>Product name:                     &quot;DB2 Connect Server&quot;<br>License type:                     &quot;Trial&quot;<br>Expiry date:                      &quot;08/17/2014&quot;<br>Product identifier:               &quot;db2consv&quot;<br>Version information:              &quot;9.7&quot;</p>
<p>[/shell]</p>
<p>7.启动确认</p>
<p>[shell]</p>
<p>#su - db2inst1<br>$db2start<br>05/20/2014 16:43:53     0   0   SQL1063N  DB2START processing was successful.<br>SQL1063N  DB2START processing was successful.</p>
<p>$db2 list db directory<br>SQL1031N  The database directory cannot be found on the indicated file system.<br>SQLSTATE=58031<br>[/shell]</p>
<p>8.版本确认</p>
<p>[shell]<br>$db2level<br>DB21085I  This instance or install (instance name, where applicable:<br>&quot;db2inst1&quot;) uses &quot;64&quot; bits and DB2 code release &quot;SQL09079&quot; with level<br>identifier &quot;080A0107&quot;.<br>Informational tokens are &quot;DB2 v9.7.0.9&quot;, &quot;s131204&quot;, &quot;IP23554&quot;, and Fix Pack<br>&quot;9&quot;.<br>Product is installed at &quot;/opt/IBM/db2&quot;.</p>
<p>[/shell]</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/topic/com.ibm.db2.luw.qb.server.doc/doc/r0025127.html" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span>バージョン 9.7 のインストール</a></li>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9r5/topic/com.ibm.db2.luw.qb.server.doc/doc/r0025127.html" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span> バージョン 9.5 のインストール</a></li>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9/topic/com.ibm.db2.udb.doc/doc/t0024287.htm" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span> バージョン 9.1 のインストール</a></li>
<li>lincense安装</li>
<li><ul>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9/topic/com.ibm.db2.udb.uprun.doc/doc/t0006749.htm" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span> 9.1</a></li>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9r5/topic/com.ibm.db2.luw.qb.server.doc/doc/t0006749.html" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span> 9.5</a></li>
<li><a href="http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/topic/com.ibm.db2.luw.qb.server.doc/doc/t0006749.html" title="(新しいタブまたはウィンドウで開く)" target="_blank" rel="external"><span class="resultofText">DB2</span> 9.7</a></li>
</ul>
</li>
</ul>
<h4 id="下载DB2-V9-7版本"><a href="#下载DB2-V9-7版本" class="headerlink" title="下载DB2 V9.7版本"></a>下载DB2 V9.7版本</h4><p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg27007053%20" target="_blank" rel="external">Download DB2 Fix Packs by version for DB2 for Linux, UNIX and Windows</a></p>
<h3 id="DB2-Version-9-7-Activation-key-part-numbers"><a href="#DB2-Version-9-7-Activation-key-part-numbers" class="headerlink" title="DB2 Version 9.7 Activation key part numbers"></a><a href="http://www-01.ibm.com/support/docview.wss?uid=swg21445568" target="_blank" rel="external">DB2 Version 9.7 Activation key part numbers</a></h3><p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DB2 </tag>
            
            <tag> Database </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IBM License Metric Tool 7.5安装设定 ILMT]]></title>
      <url>http://www.ibmer.info/ilmt-install.html</url>
      <content type="html"><![CDATA[<h1 id="IBM-License-Metric-Tool-7-5安装设定"><a href="#IBM-License-Metric-Tool-7-5安装设定" class="headerlink" title="IBM License Metric Tool 7.5安装设定"></a>IBM License Metric Tool 7.5安装设定</h1><h3 id="安装ILMT比较繁琐，大致顺序如下"><a href="#安装ILMT比较繁琐，大致顺序如下" class="headerlink" title="安装ILMT比较繁琐，大致顺序如下"></a>安装ILMT比较繁琐，大致顺序如下</h3><p>DB2 v9.7.0.9安装-&gt;</p>
<p>ILMT V7.5.0.0-&gt;</p>
<p>TIP2.2.0.0更新到2.2.0.3-&gt;</p>
<p>TIP2.2.0.3更新到2.2.0.7-&gt;</p>
<p>ILMT V7.5Fixpack1安装-&gt;</p>
<p>ILMTV7.5Interim Fix 9安装</p>
<p>&nbsp;</p>
<h3 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h3><p>安装的时候，<br>如果1G内存，512M paging space，会报内存不足<br>4Gn内存,512M PS 不会错误，大概需要1h内<br>1G内存，4.5G ps，也不会出错，不过时间会要3.5h以上<br>另外，SoftwareCatalog更新，一般要24h小时内。</p>
<p>&nbsp;</p>
<h3 id="安装顺序："><a href="#安装顺序：" class="headerlink" title="安装顺序："></a>安装顺序：</h3><p>1.下载ILMT安装包</p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg24030690" target="_blank" rel="external">Download IBM License Metric Tool 7.5 for AIX platforms</a></p>
<p><a href="http://www-01.ibm.com/support/docview.wss?rs=3505&amp;uid=swg24028383" target="_blank" rel="external">Download IBM License Metric Tool 7.2.2 for AIX platforms</a></p>
<p>2.下载DB2 V9.7版本</p>
<p><a href="http://www-01.ibm.com/support/docview.wss?uid=swg27007053%20" target="_blank" rel="external">Download DB2 Fix Packs by version for DB2 for Linux, UNIX and Windows</a></p>
<p>3.<a href="http://115.29.220.91/db2-v97-silent-install.html" title="DB2 V9.7静默安装" target="_blank" rel="external">安装DB2 9.7</a></p>
<p>4.<a href="http://pic.dhe.ibm.com/infocenter/tivihelp/v53r1/index.jsp?topic=%2Fcom.ibm.lmt75.doc%2Fcom.ibm.license.mgmt.planinconf.doc%2Fr_software_reqs_other.html" target="_blank" rel="external">ILMT安装前提</a></p>
<p>硬盘空间需求：</p>
<p><table border="1"></table></p>
<p><tbody></tbody></p>
<p><tr></tr></p>
<p><th>Partition</th></p>
<p><th>Needed Space</th></p>
<p><th>Free Space</th><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/opt</td></p>
<p><td align="RIGHT">2376.4 MB</td></p>
<p><td align="RIGHT">3915.8 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/usr</td></p>
<p><td align="RIGHT">3.9 MB</td></p>
<p><td align="RIGHT">7477.8 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/tmp</td></p>
<p><td align="RIGHT">1584.7 MB</td></p>
<p><td align="RIGHT">2384.2 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/opt/IBM/LMT</td></p>
<p><td align="RIGHT">251.6 MB</td></p>
<p><td align="RIGHT">4095.1 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/</td></p>
<p><td align="RIGHT">748.0 kB</td></p>
<p><td align="RIGHT">838.4 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/home/db2inst1</td></p>
<p><td align="RIGHT">755.7 MB</td></p>
<p><td align="RIGHT">1687.2 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/var</td></p>
<p><td align="RIGHT">9.5 MB</td></p>
<p><td align="RIGHT">3812.0 MB</td><br></p>
<p><tr></tr></p>
<p><td align="LEFT">/opt/netcool</td></p>
<p><td align="RIGHT">412.5 MB</td></p>
<p><td align="RIGHT">98.5 MB</td><br><br><br><br>&nbsp;</p>
<p>5.ILMT安装文件设置</p>
<pre>需要注意，TIP安装在LMT目录下，比如安装在/opt/IBM/LMT/TIP目录下，
最后安装FP0001的时候，会导致权限错误。

[shell]

RSP_LICENSE_ACCEPTED=true
RSP_TLM_ROOT=/opt/IBM/LMT
RSP_SETUP_TYPE=Production
RSP_ADMINDB_COMPONENT=true
RSP_ADMIN_COMPONENT=true
RSP_TLM_TLMSRV_PASSWD=xxxxxx
RSP_TLM_DB_PATH=/home/db2inst1
RSP_TLM_SERVER_FIPS_ENABLED=false
RSP_TLM_MIN_SEC_PORT=9988
RSP_TLM_MED_SEC_PORT=9999
RSP_TLM_MAX_SEC_PORT=9977
RSP_TLM_DB_HOST=localhost
RSP_TLM_DB_PORT=50000
RSP_INSTALL_TIP_INTO_WAS_HOME=false
RSP_TIP_HOME=/opt/IBM/TIP
RSP_TIP_ADMIN_NAME=xxxxxx
RSP_TIP_ADMIN_PASSWD=xxxxxx
RSP_TIP_WC_PORT=16310
RSP_TIP_WC_SECURE_PORT=16311
RSP_TIP_BOOTSRAP_PORT=16312
RSP_TIP_SOAP_CONNECTOR_PORT=16313
RSP_TIP_WC_ADMIN_PORT=16314
RSP_TIP_WC_ADMIN_SECURE_PORT=16315
RSP_TIP_DCS_UNICAST_PORT=16316
RSP_TIP_IPC_CONNECTOR_PORT=16318
RSP_TIP_ORB_LISTENER_PORT=16320
RSP_TIP_SAS_SSL_SERVERAUTH_PORT=16321
RSP_TIP_CSIV2_SSL_MUTUALAUTH_PORT=16322
RSP_TIP_CSIV2_SSL_SERVERAUTH_PORT=16323
RSP_TIP_REST_NOTIFICATION_PORT=16324

[/shell]

6.执行ILMT安装设定

[shell]
## UNIX/Linux:
## &lt;ILMT/TAD4D&gt;-server-7.5-.sh -f &lt;full_path_to_response_file&gt; -i silent
## Example:
## ILMT-server-7.5-linux-ppc64.sh -f /installResponseProduction.txt -i silent
##
## Windows:
## &lt;ILMT/TAD4D&gt;-server-7.5-.bat -f &lt;full_path_to_response_file&gt; -i silent
## Example:
## TAD4D-server-7.5-windows-x86_64.bat -f &quot;c:\images\installResponseProduction.txt&quot; -i silent
[/shell]

[shell]
#./ILMT-server-7.5-aix-ppc64.sh -f `pwd`/installResponseProduction.txt -i silent
Running installation wizard for AIX
Preparing to install...
Extracting the JRE from the installer archive...
Unpacking the JRE...
Extracting the installation resources from the installer archive...
Configuring the installer for this system's environment...

Launching installer...

Preparing SILENT Mode Installation...

===============================================================================
IBM License Metric Tool                          (created with InstallAnywhere)
-------------------------------------------------------------------------------

===============================================================================
Installing...
-------------

 [==================|==================|==================|==================]
 [------------------|------------------|------------------|------------------]

Installation Complete.
All logs can be found in: /opt/IBM/LMT/LMT_7.5_20140521-122847_12583022_logs.tar.gz

[/shell]

7.几个常见错误：

[shell]
#./ILMT-server-7.5-aix-ppc64.sh -f `pwd`/installResponseProduction.txt -i silent
Running installation wizard for AIX
Preparing to install...
Extracting the JRE from the installer archive...
Unpacking the JRE...
 Extracting the installation resources from the installer archive...
Configuring the installer for this system's environment...

Launching installer...

Preparing SILENT Mode Installation...

===============================================================================
IBM License Metric Tool                          (created with InstallAnywhere)
-------------------------------------------------------------------------------

cp: /opt/IBM/TIP/profiles/TIPProfile/logs: No such file or directory
The following file/directory could not be copied: /opt/IBM/TIP/profiles/TIPProfile/logs
All logs can be found in: /tmp/LMT_7.5_20140521-120347_6029368_logs.tar.gz
ERROR: 52
##
[/shell]

<pre>这些一般都是内存不足导致的错误，
如果不能追加内存，请扩展Page Space。

8.安装成功后，可以访问
https://www.ibmer.info:16311/ibm/console/
查看ILMT的登录界面</pre>
[caption id="attachment_97" align="alignnone" width="781"][![ILMT登录界面](http://115.29.220.91/wp-content/uploads/2014/05/1.jpg)](http://115.29.220.91/wp-content/uploads/2014/05/1.jpg) ILMT登录界面[/caption]

关于ILMT登录端口，大家会比较迷惑，其实和was一样，可以通过AboutThisProfile.txt文件查看。

[shell]
root@localhost:# cat /opt/IBM/TIP/profiles/TIPProfile/logs/AboutThisProfile.txt
Application server environment to create: Application server
Location: /opt/IBM/TIP/profiles/TIPProfile
Disk space required: 200 MB
Profile name: TIPProfile
Make this profile the default: True
Node name: TIPNode
Host name: loopback
Enable administrative security (recommended): True
Administrative console port: 16314
Administrative console secure port: 16315
HTTP transport port: 16310
HTTPS transport port: 16311
Bootstrap port: 16312
SOAP connector port: 16313
Run application server as a service: False
Create a Web server definition: False
Performance tuning setting: Standard
[/shell]

&nbsp;

9.版本查看

[shell]
root@localhost: # ./opt/IBM/LMT/cli/lmtcli.sh
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
x Licensed Materials - Property of IBM
x 5724-T40 IBM License Metric Tool
x 5725-C68 IBM Tivoli Asset Discovery for Distributed
x Command line version 7.5 for AIX .
x (C) Copyright IBM Corp. 2002, 2010.
x All Rights Reserved. US Government Users Restricted Rights - Use,
x duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
x For more detailed help, refer to product manual.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

lmt&gt;login -u username -p password

CODCL0033I: The command has been successfully performed.

lmt&gt;info
Server version: IBM License Metric Tool  7.5
Installation date: May 21, 2014
Database name: TLMA
Build version: 201112061421
The start day for the next report: May 21, 2014

CODCL0033I: The command has been successfully performed.

lmt&gt;
[/shell]

通过 TLMA database查看版本

[shell]

root@localhost:/)# su - db2inst1
db2inst1@localhost:/home/db2inst1)# db2 connect to TLMA

Database Connection Information

Database server        = DB2/AIX64 9.7.9
SQL authorization ID   = DB2INST1
Local database alias   = TLMA

db2inst1@localhost:/home/db2inst1)# db2 &quot;select * from adm.control&quot;

NAME                                     VALUE
---------------------------------------- ------------------------------------------------------------
ID1                                      5d4f80e2403a4f6e9437a12986d23cca
ID2                                      1cd397a5014610009d097f000001
DB_CREATION                              2014-05-21 04:38:42.0
FIRST_TO_AGGREGATE_DAY                   2014-05-21
FIRST_TO_CLEAN_USAGE_DAY                 2014-05-21
LAST_AGGREGATE_STEP                      0
MAX_WAITING_TIME_FOR_LATE_DATA           14
MAX_WAITING_TIME_FOR_STDALONE_LATE_DATA  183
DATABASE_VERSION                         7.5
DATABASE_SCHEMA_VERSION                  7.5.0.0
VUT_VERSION                              2011-10-05
ADMIN_ID                                 854238
MIGRATION_TIME                           2014-05-21 04:38:42.0
FIRST_AGENT_ID_NOT_ASSIGNED              1
LAST_INVENTORY_EXEC_TIME                 2014-05-21 05:53:46.715
INV_BUILD_STEP_FIELD                     0
LIC_USAGE_RETENTION_TIME                 180
COMPUTER_GUID_RULE                       None
LAST_NOTIFICATION_TIME                   2014-05-21 05:54:00.541
LATEST_PURGED_DATE                       2014-05-20
AGGR_REC_BLOCKED                         false
MAX_NUMBER_OF_HOSTNAMES_IN_EMAIL         1000
BUILD_VERSION                            201112061421
HW_SCAN_CONFIG_TIME                      2014-05-21 04:38:42.0
FULL_HW_SCAN_CONFIG_TIME                 2014-05-21 04:38:42.0
TIER_TABLE_VERSION                       2010-10-05
SW_SCAN_CONFIG_TIME                      1970-01-01 00:00:00.0
REMOTE_SW_SCAN_CONFIG_TIME               1970-01-01 00:00:00.0
LAST_SOFT_INV_MQT_UPDATE_TIME            2014-05-21 05:53:53.241183
CATALOG_UPDATE_SEQ_NUMBER                1
MAX_SELECTED_ROWS_COUNT                  200
CATALOG_FILE_READY                       true

32 record(s) selected.

db2inst1@localhost:/home/db2inst1)
[/shell]

10.
升级TIP2.2.0.0-&gt;2.2.0.3，[参考](http://pic.dhe.ibm.com/infocenter/tivihelp/v53r1/index.jsp?topic=%2Fcom.ibm.lmt75.doc%2Fcom.ibm.license.mgmt.planinconf.doc%2Ft_updating_server_silently.html)

[shell]
./patch_installer-aix-ppc64.sh -silent -patchHome `pwd` -response `pwd`/tip-update.txt
vi tip-update.txt
./patch_installer-aix-ppc64.sh -patchHome `pwd` -response `pwd`/tip-update.txt -silent
[/shell]

升级TIP2.2.0.3-&gt;2.2.0.7

[shell]
#./install.sh -i silent -f response.txt
[/shell]

[升级2.2.0.7错误处理：](http://www-01.ibm.com/support/docview.wss?uid=swg21641413)
CTGWA0058E The current prerequisites of Tivoli Integrated Portal are not satisfied. See detailed logs in /opt/IBM/TIP/logs/validatePrereqs.out.

Checking Installation Requirements
Passed Operating system validation check 15:49:49
Passed System memory prerequisite check 15:49:49
Passed Accessibility prerequisite check 15:49:49
freespace=1685344
tmpfree=1456664
Passed Disk space prerequisite check 15:49:49
Failed ! System available memory (1 MB) does not meet minimum requirements (128 MB). 15:49:49

&nbsp;

为什么要升级TIP到2.2.0.7？如果不升级TIP，会有CODIN0501E错误，[详细参考](http://www-01.ibm.com/support/docview.wss?uid=swg21616758)
<pre>升级ILMT7.5.0.0-&gt;7.5.0.1 (ILMT Fixpack1)
./ILMT-server-7.5.0.10-aix-ppc64.sh -f `pwd`/upgradeResponse.txt -i silent

升级ILMT7.5.0.1-&gt;7.5.0.19

</pre>

<h3 id="下载资料"><a href="#下载资料" class="headerlink" title="下载资料"></a><a href="http://pan.baidu.com/s/1i3FWorN" target="_blank" rel="external">下载资料</a></h3><p>链接：<a href="http://pan.baidu.com/s/1i3FWorN" target="_blank" rel="external">http://pan.baidu.com/s/1i3FWorN</a> 密码：k9q3</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="http://www-01.ibm.com/support/docview.wss?uid=jpn1J1011451" target="_blank" rel="external">IBM License Metric Tool 7.5導入・設定ガイド(Tivoli-14-04)</a></p>
</pre>]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ilmt </tag>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OSI七层模型]]></title>
      <url>http://www.ibmer.info/osi.html</url>
      <content type="html"><![CDATA[<table class="table-view log-set-param"><br><tbody><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">具体7层</div></td><br><td align="left" valign="center" width="186"><br><div class="para">数据格式</div></td><br><td align="left" valign="center" width="222"><br><div class="para">功能与连接方式</div></td><br><td align="left" valign="center" width="137"><br><div class="para">典型设备</div></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">应用层 Application</div></td><br><td></td><br><td align="left" valign="center" width="222"><br><div class="para">网络服务与使用者应用程序间的一个接口</div></td><br><td></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">表示层 Presentation</div></td><br><td></td><br><td align="left" valign="center" width="222"><br><div class="para">数据表示、数据安全、数据压缩</div></td><br><td></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">会话层 Session</div></td><br><td></td><br><td align="left" valign="center" width="222"><br><div class="para">建立、管理和终止会话</div></td><br><td></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">传输层 Transport</div></td><br><td align="left" valign="center" width="186"><br><div class="para">数据组织成数据段Segment</div></td><br><td align="left" valign="center" width="222"><br><div class="para">用一个寻址机制来标识一个特定的应用程序（端口号）</div></td><br><td></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">网络层 Network</div></td><br><td align="left" valign="center" width="186"><br><div class="para">分割和重新组合数据包Packet</div></td><br><td align="left" valign="center" width="222"><br><div class="para">基于网络层地址（IP地址）进行不同网络系统间的路径选择</div></td><br><td align="left" valign="center" width="137"><br><div class="para">路由器</div></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">数据链路层 Data Link</div></td><br><td align="left" valign="center" width="186"><br><div class="para">将比特信息封装成数据帧Frame</div></td><br><td align="left" valign="center" width="222"><br><div class="para">在物理层上建立、撤销、标识逻辑链接和链路复用 以及差错校验等功能。通过使用接收系统的硬件地址或物理地址来寻址</div></td><br><td align="left" valign="center" width="137"><br><div class="para">网桥、交换机、网卡</div></td><br></tr><br><tr><br><td align="left" valign="center" width="178"><br><div class="para">物理层Physical</div></td><br><td align="left" valign="center" width="186"><br><div class="para">传输比特（bit）流</div></td><br><td align="left" valign="center" width="222"><br><div class="para">建立、维护和取消物理连接</div></td><br><td align="left" valign="center" width="137"><br><div class="para">光纤、同轴电缆、</div><br><div class="para">双绞线、中继器和集线器</div></td><br></tr><br></tbody><br></table><br>&nbsp;<br><br>TCP/IP结构对应OSI<br><table class="table-view log-set-param" width="99%"><br><tbody><br><tr><br><th><br><div class="para">TCP/IP</div></th><br><th><br><div class="para">OSI</div></th><br></tr><br><tr><br><td align="left" valign="center"><br><div class="para">应用层</div></td><br><td align="left" valign="center"><br><div class="para">应用层</div><br><div class="para">表示层</div><br><div class="para">会话层</div></td><br></tr><br><tr><br><td align="left" valign="center"><br><div class="para">主机到主机层（TCP）（又称传输层）</div></td><br><td align="left" valign="center"><br><div class="para"><a href="http://baike.baidu.com/view/239605.htm" target="_blank" rel="external">传输层</a></div></td><br></tr><br><tr><br><td align="left" valign="center"><br><div class="para">网络层（IP）(又称互联层)</div></td><br><td align="left" valign="center"><br><div class="para"><a href="http://baike.baidu.com/view/239600.htm" target="_blank" rel="external">网络层</a></div></td><br></tr><br><tr><br><td rowspan="2" align="left" valign="center" height="0"><br><div class="para">网络接口层（又称链路层）</div></td><br><td align="left" valign="center"><br><div class="para">数据链路层</div></td><br></tr><br><tr><br><td align="left" valign="center"><br><div class="para">物理层</div></td><br></tr><br></tbody><br></table>]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> network </tag>
            
            <tag> 网络 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ILMT Agent Install on AIX安装]]></title>
      <url>http://www.ibmer.info/ilmt-agent-install.html</url>
      <content type="html"><![CDATA[<h1 id="ILMT-Agent-Install安装"><a href="#ILMT-Agent-Install安装" class="headerlink" title="ILMT Agent Install安装"></a>ILMT Agent Install安装</h1><h3 id="（1）ILMT-agent-和-server版本信息"><a href="#（1）ILMT-agent-和-server版本信息" class="headerlink" title="（1）ILMT agent 和 server版本信息"></a>（1）ILMT agent 和 server版本信息</h3><p>IBM的产品就是版本信息太多，fixpack也太多很难搞清楚。</p>
<p>[php]<br>7.2.0 – base release number<br>7.2.0.1 – ILMT 7.2.0 with Fix Pack 1<br>7.2.0.11 – ILMT 7.2.0 with Fix Pack 1 and Interim Fix 1</p>
<p>7.2.1 – base release number<br>7.2.1.1 – ILMT 7.2.1 with Fix Pack 1<br>7.2.1.11 – IILMT 7.2.1 with Fix Pack 1 and Interim Fix 1<br>7.2.1.12 – ILMT 7.2.1 with Fix Pack 1 and Interim Fix 2<br>7.2.1.2 – ILMT 7.2.1 with Fix Pack 2</p>
<p>7.2.2 – base release number<br>7.2.2.01 – ILMT 7.2.2. with Interim Fix 1<br>7.2.2.1 – ILMT 7.2.2 with Fix Pack 1<br>7.2.2.12 – ILMT 7.2.2 with Fix Pack 1 and Interim Fix 2<br>7.2.2.2 - ILMT 7.2.2 with Fix Pack 2<br>7.2.2.23 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 3<br>7.2.2.24 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 4<br>7.2.2.25 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 5<br>7.2.2.26 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 6<br>7.2.2.27 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 7<br>7.2.2.28 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 8<br>7.2.2.29 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 9<br>7.2.2.210 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 10<br>7.2.2.211 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 11<br>7.2.2.212 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 12<br>7.2.2.213 - ILMT 7.2.2 with Fix Pack 2 and Interim Fix 13</p>
<p>7.5 - base release number<br>7.5.0.01 - ILMT 7.5 with Interim Fix 1<br>7.5.0.02 - ILMT 7.5 with Interim Fix 2<br>7.5.0.03 - ILMT 7.5 with Interim Fix 3<br>7.5.0.10 - ILMT 7.5 with Fix Pack 1<br>7.5.0.14 - ILMT 7.5 with Fix Pack 1 and Interim Fix 4<br>7.5.0.15 - ILMT 7.5 with Fix Pack 1 and Interim Fix 5<br>7.5.0.16 - ILMT 7.5 with Fix Pack 1 and Interim Fix 6<br>7.5.0.17 - ILMT 7.5 with Fix Pack 1 and Interim Fix 7<br>7.5.0.18 - ILMT 7.5 with Fix Pack 1 and Interim Fix 8<br>7.5.0.19 - ILMT 7.5 with Fix Pack 1 and Interim Fix 9<br>7.5.0.110 - ILMT 7.5 with Fix Pack 1 and Interim Fix 10<br>7.5.0.111 - ILMT 7.5 with Fix Pack 1 and Interim Fix 11<br>7.5.0.112 - ILMT 7.5 with Fix Pack 1 and Interim Fix 12<br>7.5.0.113 - ILMT 7.5 with Fix Pack 1 and Interim Fix 13<br>7.5.0.114 - ILMT 7.5 with Fix Pack 1 and Interim Fix 14<br>7.5.0.115 - ILMT 7.5 with Fix Pack 1 and Interim Fix 15<br>7.5.0.116 - ILMT 7.5 with Fix Pack 1 and Interim Fix 16<br>7.5.0.117 - ILMT 7.5 with Fix Pack 1 and Interim Fix 17<br>7.5.0.118 - ILMT 7.5 with Fix Pack 1 and Interim Fix 18<br>7.5.0.119 - ILMT 7.5 with Fix Pack 1 and Interim Fix 19</p>
<p>[/php]</p>
<h3 id="（2）ILMT-Agent版本确认指令"><a href="#（2）ILMT-Agent版本确认指令" class="headerlink" title="（2）ILMT Agent版本确认指令"></a>（2）ILMT Agent版本确认指令</h3><p>[php]</p>
<p>tlmagent.exe -v (Windows)<br>tlmagent -v (Linux/Unix)</p>
<p>[/php]</p>
<h3 id="3-ILMT-Agent-Install-on-AIX-ILMT-agent安装"><a href="#3-ILMT-Agent-Install-on-AIX-ILMT-agent安装" class="headerlink" title="(3)ILMT Agent Install on AIX, ILMT agent安装"></a>(3)ILMT Agent Install on AIX, ILMT agent安装</h3><p>[shell]</p>
<p>对于支持使用 ILMT_INSTALL_PATH 环境变量的安装，请设置变量以指向定制位置：<br>export ILMT_INSTALL_PATH=PATH_TO_DESIRED_LOCATION</p>
<p>对于支持使用基于用户指定的安装位置 (USIL) 的重定位机制的安装，请执行以下步骤：<br>创建 custom_location 目录：<br>mkdir -p /custom_location</p>
<p>将该目录设为用户指定的安装位置 (USIL)：<br>mkusil -R /custom_location</p>
<p>在此位置中安装代理程序：<br>installp -R /custom_location -acgXd full_path_to_the_installation_package_dir ILMT-TAD4D-agent-7.5-aix-ppc ILMT-TAD4D-agent</p>
<p>代理程序安装在 /custom_location/opt/itlm 和 /custom_location/var/itlm 文件夹中</p>
<p>[/shell]</p>
<p><a href="http://pic.dhe.ibm.com/infocenter/tivihelp/v53r1/index.jsp?topic=%2Fcom.ibm.lmt75.doc%2Fcom.ibm.license.mgmt.planinconf.doc%2Ft_deploying_agents_aix_plusnim.html" target="_blank" rel="external">参考资料</a></p>
<h3 id="4-lslpp指令找不到ILMT-agent？？"><a href="#4-lslpp指令找不到ILMT-agent？？" class="headerlink" title="(4)lslpp指令找不到ILMT agent？？"></a>(4)lslpp指令找不到ILMT agent？？</h3><p>由于通过了mkusil -R指定了安装目录，会导致lslpp指令找不到ilmt的相关信息。</p>
<p>通过lslpp指定目录，执行下面指令就能正常显示了。</p>
<p>[shell]&lt;/pre&gt;</p>
<p>#lspp -R /export/appl/pkgs/itlm -al<br>&lt;pre&gt;[/shell]</p>
<h3 id="（5）一个错误信息的处理"><a href="#（5）一个错误信息的处理" class="headerlink" title="（5）一个错误信息的处理"></a>（5）一个错误信息的处理</h3><p>[shell]</p>
<p>#installp -R /opt/ilmt -acgXd ILMT-TAD4D-t -acgXd ILMT-TAD4D-agent-7.5-aix-ppc  ILMT-TAD4D-agent<br>+—————————————————————————–+<br>                    Pre-installation Verification…<br>+—————————————————————————–+<br>Verifying selections…installp: A system error occurred while attempting<br>        to access the Software Vital Product Data.<br>        Use local problem reporting procedures.<br>#<br>通过执行rmusil后重新执行安装指令</p>
<p>#rmusil -R /opt/ilmt<br>#<br>[/shell]</p>
<h3 id="（6）安装日志"><a href="#（6）安装日志" class="headerlink" title="（6）安装日志"></a>（6）安装日志</h3><p>[shell]</p>
<p>[/shell]</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> MiddleWare </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ilmt </tag>
            
            <tag> was </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WordPress插件开发-入门]]></title>
      <url>http://www.ibmer.info/wordpress-plugin.html</url>
      <content type="html"><![CDATA[<h1 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a><strong>介绍：</strong></h1><p>本文主要介绍wordpress plugin如何编写。该文介绍的是通过开发插件，在文章中添加文章链接，保证版权信息。</p>
<hr>
<p># </p>
<h1 id="WordPress插件开发-入门"><a href="#WordPress插件开发-入门" class="headerlink" title="WordPress插件开发-入门"></a><strong>WordPress插件开发-入门</strong></h1><p>（1）创建插件目录和插件php文件</p>
<p>[php]<br>/wp-content/plugins# mkdir ibmer-info<br>/wp-content/plugins# vi index.php<br>[/php]</p>
<p>（2）在index.php中编写内容</p>
<p>[php]<br>&lt;?php<br>/<em><br>Plugin Name: ibmer-info<br>Plugin URI: <a href="http://www.ibmer.info/">http://www.ibmer.info/</a><br>Description: This plugin is create by huangxy.<br>Author: Huangxy<br>Version: 0.1<br>Author URI: <a href="http://www.ibmer.info/">http://www.ibmer.info/</a>
</em>/<br>///文章添加版权<br>function get_content_info ($content){<br>global $post;<br>$content = $content.’&lt;div style=&quot;clear:both; border-top:1px dashed #e0e0e0; padding:10px 0 10px 0;&quot;&gt; » 版权所有©转载必须以链接形式注明作者和原始出处：&lt;a href=&quot;’.get_bloginfo(&quot;home&quot;).’&quot; title=&quot;点击去首页&quot;&gt;’.get_bloginfo(&quot;name&quot;).’&lt;/a&gt; » &lt;a title=&quot;本文地址&quot; href=&quot;’.get_permalink().’&quot;&gt;’.get_the_title().’&lt;/a&gt;&lt;/div&gt;’ ;<br>   return $content;<br>}<br>add_action(‘the_content’, ‘get_content_info’);<br>[/php]</p>
<p>（3）后台启动插件就有效果了。</p>
<hr>
<p># </p>
<h1 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a><strong>参考资料：</strong></h1><p><a href="http://codex.wordpress.org/zh-cn:%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6" target="_blank" rel="external">http://codex.wordpress.org/zh-cn:%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6</a></p>
<hr>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx支持WordPress固定链接，404错误修正]]></title>
      <url>http://www.ibmer.info/nginx-wordpress-404.html</url>
      <content type="html"><![CDATA[<h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a><strong>问题：</strong></h1><p>使用wordpress的固定链接时（如设置固定连接格式为 /%category%/%postname%.html ），报404的错误，nginx不支持wordpress的固定链接，需要自己进行设置。</p>
<p>&nbsp;</p>
<h1 id="解决思路："><a href="#解决思路：" class="headerlink" title="解决思路："></a><strong>解决思路：</strong></h1><p>创建wordpress.conf，将其包含进nginx.conf即可。</p>
<p>&nbsp;</p>
<h1 id="实现："><a href="#实现：" class="headerlink" title="实现："></a><strong>实现：</strong></h1><p>（1）创建wordpress.conf</p>
<p>[php]</p>
<p>#vi wordpress.conf</p>
<p>location / {<br>if (-f $request_filename/index.html){<br>rewrite (.<em>) $1/index.html break;<br>}<br>if (-f $request_filename/index.php){<br>rewrite (.</em>) $1/index.php;<br>}<br>if (!-f $request_filename){<br>rewrite (.*) /index.php;<br>}<br>}[/php]</p>
<p>(2)修改nginx.conf</p>
<p>[php]#vi nginx.conf</p>
<p>server<br>{<br>listen       80;<br>server_name gevin.me;<br>index index.html index.htm index.php;<br>root  /home/wwwroot;<br>include wordpress.conf;<br>location ~ .*.(php|php5)?$<br>{<br>fastcgi_pass  unix:/tmp/php-cgi.sock;<br>fastcgi_index index.php;<br>include fcgi.conf;<br>}</p>
<p>location /status {<br>stub_status on;<br>access_log   off;<br>}[/php]</p>
<p>&nbsp;</p>
<p>(3)重新加载nginx.conf配置文件</p>
<p>[php]#nginx -s reload<br>[/php]</p>
<p>通过上面就能用固定链接访问网站了。</p>
<p>&nbsp;</p>
<h1 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a><strong>扩展：</strong></h1><p>1、WordPress伪静态</p>
<p>[php]<br>if (-f $request_filename/index.html){<br>rewrite (.<em>) $1/index.html break;<br>}<br>if (-f $request_filename/index.php){<br>rewrite (.</em>) $1/index.php;<br>}<br>if (!-f $request_filename){<br>rewrite (.*) /index.php;<br>}<br>[/php]</p>
<p>2、PHPCMS伪静态</p>
<p>[php]<br>rewrite ^/caipu-([0-9]+)-([0-9]+)-([0-9]+).html /index.php?m=content&amp;amp;c=index&amp;amp;a=show&amp;amp;catid=$1&amp;amp;id=$2&amp;amp;page=$3 last;<br>rewrite ^/content-([0-9]+)-([0-9]+)-([0-9]+).html /index.php?m=content&amp;amp;c=index&amp;amp;a=show&amp;amp;catid=$1&amp;amp;id=$2&amp;amp;page=$3 last;<br>rewrite ^/list-([0-9]+)-([0-9]+).html /index.php?m=content&amp;amp;c=index&amp;amp;a=lists&amp;amp;catid=$1&amp;amp;page=$2 last;<br>rewrite ^/tag-([^.]<em>)-([0-9]+)-([0-9]+).html /index.php?m=content&amp;amp;c=tag&amp;amp;catid=$2&amp;amp;tag=$1&amp;amp;page=$3 last;<br>rewrite ^/comment-([0-9]+)-([0-9]+)-([0-9]+).html /index.php?m=comment&amp;amp;c=index&amp;amp;a=init&amp;amp;commentid=content_$1-$2-$3 last;<br>rewrite ^/([^.]</em>).html /index.php?m=member&amp;amp;c=index&amp;amp;a=$1 last;<br>[/php]</p>
<p>3、DEDECMS伪静态</p>
<p>[php]<br>rewrite &quot;^/index.html$&quot; /index.php last;<br>rewrite &quot;^/list-([0-9]+).html$&quot; /plus/list.php?tid=$1 last;<br>rewrite &quot;^/list-([0-9]+)-([0-9]+)-([0-9]+).html$&quot; /plus/list.php?tid=$1&amp;amp;totalresult=$2&amp;amp;PageNo=$3 last;<br>rewrite &quot;^/view-([0-9]+)-1.html$&quot; /plus/view.php?arcID=$1 last;<br>rewrite &quot;^/view-([0-9]+)-([0-9]+).html$&quot; /plus/view.php?aid=$1&amp;amp;pageno=$2 last;<br>rewrite &quot;^/tags.html$&quot; /tags.php last;<br>rewrite &quot;^/tag-([0-9]+)-([0-9]+).html$&quot; /tags.php?/$1/$2/ last;<br>[/php]</p>
<p>4、Discuz7伪静态</p>
<p>[php]<br>rewrite ^/archiver/((fid|tid)-[\w-]+.html)$ /archiver/index.php?$1 last;<br>rewrite ^/forum-([0-9]+)-([0-9]+).html$ /forumdisplay.php?fid=$1&amp;amp;page=$2 last;<br>rewrite ^/thread-([0-9]+)-([0-9]+)-([0-9]+).html$ /viewthread.php?tid=$1&amp;amp;extra=page\%3D$3&amp;amp;page=$2 last;<br>rewrite ^/space-(username|uid)-(.+).html$ /space.php?$1=$2 last;<br>rewrite ^/tag-(.+).html$ /tag.php?name=$1 last;<br>[/php]</p>
<p>5、DiscuzX伪静态</p>
<p>[php]<br>rewrite ^([^.]<em>)/topic-(.+).html$ $1/portal.php?mod=topic&amp;amp;topic=$2 last;<br>rewrite ^([^.]</em>)/article-([0-9]+)-([0-9]+).html$ $1/portal.php?mod=view&amp;amp;aid=$2&amp;amp;page=$3 last;<br>rewrite ^([^.]<em>)/forum-(\w+)-([0-9]+).html$ $1/forum.php?mod=forumdisplay&amp;amp;fid=$2&amp;amp;page=$3 last;<br>rewrite ^([^.]</em>)/thread-([0-9]+)-([0-9]+)-([0-9]+).html$ $1/forum.php?mod=viewthread&amp;amp;tid=$2&amp;amp;extra=page%3D$4&amp;amp;page=$3 last;<br>rewrite ^([^.]<em>)/group-([0-9]+)-([0-9]+).html$ $1/forum.php?mod=group&amp;amp;fid=$2&amp;amp;page=$3 last;<br>rewrite ^([^.]</em>)/space-(username|uid)-(.+).html$ $1/home.php?mod=space&amp;amp;$2=$3 last;<br>rewrite ^([^.]*)/([a-z]+)-(.+).html$ $1/$2.php?rewrite=$3 last;<br>if (!-e $request_filename) {<br>return 404;<br>}<br>[/php]</p>
<p>6、ECSHOP伪静态</p>
<p>[php]<br>if (!-e $request_filename)<br>{<br>rewrite &quot;^/index.html&quot; /index.php last;<br>rewrite &quot;^/category$&quot; /index.php last;<br>rewrite &quot;^/feed-c([0-9]+).xml$&quot; /feed.php?cat=$1 last;<br>rewrite &quot;^/feed-b([0-9]+).xml$&quot; /feed.php?brand=$1 last;<br>rewrite &quot;^/feed.xml$&quot; /feed.php last;<br>rewrite &quot;^/category-([0-9]+)-b([0-9]+)-min([0-9]+)-max([0-9]+)-attr([^-]<em>)-([0-9]+)-(.+)-([a-zA-Z]+)(.</em>).html$&quot; /category.php?id=$1&amp;amp;brand=$2&amp;amp;price_min=$3&amp;amp;price_max=$4&amp;amp;filter_attr=$5&amp;amp;page=$6&amp;amp;sort=$7&amp;amp;order=$8 last;<br>rewrite &quot;^/category-([0-9]+)-b([0-9]+)-min([0-9]+)-max([0-9]+)-attr([^-]<em>)(.</em>).html$&quot; /category.php?id=$1&amp;amp;brand=$2&amp;amp;price_min=$3&amp;amp;price_max=$4&amp;amp;filter_attr=$5 last;<br>rewrite &quot;^/category-([0-9]+)-b([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.<em>).html$&quot; /category.php?id=$1&amp;amp;brand=$2&amp;amp;page=$3&amp;amp;sort=$4&amp;amp;order=$5 last;<br>rewrite &quot;^/category-([0-9]+)-b([0-9]+)-([0-9]+)(.</em>).html$&quot; /category.php?id=$1&amp;amp;brand=$2&amp;amp;page=$3 last;<br>rewrite &quot;^/category-([0-9]+)-b([0-9]+)(.<em>).html$&quot; /category.php?id=$1&amp;amp;brand=$2 last;<br>rewrite &quot;^/category-([0-9]+)(.</em>).html$&quot; /category.php?id=$1 last;<br>rewrite &quot;^/goods-([0-9]+)(.<em>).html&quot; /goods.php?id=$1 last;<br>rewrite &quot;^/article_cat-([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.</em>).html$&quot; /article_cat.php?id=$1&amp;amp;page=$2&amp;amp;sort=$3&amp;amp;order=$4 last;<br>rewrite &quot;^/article_cat-([0-9]+)-([0-9]+)(.<em>).html$&quot; /article_cat.php?id=$1&amp;amp;page=$2 last;<br>rewrite &quot;^/article_cat-([0-9]+)(.</em>).html$&quot; /article_cat.php?id=$1 last;<br>rewrite &quot;^/article-([0-9]+)(.<em>).html$&quot; /article.php?id=$1 last;<br>rewrite &quot;^/brand-([0-9]+)-c([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+).html&quot; /brand.php?id=$1&amp;amp;cat=$2&amp;amp;page=$3&amp;amp;sort=$4&amp;amp;order=$5 last;<br>rewrite &quot;^/brand-([0-9]+)-c([0-9]+)-([0-9]+)(.</em>).html&quot; /brand.php?id=$1&amp;amp;cat=$2&amp;amp;page=$3 last;<br>rewrite &quot;^/brand-([0-9]+)-c([0-9]+)(.<em>).html&quot; /brand.php?id=$1&amp;amp;cat=$2 last;<br>rewrite &quot;^/brand-([0-9]+)(.</em>).html&quot; /brand.php?id=$1 last;<br>rewrite &quot;^/tag-(.<em>).html&quot; /search.php?keywords=$1 last;<br>rewrite &quot;^/snatch-([0-9]+).html$&quot; /snatch.php?id=$1 last;<br>rewrite &quot;^/group_buy-([0-9]+).html$&quot; /group_buy.php?act=view&amp;amp;id=$1 last;<br>rewrite &quot;^/auction-([0-9]+).html$&quot; /auction.php?act=view&amp;amp;id=$1 last;<br>rewrite &quot;^/exchange-id([0-9]+)(.</em>).html$&quot; /exchange.php?id=$1&amp;amp;act=view last;<br>rewrite &quot;^/exchange-([0-9]+)-min([0-9]+)-max([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.<em>).html$&quot; /exchange.php?cat_id=$1&amp;amp;integral_min=$2&amp;amp;integral_max=$3&amp;amp;page=$4&amp;amp;sort=$5&amp;amp;order=$6 last;<br>rewrite ^/exchange-([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.</em>).html$&quot; /exchange.php?cat_id=$1&amp;amp;page=$2&amp;amp;sort=$3&amp;amp;order=$4 last;<br>rewrite &quot;^/exchange-([0-9]+)-([0-9]+)(.<em>).html$&quot; /exchange.php?cat_id=$1&amp;amp;page=$2 last;<br>rewrite &quot;^/exchange-([0-9]+)(.</em>).html$&quot; /exchange.php?cat_id=$1 last;<br>}<br>[/php]</p>
<p>7、PHPWind伪静态</p>
<p>[php]<br>rewrite ^(.<em>)-htm-(.</em>)$ $1.php?$2 last;<br>rewrite ^(.*)/simple/([a-z0-9_]+.html)$ $1/simple/index.php?$2 last;<br>[/php]</p>
<p>8、SaBlog2.0伪静态</p>
<p>[php]</p>
<h1 id="只带月份的归档"><a href="#只带月份的归档" class="headerlink" title="只带月份的归档"></a>只带月份的归档</h1><p>rewrite &quot;^/date/([0-9]{6})/?([0-9]+)?/?$&quot; /index.php?action=article&amp;amp;setdate=$1&amp;amp;page=$2 last;</p>
<h1 id="无分类翻页"><a href="#无分类翻页" class="headerlink" title="无分类翻页"></a>无分类翻页</h1><p>rewrite ^/page/([0-9]+)?/?$ /index.php?action=article&amp;amp;page=$1 last;</p>
<h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><p>rewrite ^/category/([0-9]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;cid=$1&amp;amp;page=$2 last;<br>rewrite ^/category/([^/]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;curl=$1&amp;amp;page=$2 last;</p>
<h1 id="归档、高级搜索"><a href="#归档、高级搜索" class="headerlink" title="归档、高级搜索"></a>归档、高级搜索</h1><p>rewrite ^/(archives|search|article|links)/?$ /index.php?action=$1 last;</p>
<h1 id="全部评论、标签列表、引用列表-带分页"><a href="#全部评论、标签列表、引用列表-带分页" class="headerlink" title="全部评论、标签列表、引用列表 带分页"></a>全部评论、标签列表、引用列表 带分页</h1><p>rewrite ^/(comments|tagslist|trackbacks|article)/?([0-9]+)?/?$ /index.php?action=$1&amp;amp;page=$2 last;</p>
<h1 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h1><p>rewrite ^/tag/([^/]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;item=$1&amp;amp;page=$2 last;</p>
<h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><p>rewrite ^/archives/([0-9]+)/?([0-9]+)?/?$ /index.php?action=show&amp;amp;id=$1&amp;amp;page=$2 last;</p>
<h1 id="RSS-rewrite-rss-0-9-rss-php-cid-1-last"><a href="#RSS-rewrite-rss-0-9-rss-php-cid-1-last" class="headerlink" title="RSS rewrite ^/rss/([0-9]+)?/?$ /rss.php?cid=$1 last;"></a>RSS rewrite ^/rss/([0-9]+)?/?$ /rss.php?cid=$1 last;</h1><p>rewrite ^/rss/([^/]+)/?$ /rss.php?url=$1 last;</p>
<h1 id="用户-rewrite-uid-0-9-0-9-index-php-action-article-amp-amp-uid-1-amp-amp-page-2-last"><a href="#用户-rewrite-uid-0-9-0-9-index-php-action-article-amp-amp-uid-1-amp-amp-page-2-last" class="headerlink" title="用户 rewrite ^/uid/([0-9]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;uid=$1&amp;amp;page=$2 last;"></a>用户 rewrite ^/uid/([0-9]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;uid=$1&amp;amp;page=$2 last;</h1><p>rewrite ^/user/([^/]+)/?([0-9]+)?/?$ /index.php?action=article&amp;amp;user=$1&amp;amp;page=$2 last;</p>
<h1 id="地图文件"><a href="#地图文件" class="headerlink" title="地图文件"></a>地图文件</h1><p>rewrite sitemap.xml sitemap.php last;</p>
<h1 id="自定义链接"><a href="#自定义链接" class="headerlink" title="自定义链接"></a>自定义链接</h1><p>rewrite ^(.*)/([0-9a-zA-Z-_]+)/?([0-9]+)?/?$ $1/index.php?action=show&amp;amp;alias=$2&amp;amp;page=$3 last;<br>[/php]</p>
<p>9、SHOPEX伪静态</p>
<p>[php]<br>if (!-e $request_filename) {<br>rewrite ^/(.+.(html|xml|json|htm|php|jsp|asp|shtml))$ /index.php?$1 last;<br>}<br>[/php]</p>
<p>10、Typecho伪静态</p>
<p>[php]<br>if (-f $request_filename/index.html){<br>rewrite (.<em>) $1/index.html break;<br>}<br>if (-f $request_filename/index.php){<br>rewrite (.</em>) $1/index.php;<br>}<br>if (!-f $request_filename){<br>rewrite (.*) /index.php;<br>}<br>[/php]</p>
<p>&nbsp;</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows dos wifi share]]></title>
      <url>http://www.ibmer.info/win-wifi-share.html</url>
      <content type="html"><![CDATA[<h3 id="start-wifi-share"><a href="#start-wifi-share" class="headerlink" title="start wifi share"></a>start wifi share</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">netsh wlan <span class="built_in">set</span> hostednetwork mode=allow ssid=yourssid key=password</div><div class="line">netsh wlan start hostednetwork</div><div class="line">pause</div></pre></td></tr></table></figure>
<h3 id="stop-wifi-share"><a href="#stop-wifi-share" class="headerlink" title="stop wifi share"></a>stop wifi share</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">netsh wlan stop hostednetwork</div><div class="line">pause</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> IT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[memo]]></title>
      <url>http://www.ibmer.info/memo.html</url>
      <content type="html"><![CDATA[<h3 id="Memo"><a href="#Memo" class="headerlink" title="Memo"></a>Memo</h3><ul>
<li>IFTTT feed channel</li>
<li>jekyll-feed -&gt; auto create feed.xml</li>
<li></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows </tag>
            
            <tag> IT </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
